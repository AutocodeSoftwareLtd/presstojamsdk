{"version":3,"file":"ptj.min.js","sources":["../presstojam/src/components/ptj-modal.vue","../node_modules/style-inject/dist/style-inject.es.js","../presstojam/src/js/client.js","../presstojam/src/js/map.js","../presstojam/src/js/route.js","../presstojam/src/components/ptj-button.vue","../presstojam/src/components/ptj-multiple-input.vue","../presstojam/src/components/ptj-multiple-select.vue","../presstojam/src/js/dictionary.js","../presstojam/src/components/ptj-string.vue","../presstojam/src/js/user.js","../presstojam/src/js/error.js","../presstojam/src/js/field.js","../presstojam/src/js/metarow.js","../presstojam/src/js/datacell.js","../presstojam/src/js/states.js","../presstojam/src/js/datarow.js","../presstojam/src/js/repo.js","../presstojam/src/components/ptj-tree-node.vue","../presstojam/src/components/ptj-flag.vue","../presstojam/src/components/ptj-id.vue","../presstojam/src/components/ptj-time.vue","../presstojam/src/components/ptj-table.vue","../presstojam/src/components/ptj-list.vue","../presstojam/src/components/ptj-filter-form.vue","../presstojam/src/components/ptj-pagination.vue","../presstojam/src/components/ptj-progress-bar.vue","../presstojam/src/components/ptj-create-form.vue","../presstojam/src/components/ptj-repo.vue","../presstojam/src/components/ptj-delete.vue","../presstojam/src/components/ptj-primary.vue","../presstojam/src/components/ptj-account-handler.vue","../presstojam/src/components/ptj-router.vue","../presstojam/src/js/controller.js","../import.js"],"sourcesContent":["<template>\r\n  <a @click=\"toggleShow\" class=\"ptj-modal-button\"><slot name=\"button\"></slot></a>\r\n  <teleport :disabled=\"disabled\" :to=\"location\">\r\n  <div class=\"ptj-modal-backdrop\" v-show=\"active\" :class=\"getClass\" :style=\"relstyle\">\r\n    <div class=\"ptj-modal\" :class=\"cls\">\r\n        <header>\r\n            <button\r\n          type=\"button\"\r\n          class=\"btn-close\"\r\n          @click=\"toggleShow\"\r\n        >\r\n          x\r\n        </button>\r\n        </header>\r\n      <slot :toggleShow=\"toggleShow\" name=\"default\">\r\n      </slot>\r\n    </div>\r\n  </div>\r\n  </teleport>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from \"vue\"\r\n\r\nconst props = defineProps({\r\n    location : {\r\n        default : 'body'\r\n    },\r\n    relative : {\r\n        default : false\r\n    },\r\n    cls : String\r\n});\r\n\r\nlet active = ref(false);\r\n\r\nfunction toggleShow() {\r\n    active.value = (active.value) ? false : true;\r\n}\r\n\r\nfunction getOffsetToWrapper(el) {\r\n    let obj = {\r\n        left : 0,\r\n        top : 0,\r\n        width : el.offsetWidth,\r\n        height : el.offsetHeight,\r\n        wrapper : 0\r\n    };\r\n    \r\n    while(!el.classList.contains('ptj-table-wrapper')) {\r\n        obj.left += el.offsetLeft;\r\n        obj.top += el.offsetTop;\r\n        el=el.parentNode;\r\n    }\r\n\r\n    obj.wrapper = el.offsetWidth;\r\n\r\n    return obj;\r\n}\r\n\r\nlet relstyle = computed(() => {\r\n    if (props.relative) {\r\n        let obj = getOffsetToWrapper(props.relative);\r\n        let right = obj.wrapper - (obj.left + obj.width);\r\n        return \"position:absolute;top:\" + (obj.top + obj.height) + \"px;right:0px;\";\r\n    } else {\r\n        return \"\";\r\n    }\r\n});\r\n\r\n\r\nlet disabled = computed(() => {\r\n    return (props.location) ? false : true;\r\n});\r\n\r\n\r\nlet getClass = computed(() => {\r\n    if (props.location == 'body') {\r\n        return \"ptj-modal-backdrop-full\";\r\n    } else {\r\n        return \"\";\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n</script>\r\n<style>\r\n.ptj-modal-backdrop-full {\r\n    position : absolute;\r\n    top : 0;\r\n    left : 0;\r\n    height : 100vh;\r\n    width : 100vw;\r\n}\r\n</style>","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","let custom_headers  = {};\r\nlet main_url;\r\n\r\nexport default {\r\n\r\n    initSettings(settings) {\r\n        main_url = settings.url;\r\n\r\n        if (settings.custom_headers) {\r\n            for(let name in settings.custom_headers) {\r\n                custom_headers[name] = settings.custom_headers[name];\r\n            }\r\n        }\r\n    },\r\n\r\n    run(method, url, params, body) {\r\n        const headers = new Headers();\r\n        if (params) {\r\n            headers.set('Content-Type', 'application/json');\r\n            body = params;\r\n        }\r\n\r\n        for(let i in custom_headers) {\r\n            headers.set(i, custom_headers[i]);\r\n        }\r\n\r\n        const options = {\r\n            method  : method,\r\n            mode : 'cors',\r\n            cache : 'no-cache',\r\n            credentials : 'include',\r\n            headers  : headers,\r\n            body : body\r\n        }\r\n\r\n        const _self = this;\r\n\r\n        return fetch(main_url + url, options)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw response;\r\n            }\r\n        });\r\n    }, \r\n    get(url, data) {\r\n        if (data) {\r\n            const params = new URLSearchParams();\r\n            for(let i in data) {\r\n                if (Array.isArray(data[i]) || (typeof data[i] == 'object' && data[i] !== null)) {\r\n                   params.append(i, JSON.stringify(data[i]));\r\n                } else params.append(i, data[i]);\r\n            }\r\n\r\n            if (url.indexOf(\"?\") == -1) url += \"?\";\r\n            else url += \"&\";\r\n            url += params.toString();\r\n        }\r\n        return  this.run('GET', url);\r\n    },\r\n\r\n    getprimary(url, data) {\r\n        return this.get(url, data);\r\n    },\r\n\r\n    post(url, data) {\r\n        //call our fetch response and return\r\n        return this.run('POST', url, JSON.stringify(data));\r\n    },\r\n\r\n    put(url, data) {\r\n        return this.run('PUT', url, JSON.stringify(data));\r\n    },\r\n\r\n    patch(url, data) {\r\n        return this.run('PATCH', url, null, data);\r\n    },\r\n\r\n    delete(url, data) {\r\n        return this.run('DELETE', url, JSON.stringify(data));\r\n    }\r\n}\r\n","class MapModel {\r\n\r\n    constructor() {\r\n        this._route = '';\r\n        this._model = '';\r\n        this._state = '';\r\n        this._key = 0;\r\n        this._to = '';\r\n        this._params = {};\r\n        this._base = \"/\";\r\n        this._default = false;\r\n    \r\n        const keys = Object.keys(this);\r\n\r\n        keys.forEach(property => {\r\n          if (property[0] == \"_\") {\r\n            Object.defineProperty(this, property.substring(1), {\r\n                get: function() { \r\n                    return this[property];\r\n                },\r\n                set: function(newValue) {\r\n                    if (newValue != this[property]) {\r\n                        this[property] = newValue;\r\n                    }\r\n                }\r\n            });\r\n          } \r\n        });\r\n\r\n\r\n        this.action_map = {\r\n            'post' : '-create',\r\n            'put' : '-update',\r\n            'delete' : '-delete',\r\n            'login' : '-login',\r\n            'logout' : '-logout',\r\n            'primary' : '-primary',\r\n            'parent' : '-parent',\r\n            'get' : ''\r\n        };\r\n\r\n    }\r\n\r\n    get id() {\r\n        return this.model + \"-\" + this.state + \"-\" + this.to;\r\n    }\r\n\r\n    reset() {\r\n        this.route = '';\r\n        this.model = '';\r\n        this.state = '';\r\n        this.key = 0;\r\n        this.to = '';\r\n        this.params = {};\r\n    }\r\n\r\n\r\n    convertToURL() {\r\n        let url = this._base + this.route + \"/\" + this.model + this.action_map[this.state];\r\n        if (this.key) url += \"-\" + this.key;\r\n        if (this.to) url += \"-to-\" + this.to;\r\n\r\n        let params = new URLSearchParams();\r\n        for(const i in this.params) {\r\n            if (!this.params[i]) continue;\r\n            if (typeof this.params[i] == 'object') {\r\n                let pts = [];\r\n                for(let x in this.params[i]) {\r\n                    pts.push(this.params[i][x]);\r\n                }\r\n                params.append(i, pts.join(\",\"));\r\n            } else {\r\n                params.append(i, this.params[i]);\r\n            }\r\n        }\r\n\r\n        let param_str = params.toString();\r\n        if (param_str) url += \"?\" + param_str;\r\n\r\n        return url;\r\n    }\r\n    \r\n    initSettings(settings) {\r\n        if (settings) this._base = settings.base;\r\n        this.convertFromURL();\r\n    }\r\n\r\n    convertFromURL() {\r\n        let url_obj = new URL(window.location.href);\r\n        let url = url_obj.pathname.replace(this.base, \"\");\r\n        url = url.replace(/^\\/+|\\/+$/g, '');\r\n\r\n        if (!url) return;\r\n\r\n\r\n        let parts = url.split(\"/\");\r\n\r\n        if (parts.length >= 2) {\r\n            this.route = parts[0];\r\n            url = parts[1];\r\n        }\r\n        \r\n        const _self = this;\r\n        url_obj.searchParams.forEach(function(value, key) {\r\n            _self.params[key] = (value.indexOf(\",\") > -1) ? value.split(\",\") : value;\r\n        });\r\n\r\n       \r\n        parts = url.split(\"-to-\");\r\n        if (parts.length > 1) {\r\n            this.to = parts[1];\r\n            url = parts[0];\r\n        }\r\n\r\n       \r\n        parts = url.split(\"-\");\r\n        let key = parts[parts.length - 1];\r\n        if (key == \"first\") {\r\n            this.key = key;\r\n            parts.pop();\r\n        } else if (!isNaN(key)) {\r\n            this.key = parseInt(key);\r\n            parts.pop();\r\n        }\r\n            \r\n        if (parts.length == 0) {\r\n            throw new Error(\"Can't convert this url string: \" + url);\r\n        }\r\n    \r\n        this.state = \"get\";\r\n        for(let i in this.action_map) {\r\n            if (this.action_map[i] == \"-\" + parts[parts.length - 1]) {\r\n                this.state = i\r\n                parts.pop();\r\n                break;\r\n            }\r\n        }\r\n        this.model = parts.join(\"-\");\r\n        if (!this.route) this.route = this.model;\r\n    }\r\n\r\n    getAll() {\r\n        return {\r\n            route : this.route,\r\n            model : this.model,\r\n            state : this.state,\r\n            key : this.key,\r\n            to : this.to,\r\n            params : this.params,\r\n            base : this.base,\r\n            default : this.default\r\n        };\r\n    }\r\n\r\n    apply(route) {\r\n        for(let i in route) {\r\n            this[i] = route[i];\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const Map = new MapModel();\r\n\r\n","import { reactive } from \"vue\"\r\nimport client from \"./client.js\"\r\nimport { Map } from \"./map.js\"\r\n\r\n\r\nlet model_settings = {};\r\n\r\nwindow.onpopstate = function() {\r\n    Map.reset();\r\n    Map.convertFromURL();\r\n    runRoute();\r\n}\r\n\r\nexport const RouteStore = reactive({ \r\n    component : '', \r\n    title : '',\r\n    name : '',\r\n    route : { \"children\" : [], parent : null, \"perms\" : []}, \r\n    slug : [],\r\n    sort : false\r\n});\r\n\r\nfunction setComponent() {\r\n    if (Map.state == \"get\" || Map.state == \"parent\") {\r\n        RouteStore.component = \"ptj-repo\";\r\n    } else if (Map.state == \"primary\") {\r\n        RouteStore.component = \"ptj-primary\";\r\n    } else if (Map.state == \"login\") {\r\n        RouteStore.component = \"ptj-account-handler\";\r\n    }\r\n}\r\n\r\n\r\nexport function initSettings(settings) {\r\n    if (settings) model_settings = settings;\r\n}\r\n\r\n\r\nexport function getModelSettings() {\r\n    if (model_settings[Map.model] && model_settings[Map.model][Map.state]) {\r\n        return model_settings[Map.model][Map.state];\r\n    }\r\n    return {};\r\n}\r\n\r\n\r\nexport function loadRoute() {\r\n    RouteStore.component = \"\";\r\n    RouteStore.route.children = [];\r\n    RouteStore.route.parent = null;\r\n    RouteStore.route.perms = [];\r\n    RouteStore.route.title = \"\";\r\n    RouteStore.route.name = \"\";\r\n    RouteStore.sort = false;\r\n    return client.get(\"/nav/route-points/\" + Map.route + \"/\" + Map.model)\r\n    .then(response => {   \r\n        RouteStore.route.children = response.children;\r\n        RouteStore.route.perms = response.perms;\r\n        RouteStore.route.parent = response.parent;\r\n        RouteStore.title = response.title;\r\n        RouteStore.name = response.name;\r\n        if (response.sort) RouteStore.sort = true;\r\n        setComponent();\r\n    })\r\n    .then(response => {\r\n\r\n    })\r\n    .catch(e => console.log(e));\r\n}\r\n\r\nexport function loadSlugTrail() {\r\n    RouteStore.slug = [];\r\n    let params = {};\r\n    if (Map.key) {\r\n        if (Map.state == \"parent\") params[\"--parentid\"] = Map.key;\r\n        else if (Map.state == \"primary\") params[\"--id\"] = Map.key;\r\n    } else {\r\n        return;\r\n    }\r\n\r\n    return client.get(\"/slug/\" + Map.route + \"/\" + Map.model, params)\r\n    .then(response => {\r\n        RouteStore.slug = response;\r\n        for(let i in RouteStore.slug) {\r\n            i=parseInt(i);\r\n            if (i > 0) {\r\n                RouteStore.slug[i].route = {\r\n                    model : RouteStore.slug[i].model,\r\n                    state : 'parent',\r\n                    key : RouteStore.slug[i].id\r\n                }\r\n            } else {\r\n                RouteStore.slug[i].route = {\r\n                    model : RouteStore.slug[i].model,\r\n                    state : 'get',\r\n                    key : 0\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\nexport function refresh() {\r\n    if (location.href == Map.base) location.reload();\r\n    else location.href = Map.base;\r\n}\r\n\r\nexport function redirect() {\r\n    addToHistory();\r\n    runRoute();\r\n}\r\n\r\nexport function addToHistory() {\r\n    const url_str = window.location.protocol + \"//\" + window.location.host +  Map.convertToURL();\r\n    const url = new URL(url_str);\r\n    window.history.pushState({'name' : url.pathname}, document.title, url);\r\n}\r\n\r\nexport function runRoute() {\r\n    loadRoute();\r\n    loadSlugTrail();\r\n}\r\n","<template>\r\n  <a class=\"ptj-button\" :key=\"route\" @click=\"run\">\r\n    <slot />\r\n  </a> \r\n</template>\r\n\r\n<script setup>\r\n\r\n\r\nimport { redirect } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\nconst props = defineProps({\r\n    route : Object\r\n});\r\n\r\n\r\nfunction run() {\r\n    for(let i in props.route) {\r\n        Map[i] = props.route[i];\r\n    }\r\n    Map.params = {};\r\n    redirect();\r\n}\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n    <div class=\"ptj-multiple-select\">\r\n        <div class=\"ptj-multiple-select-display\">\r\n            <div class=\"ptj-multiple-select-values\">\r\n                <div class=\"ptj-multiple-select-val\" v-for=\"val in field.change1\" :key=\"val\">\r\n                    {{ val }}\r\n                    <a class=\"ptj-multiple-select-val-remove\" @click=\"remove(val)\"><span class=\"material-icons\">close</span></a>\r\n                </div>\r\n            </div>\r\n            <input type=\"text\" v-model=\"custom_val\" />\r\n            <a @click=\"selectCustom\" class=\"ptj-multiple-select-add\">add</a>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script setup>\r\n\r\nimport { ref } from \"vue\"\r\n\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n});\r\n\r\nconst custom_val = ref(\"\");\r\n\r\nfunction remove(key) {\r\n    props.field.change = props.field.change.filter(function(item) {\r\n        return item !== key\r\n    });\r\n}\r\n\r\nfunction selectCustom() {\r\n    props.field.change1 = custom_val.value;\r\n    custom_val.value = \"\";\r\n}\r\n\r\n\r\n</script>\r\n<style scoped>\r\n.ptj-multiple-select-val {\r\n    display : inline-block;\r\n    border : 1px solid green;\r\n    margin-left : 2px;\r\n    margin-right : 2px;\r\n    padding : 2px;\r\n    background-color : green;\r\n}\r\n\r\n\r\n.ptj-multiple-select-val-remove {\r\n    color : red;\r\n}\r\n\r\n\r\n.ptj-multiple-select-display {\r\n    position :relative;\r\n    background-color : #fff;\r\n    border : 1px solid #cdcdcd;\r\n    min-height : 35px;\r\n\r\n}\r\n\r\n</style>","<template>\r\n    <div class=\"ptj-multiple-select\">\r\n        <div class=\"ptj-multiple-select-display\">\r\n            <div class=\"ptj-multiple-select-values\">\r\n                <div class=\"ptj-multiple-select-val\" v-for=\"val in field.change\" :key=\"val\">\r\n                    {{ field.getOption(val) }}\r\n                    <a class=\"ptj-multiple-select-val-remove\" @click=\"remove(val)\"><span class=\"material-icons\">close</span></a>\r\n                </div>\r\n            </div>\r\n            <a class=\"ptj-multiple-select-arrow\" @click=\"toggleList\">\r\n            <span class=\"material-icons\">{{ show_list.symbol }}</span>\r\n            </a>\r\n        </div>\r\n        <ul class=\"ptj-multiple-select-options\" v-show=\"show_list.display\" @click=\"select\">\r\n            <li v-for=\"option in field.options\" :key=\"option.key\" :data-key=\"option.key\">{{ option.value }}</li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n<script setup>\r\n\r\nimport { reactive, onMounted } from \"vue\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n});\r\n\r\nonMounted(() => {\r\n    if (props.field.reference) {\r\n        let url = \"/reference/\" + Map.model + \"/\" + props.field.name;\r\n        props.field.setReferenceOptions(url, {\"--parentid\":Map.key});\r\n    }\r\n});\r\n\r\n\r\nconst show_list = reactive({\r\n    display : false,\r\n    symbol : 'keyboard_arrow_down'\r\n});\r\n\r\n\r\nfunction toggleList() {\r\n    if (show_list.display) {\r\n        show_list.display = false;\r\n        show_list.symbol = 'keyboard_arrow_down';\r\n    } else {\r\n        show_list.display = true;\r\n        show_list.symbol = 'keyboard_arrow_up';\r\n    }\r\n}\r\n\r\n\r\nfunction remove(key) {\r\n    props.field.change = props.field.change.filter(function(item) {\r\n        return item !== key\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction select(e) {\r\n    props.field.change1 = e.target.getAttribute(\"data-key\");\r\n    toggleList();\r\n}\r\n</script>\r\n<style scoped>\r\n.ptj-multiple-select-val {\r\n    display : inline-block;\r\n    border : 1px solid green;\r\n    margin-left : 2px;\r\n    margin-right : 2px;\r\n    padding : 2px;\r\n    background-color : green;\r\n}\r\n\r\n\r\n.ptj-multiple-select-val-remove {\r\n    color : red;\r\n}\r\n\r\n.ptj-multiple-select-arrow {\r\n    position :absolute;\r\n    right : 2px;\r\n    top : 3px;\r\n}\r\n\r\n.ptj-multiple-select-display {\r\n    position :relative;\r\n    background-color : #fff;\r\n    border : 1px solid #cdcdcd;\r\n    min-height : 35px;\r\n\r\n}\r\n\r\n.ptj-multiple-select-options li {\r\n    list-style: none;\r\n    cursor: pointer;\r\n    margin-top : 2px;\r\n    border : 1px solid #cdcdcd;\r\n    background-color : #fff;\r\n}\r\n\r\n.ptj-multiple-select-options li:hover {\r\n    background-color : #f9f9fb;\r\n    transition : background-color .2s ease-out,border .2s ease-out;\r\n}\r\n</style>","let dictionary = {};\r\n\r\nexport function setDictionary(dict) {\r\n    dictionary = dict;\r\n}\r\n\r\n\r\nexport function getDictionary(id, vals) {\r\n    let str = \"\";\r\n    if (!vals) {\r\n        if (dictionary[id]) str = dictionary[id];\r\n        return str;\r\n    }\r\n    \r\n    if (vals.model) {\r\n        if (vals.field) {\r\n            if (vals.field.indexOf(\"/\") > -1) {\r\n                let exp = vals.field.split(\"/\");\r\n                vals.model = exp[0];\r\n                vals.field = exp[1];\r\n            }\r\n            \r\n            if (dictionary.models[vals.model] && dictionary.models[vals.model].fields[vals.field]) {\r\n                str= dictionary.models[vals.model].fields[vals.field][id];\r\n            }\r\n        } else {\r\n            if ( dictionary.models[vals.model]) {\r\n                str = dictionary.models[vals.model][id];\r\n            }\r\n        }\r\n    } else if (vals.type) {\r\n        if (dictionary[id][vals.type]) str = dictionary[id][vals.type];\r\n        else str = dictionary[id].def;\r\n    } else {\r\n        str = dictionary[id];\r\n    }\r\n\r\n    if (vals.val) {\r\n        str = str.replace( /\\{\\{(.*?)\\}\\}/g, vals.val);    \r\n\r\n        //s.replace( /\\{\\{(.*?)\\}\\}/g, function(x){          // this grabs replacement tags\r\n          //  return x.replace( /\\[(\\d+)\\]/g,'.$1' )});      \r\n    }\r\n\r\n    if (!str && vals.default) str = vals.default;\r\n    return str;\r\n}","<template>\r\n   <textarea v-if=\"tag=='textarea' && ctype=='edit'\"\r\n        v-bind=\"atts\" \r\n        :name=\"field.name\" \r\n        v-model=\"field.change\"></textarea>\r\n   <div v-else-if=\"tag=='textarea' && ctype=='view'\">{{ field.val }}</div>\r\n   <ptj-multiple-select v-else-if=\"tag=='select' && ctype == 'filter'\" :field=\"field\" />\r\n  <select v-else-if=\"tag=='select' && ctype=='edit'\" \r\n        v-model=\"field.change\"\r\n        :name=\"field.name\"\r\n        v-bind=\"atts\"\r\n         @blur=\"field.validateon = true\"\r\n        >\r\n        <option value=\"\" selected disabled>{{ getDictionary('ptj-string-default') }}</option>\r\n        <option v-for=\"option in field.options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <input v-else-if=\"ctype=='edit'\" v-bind=\"atts\"\r\n        :name=\"field.name\"\r\n        v-model=\"field.change\" \r\n        @blur=\"field.validateon = true\" />\r\n   <ptj-multiple-input :field=\"field\" v-else-if=\"ctype=='filter'\"/>\r\n  <span v-else-if=\"ctype=='view' && field.reference\">\r\n    <ptj-button :route=\"{model : field.reference, key : field.val, state:'primary' }\">{{ field.val }}</ptj-button>\r\n  </span>\r\n  <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n<script setup>\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjMultipleInput from \"./ptj-multiple-input.vue\"\r\nimport PtjMultipleSelect from \"./ptj-multiple-select.vue\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\nimport { computed } from \"vue\"\r\nconst props = defineProps({\r\n    field : {\r\n        type : Object,\r\n        required : true\r\n    },\r\n    type : {\r\n        type : String,\r\n        default : 'view'\r\n    }\r\n});\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n\r\nfunction isEnum(contains) {\r\n    if (contains.length == 0) return null;\r\n    let enums=[];\r\n    const regEx = new RegExp(/^[a-zA-Z]+[a-zA-Z0-9._]+$/);\r\n    for(let exp of contains) {\r\n        if (!exp) continue;\r\n        if (regEx.test(exp)) {\r\n            enums.push(exp);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    return enums;\r\n}\r\n\r\nconst tag = computed(() => {\r\nif (isEnum(props.field.contains)) {\r\n    props.field.setContainsAsOptions();\r\n    return \"select\";\r\n} else if (props.field.encrypted) {\r\n    return \"input\";\r\n} else if (props.field.html || props.field.max > 300) {\r\n    return \"textarea\";\r\n} else {\r\n    return \"input\";\r\n}\r\n});\r\n\r\n\r\nconst atts = computed(() => {\r\nlet atts = {};\r\nif (props.field.encrypted) {\r\n    atts.type = \"password\";\r\n}\r\n\r\nif (props.field.atts.readonly) {\r\n    atts.readonly = true;\r\n}\r\n\r\nif (props.field.atts.placeholder) {\r\n    atts.placeholder = field.placeholder;\r\n}\r\n\r\nif (props.field.atts.html) {\r\n    atts[\"data-html\"] = 1;\r\n}\r\nreturn atts;\r\n});\r\n\r\n\r\n</script>\r\n","import { reactive } from \"vue\"\r\nimport { refresh } from \"./route.js\"\r\nimport Client from \"./client.js\"\r\nimport { Map } from \"./map.js\"\r\nimport { setDictionary } from \"./dictionary.js\"\r\n\r\nexport const User = reactive({init : false, login : false, user : \"public\" });\r\n\r\nexport const NavStore = reactive({\r\n    cats : {}, \r\n    routes : [], \r\n});\r\n\r\nexport function logout() {\r\n    Client.post(\"/core/logout\")\r\n    .then(() => {\r\n        refresh();\r\n    });\r\n}\r\n\r\nfunction getDefault() {\r\n    for(let cat in NavStore.cats) {\r\n        for(let route of NavStore.cats[cat]) {\r\n            if (route.default) {\r\n                return route;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst user_check = 600000;\r\n\r\nexport function checkLoginStatus() {\r\n    Client.get(\"/core/check-user\")\r\n    .then(response => {\r\n        if (response.is_expired) {\r\n            return Client.put(\"/core/switch-tokens\")\r\n            .then(() => {\r\n                checkLoginStatus();\r\n            });\r\n        }\r\n    }).then(response => {\r\n        if (User.user != \"public\") setTimeout(checkLoginStatus, user_check);\r\n    }).catch(e => {\r\n        User.login = true;\r\n    });\r\n}\r\n\r\nexport function initUser(role = \"\") {\r\n    return Client.get(\"/core/check-user\")\r\n    .then(response => {\r\n        if (response.is_expired) {\r\n            return Client.put(\"/core/switch-tokens\")\r\n            .then(() => {\r\n                return Client.get(\"/core/check-user\");\r\n            });\r\n        } else {\r\n            return response;\r\n        }\r\n    })\r\n    .then(response => {\r\n        User.user = response.user;\r\n        User.role = response.role;\r\n        User.init = true;\r\n\r\n        if (User.role != role) {\r\n            let url = \"/core/change-role\";\r\n            if (role) url += \"/\" + role;\r\n            return Client.post(url)\r\n            .then(response => {\r\n                User.role = role;\r\n            });\r\n        }\r\n    }).then(() => {\r\n        checkLoginStatus();\r\n    }).then(() => {\r\n        return Client.get(\"/dictionary\")\r\n        .then(response => {\r\n            setDictionary(response);\r\n            return true;\r\n        });\r\n    }).catch(e => console.log(e));\r\n}\r\n\r\nexport function loadNav() {\r\n    NavStore.cats = {};\r\n    NavStore.routes = [];\r\n    return Client.get(\"/nav/site-map\")\r\n    .then(response => {\r\n        for(let cat in response) {\r\n            for(let route_name in response[cat]) {\r\n                const route = { model : route_name, state : response[cat][route_name].state };\r\n                if (response[cat][route_name].default) route.default = true;\r\n                route.route = route_name;\r\n                NavStore.routes.push(route);\r\n\r\n                if (!NavStore.cats[cat]) NavStore.cats[cat] = [];\r\n                NavStore.cats[cat].push(route);\r\n            }\r\n        }\r\n    })\r\n    .then(() => {\r\n        if (!Map.model) {\r\n            Map.apply(getDefault());\r\n        }\r\n        return true;\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n","const error_invalid_map = {\r\n            1 : \"too small\",\r\n            2 : \"too large\",\r\n            3 : \"contains incorrect characters\",\r\n            4 : \"doesn't contain required characters\",\r\n            5 : \"not unique\"\r\n}\r\n\r\nexport function getError(code) {\r\n    return error_invalid_map[code];\r\n}\r\n\r\nexport const Errors = {\r\n    OK : 0,\r\n    MIN_VALUE : 1,\r\n    MAX_VALUE : 2,\r\n    HAS : 3,\r\n    HAS_NOT : 4\r\n}\r\n","\r\nimport { Errors } from \"./error.js\"\r\nimport { reactive, computed } from \"vue\"\r\nimport Client from \"./client.js\"\r\n\r\n\r\nexport class Field {\r\n\r\n    constructor(name, obj = null) {\r\n        this._name = name;\r\n        this._type = \"\";\r\n        this._atts={}\r\n        this._confirm = false;\r\n        this._reference = \"\";\r\n        this._label = \"\";\r\n        this._store = reactive({ summary : 0, options : []});\r\n        this._default_val = null;\r\n        this._immutable = false;\r\n        this._encrypted = false;\r\n        this._min = null;\r\n        this._max = null;\r\n        this._contains = [];\r\n        this._notcontains = [];\r\n        this._recursive = false;\r\n        this._listeners = [];\r\n        \r\n        const keys = Object.keys(this);\r\n       \r\n        keys.forEach(property => {\r\n          if (property != \"_store\" && property[0] == \"_\") {\r\n            Object.defineProperty(this, property.substring(1), {\r\n                get: function() { \r\n                   return this[property];\r\n                },\r\n                set: function(newValue) {\r\n                    if (property == \"_type\") this._type = newValue.toLowerCase();\r\n                    else this[property] = newValue;\r\n                }\r\n            })\r\n          }\r\n        });\r\n      \r\n      \r\n        this.summary = computed({\r\n            get : () => {\r\n                return this._store.summary;\r\n            },\r\n            set : (val) => {\r\n                this._store.summary = (val) ? 1 : 0;\r\n            }\r\n        })\r\n\r\n        this.options = computed({\r\n            get : () => {\r\n                return this._store.options;\r\n            },\r\n            set : (options) => {\r\n                this._store.options = options;\r\n            }\r\n        });\r\n\r\n       \r\n        if (obj) {\r\n            for (let x in obj) {\r\n                if (x == \"summary\") this.summary = (obj[x]) ? 1 : 0;\r\n                else if (x == \"validation\") continue;\r\n                else if (x == \"type\") this.type = obj[x].toLowerCase();\r\n                else this[x] = obj[x];\r\n            }\r\n\r\n            this._min = obj.validation.min;\r\n            this._max = obj.validation.max;\r\n            if (obj.validation.contains) this._contains = obj.validation.contains.split(\"|\");\r\n            if (obj.validation.notcontains) this._notcontains = obj.validation.notcontains.split(\"|\");\r\n        }\r\n    }\r\n\r\n\r\n    getOption(key) {\r\n        for(let opt of this._store.options) {\r\n            if (opt.key == key) return opt.value;\r\n        }\r\n    }\r\n\r\n    setReferenceOptions(url, params) {\r\n        this._store.options = [];\r\n        return Client.get(url, params)\r\n        .then(response => {\r\n            for (let i in response) {\r\n                let key = response[i][\"--id\"];\r\n                let vals = [];\r\n                for(let x  in response[i]) {\r\n                    if (x != \"--id\") {\r\n                        vals.push(response[i][x]);\r\n                    }\r\n                }\r\n                this._store.options.push({ key: key, value: vals.join(\" \", vals) });\r\n            }\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    setContainsAsOptions() {\r\n        let options = [];\r\n        for(let exp of this._contains) {\r\n            options.push({ key : exp, value : exp});\r\n        }\r\n        this._store.options = options;\r\n    }\r\n\r\n    clean(val) {\r\n        if (this._type == \"checkbox\") return (val) ? 1 : 0;\r\n        else return val;\r\n    }\r\n\r\n\r\n    calcValue(value) {\r\n        if (!value) return \"\";\r\n        else return value;\r\n    }\r\n\r\n\r\n    validateSize(val) {\r\n        if (val < this._min) return Errors.MIN_VALUE;\r\n        else if (val > this._max) return Errors.MAX_VALUE;\r\n        else return Errors.OK;\r\n    }\r\n\r\n\r\n    validate(val) {\r\n        if (val === null) return;\r\n        let err;\r\n        if (isNaN(val)) {\r\n            const length = (val) ? val.length : 0;\r\n            err = this.validateSize(length);\r\n        } else {\r\n            err = this.validateSize(val);\r\n        }\r\n        if (err != Errors.OK) return err;\r\n\r\n        for(let nhas of this._notcontains) {\r\n            if (val.match(nhas)) return Errors.HAS_NOT;\r\n        }\r\n\r\n        if (this._contains.length == 0) return Errors.OK;\r\n        \r\n        for(let has of this._contains) {\r\n            if (val.match(has)) return Errors.OK;\r\n        }\r\n        return Errors.HAS;\r\n    }\r\n\r\n\r\n    trigger(val) {\r\n        for(let state of this._listeners) {\r\n            state(val);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Field } from \"./field.js\"\r\nimport { reactive } from \"vue\"\r\n\r\nexport class MetaRow {\r\n\r\n    constructor() {\r\n        this._cells = {};\r\n        this._children = [];\r\n        this._active = 0;\r\n        this._init = false;\r\n        this._store = reactive({index : null});\r\n        this._state_groups = {};\r\n      \r\n        const keys = Object.keys(this);\r\n\r\n        keys.forEach(property => {\r\n          if (property[0] == \"_\") {\r\n            Object.defineProperty(this, property.substring(1), {\r\n                get: function() { \r\n                    return this[property];\r\n                },\r\n                set: function(newValue) {\r\n                    this[property] = newValue;\r\n                }\r\n            });\r\n          } \r\n        });\r\n    }\r\n\r\n\r\n    addChild(name, child) {\r\n        this._children[name] = child;\r\n    }\r\n\r\n    addState(name, action) {\r\n        this._actions[name] = action;\r\n    }\r\n\r\n\r\n    resetSummary(arr) {\r\n\r\n        for(let i in this._cells) {\r\n            this._cells[i].summary = false;\r\n        }\r\n        \r\n        for(let i in arr) {\r\n            if (this._cells[arr[i]]) {\r\n                this._cells[arr[i]].summary = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    setStates(fields) {\r\n        for(let i in fields) {\r\n            let groups = {};\r\n            if (fields[i].states) {\r\n                for(const state of fields[i].states) {\r\n                    if (!groups[state.depends_on]) groups[state.depends_on] = [];\r\n                    groups[state.depends_on].push(state); \r\n                }\r\n            }\r\n            this._state_groups[i] = groups;\r\n        }\r\n    }\r\n\r\n    mapField(field, obj) {\r\n        this._cells[field] = new Field(field, obj);\r\n        if (this._cells[field].recursive) {\r\n            this._store.index = field;\r\n        }\r\n    }\r\n\r\n    map(fields, limited_fields = []) {\r\n        if (limited_fields.length > 0) {\r\n            for(let field of limited_fields) {\r\n                this.mapField(field, fields[field]);\r\n            }\r\n        } else {\r\n            for (let i in fields) {\r\n                this.mapField(i, fields[i]);\r\n            }\r\n        }\r\n        this.setStates(fields);\r\n    }\r\n\r\n\r\n    getCellByType(type) {\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].type == type) cells[i] = this._cells[i];\r\n        }\r\n        return cells;\r\n    }\r\n\r\n    showAll() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].summary = true;\r\n        }\r\n    }\r\n\r\n}","import { reactive, computed } from \"vue\"\r\nimport { getError } from \"./error.js\"\r\nimport { Map } from \"./map.js\"\r\n\r\nexport class DataCell {\r\n\r\n    constructor(meta) {\r\n        this._store = reactive({ meta : meta, value: null, change: null, display: null, error: 0, is_validate_on: false });\r\n\r\n\r\n        const meta_keys = Object.getOwnPropertyNames(meta);\r\n        const keys = Object.keys(this);\r\n\r\n        const _self = this;\r\n        meta_keys.forEach(property => {\r\n            if (property[0] != \"_\" && !keys.includes(property)) {\r\n                this[property] = computed({\r\n                    get: function () {\r\n                        return _self.store.meta[property];\r\n                    },\r\n                    set: function (newValue) {\r\n                        _self.store.meta[property] = newValue;\r\n                    }\r\n                })\r\n            }\r\n        });\r\n\r\n\r\n\r\n        this.error = computed({\r\n            get: () => { getError(this._store.error); },\r\n            set: val => { this._store.error = val }\r\n        });\r\n\r\n        this.showError = computed(() => {\r\n            return this._store.is_validate_on && this._store.error ? true : false;\r\n        });\r\n\r\n        if (this._store.meta.default_val) this._store.value = this._store.meta.default_val;\r\n        else if (this._store.meta.type == \"select\") this._store.value = 0;\r\n\r\n        this.val = computed({\r\n            get: () => {\r\n                return this._store.value;\r\n            },\r\n            set: (val) => {\r\n                this._store.value = this._store.meta.clean(val);\r\n                this._store.error = this._store.meta.validate(val);\r\n            }\r\n        });\r\n\r\n        this.change = computed({\r\n            get: () => {\r\n                if (this._store.change == null) return this._store.value;\r\n                else return this._store.change;\r\n            },\r\n            set: (val) => {\r\n                this._store.change = this._store.meta.clean(val);\r\n                this._store.error = this._store.meta.validate(val);\r\n                this._store.meta.trigger(val);\r\n            }\r\n        });\r\n\r\n        this.addParam = obj => {\r\n            if (this._store.value) {\r\n                const name = this.name;\r\n                console.log(\"Param is \", this.name.value);\r\n                obj[this.name.value] = this._store.value;\r\n            }\r\n        }\r\n\r\n\r\n        if (meta.type == \"time\") {\r\n\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.min;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null };\r\n                    this._store.change.min = this._store.meta.clean(val);\r\n                    this._store.error = this._store.meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.change2 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.max;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null };\r\n                    this._store.change.max = this._store.meta.clean(val);\r\n                    this._store.error = this._store.meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.filter = computed({\r\n                get: () => {\r\n                    return this._store.value;\r\n                },\r\n                set:(val) => {\r\n                    if (val) {\r\n                        this._store.value = val;\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                let cobj = {};\r\n                if (this._store.value) {\r\n                    if (this._store.value.min) cobj.min = this._store.value.min;\r\n                    if (this._store.value.max) cobj.max = this._store.value.max;\r\n                    if (Object.keys(cobj).length > 0) {\r\n                        obj[this.name.value] = cobj;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        } else if (meta.type == \"flag\") {\r\n\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (this._store.change == null) return 0;\r\n                    else if (!this._store.change) return 2;\r\n                    else return this._store.change;\r\n                },\r\n                set: (val) => {\r\n                    if (val == 0) {\r\n                        this._store.change = null;\r\n                        return;\r\n                    }\r\n                    if (val == 2) val = 0;\r\n                    this._store.change = this._store.meta.clean(val);\r\n                    this._store.error = this._store.meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.filter = computed({\r\n                get: () => {\r\n                    return this._store.value;\r\n                },\r\n                set:(val) => {\r\n                    this._store.value = val;\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value) {\r\n                    obj[this.name.value] = this._store.value;\r\n                }\r\n            }\r\n\r\n\r\n        } else if (meta.type == \"id\") {\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    let val = (this._store.change == null) ? [] : this._store.change;\r\n                    return val;\r\n                },\r\n                set: (val) => {\r\n                    if (this._store.change == null) this._store.change = [];\r\n                    if (this._store.change.includes(val)) return;\r\n                    this._store.change.push(this._store.meta.clean(val));\r\n                    this._store.error = this._store.meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.filter = computed({\r\n                get: () => {\r\n                    return this._store.value;\r\n                },\r\n                set:(val) => {\r\n                    this._store.value = val;\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value!= null) {\r\n                    obj[this.name.value] = this._store.value;\r\n                }\r\n            }\r\n\r\n            \r\n        } else if (meta.type == \"number\") {\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.min;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null }\r\n                    this._store.change.min = this._store.meta.clean(val);\r\n                    this._store.error = this._store.meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.filter = computed({\r\n                get: () => {\r\n                    return this._store.value;\r\n                },\r\n                set:(val) => {\r\n                    this._store.value = val;\r\n                }\r\n            });\r\n\r\n            this.change2 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.max;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null }\r\n                    this._store.change.max = this._store.meta.clean(val);\r\n                    this._store.error = this._store.meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value!= null) {\r\n                    obj[this.name.value] = this._store.value;\r\n                }\r\n            }\r\n\r\n        } else if (meta.type == \"string\") {\r\n\r\n            this.change = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) return \"\";\r\n                    else return this._store.change;\r\n                },\r\n                set: (val) => {\r\n                    this._store.change = this._store.meta.clean(val);\r\n                    this._store.error = this._store.meta.validate(val);\r\n                    this._store.meta.trigger(val);\r\n                }\r\n            });\r\n\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (this._store.change == null) return [];\r\n                    else return this._store.change;\r\n                },\r\n                set: (val) => {\r\n                    if (this._store.change == null) this._store.change = [];\r\n                    this._store.change.push(this._store.meta.clean(val));\r\n                    this._store.error = this._store.meta.validate(val);\r\n                }\r\n            });\r\n\r\n\r\n            this.filter = computed({\r\n                get: () => {\r\n                    return this._store.value;\r\n                },\r\n                set:(val) => {\r\n                    if (Array.isArray(val)) this._store.value = val;\r\n                    else if (val) this._store.value = [val];\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value) {\r\n                    let arr = [];\r\n                    for(let i in this._store.value) {\r\n                        if (this._store.value[i]) arr.push(\"%\" + this._store.value[i] + \"%\");\r\n                    }\r\n                    if (arr.length > 0) obj[this.name.value] = arr;\r\n                }\r\n            }\r\n\r\n        } \r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n\r\n    get meta() {\r\n        return this._store.meta;\r\n    }\r\n\r\n    set validateon(on) {\r\n        this._store.is_validate_on = on;\r\n    }\r\n\r\n    set display(display) {\r\n        this._store.display = display;\r\n    }\r\n\r\n    get display() {\r\n        if (this._store.display) return this._store.display;\r\n        else return this._store.value;\r\n    }\r\n\r\n    get store() {\r\n        return this._store;\r\n    }\r\n\r\n    resetMeta(meta) {\r\n        this._store.meta = meta;\r\n        if (meta.reference) {\r\n            let url = \"/reference/\" + Map.model + \"/\" + this.name;\r\n            let obj = {};\r\n            if (Map.state == \"primary\") obj[\"--id\"] = Map.key;\r\n            else obj[\"--parentid\"] = Map.key;\r\n            this._store.meta.setReferenceOptions(url, obj);\r\n        }\r\n    }\r\n\r\n    toString() {\r\n        return this._store.display;\r\n    }\r\n\r\n    isSummary() {\r\n        return this._store.meta.summary;\r\n    }\r\n\r\n    setReferenceOptions(url, params) {\r\n        this._store.meta.setReferenceOptions(url, params);\r\n    }\r\n\r\n    setContainsAsOptions() {\r\n        this._store.meta.setContainsAsOptions();\r\n    }\r\n\r\n    reset() {\r\n        this._store.change = null;\r\n        this._store.value = null;\r\n    }\r\n\r\n    getOption(key) {\r\n        if (this._store.meta.type == 'string') return key;\r\n        else return this._store.meta.getOption(key);\r\n    }\r\n\r\n    \r\n}\r\n","import { Field } from \"./field\";\r\n\r\nexport function createStateTrigger(name, states, cb) {\r\n\r\n    let group = [];\r\n    for(let i in states) {\r\n        let field = new Field(name, states[i]);\r\n        group.push({ depends_val : states[i].depends_val, field });\r\n    }\r\n    \r\n    return (val) => {\r\n        for(const state of group) {\r\n            if (state.depends_val == val) {\r\n                return cb(state.field);\r\n            }\r\n        }\r\n\r\n        //if we get to here, then set a default\r\n        for(const state of group) {\r\n            if (!state.depends_val) {\r\n                return cb(state.field);\r\n            }\r\n        }\r\n    }\r\n\r\n}           ","import { DataCell } from \"./datacell.js\"\r\nimport { reactive, computed } from \"vue\"\r\nimport { createStateTrigger } from \"./states.js\"\r\n\r\n\r\nexport class DataRow {\r\n\r\n    constructor(metarow) {\r\n        this._metarow = metarow;\r\n        this._cells = reactive({});\r\n        this._children = {};\r\n        this._ids = reactive({});\r\n        \r\n        \r\n\r\n\r\n        if (metarow) {\r\n            this.applyMetaRow(metarow);\r\n        }\r\n\r\n        this.cells = computed(() => {\r\n            return this._cells;\r\n        });\r\n        \r\n    }\r\n\r\n    \r\n\r\n    set children(children) {\r\n        this._children = children;\r\n    }\r\n\r\n    get children() {\r\n        return this._children;\r\n    }\r\n\r\n    get primary() {\r\n        return this._ids[\"--id\"];\r\n    }\r\n\r\n    get parent() {\r\n        return this._ids[\"--parentid\"];\r\n    }\r\n\r\n\r\n    clone() {\r\n        const data = new DataRow(this._metarow);\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            cells[i].val = this._cells[i].val;\r\n        }\r\n    \r\n        let children = {};\r\n        for(let i in data.children) {\r\n            children[i] = data.children[i].clone();\r\n        }\r\n        data.children = children;\r\n        return data;\r\n    }\r\n\r\n    \r\n    applyMetaRow(metarow) {\r\n        for(const i in metarow.cells) {\r\n            const field = metarow.cells[i];\r\n            this._cells[field.name] = new DataCell(field);\r\n        }\r\n\r\n        for(const i in metarow.children) {\r\n            this._children[i] = metarow.children[i];\r\n        }\r\n\r\n        let groups = metarow.state_groups;\r\n\r\n\r\n        for(let i in groups) {\r\n            for(let x in groups[i]) {\r\n                const _self = this;\r\n                let state = createStateTrigger(i, groups[i][x], field => {\r\n                    _self._cells[i].resetMeta(field);\r\n                });\r\n                this._cells[x].listeners.push(state);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    addChild(name, child) {\r\n        if (!this._children[name]) {\r\n            this._children[name] = [];\r\n        }\r\n        this._children[name].push(child);\r\n    }\r\n\r\n    set row(row) {\r\n        if (!row) return;\r\n\r\n        if (row[\"--id\"]) this._ids[\"--id\"] = row[\"--id\"];\r\n        if (row[\"--parentid\"]) this._ids[\"--parentid\"] = row[\"--parentid\"];\r\n\r\n        for(let field in this._cells) {\r\n            if (row.hasOwnProperty(field)) this._cells[field].val = row[field];\r\n        }\r\n\r\n        for(let child in this._children) {\r\n            this._children[child].row = row[child];\r\n        }\r\n    }\r\n\r\n\r\n    set filter(row) {\r\n        if (!row) return;\r\n\r\n        for(let field in this._cells) {\r\n            if (row.hasOwnProperty(field)) this._cells[field].filter = row[field];\r\n        }\r\n    }\r\n\r\n\r\n    getSummary() {\r\n        let str = [];\r\n        for(let i in this._cells) {\r\n            const cell = this._cells[i];\r\n            if (cell.isSummary()) {\r\n                const display = cell.display;\r\n                str.push(display);\r\n            }\r\n        }\r\n        return str.join(\" \");\r\n    }\r\n\r\n    toString() {\r\n        let str = [];\r\n        for(let i in this._cells) {\r\n            str.push(this._cells[i].display);\r\n        }   \r\n        return str.join(\" \");\r\n    }\r\n\r\n\r\n    serialize(changes_only = false) {\r\n        let data = {};\r\n        for(let i in this._cells) {\r\n            if (changes_only) {\r\n                if (this._cells[i].change != this._cells[i].val) {\r\n                    data[i] = this._cells[i].change;\r\n                }\r\n            } else {\r\n                if (this._cells[i].change != null) data[i] = this._cells[i].change;\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n\r\n    getCellByType(type) {\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].type == type) cells[i] = this._cells[i];\r\n        }\r\n        return cells;\r\n    }\r\n\r\n    clearErrors() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].error = 0;\r\n        }\r\n    }\r\n\r\n\r\n    reset() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].error = 0;\r\n            this._cells[i].change = null;\r\n        }\r\n    }\r\n\r\n    setErrors(err) {\r\n        for(let i in err) {\r\n            if (i.indexOf(\"__\") === 0) continue;\r\n            if (this._cells[i]) {\r\n                this._cells[i].error = err[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    convertToParams() {\r\n        let obj = {};\r\n        for(let i in this._cells) {\r\n            this._cells[i].addParam(obj);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    convertToAPIParams() {\r\n        let obj = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].type == \"asset\") continue;\r\n            this._cells[i].addAPIParam(obj);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    applyChangeData() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].val = this._cells[i].change;\r\n        }\r\n    }\r\n\r\n}","import { MetaRow } from \"./metarow.js\"\r\nimport { DataRow } from \"./datarow.js\"\r\nimport { Map } from \"./map.js\"\r\nimport { reactive } from \"vue\"\r\nimport client from \"./client.js\"\r\nimport { getModelSettings } from \"./route.js\" \r\n\r\n\r\nexport const RepoStore = reactive({meta : new MetaRow, data : [], indexes : {}, search : new DataRow() });\r\n\r\nexport function applySettings(settings) {\r\n    meta_settings = settings;\r\n}\r\n\r\nfunction indexData() {\r\n    RepoStore.indexes = {};\r\n    \r\n    for(const key in RepoStore.data) {\r\n        const row = RepoStore.data[key];\r\n        let ckey = row.cells[RepoStore.meta.store.index].val;\r\n        if (!RepoStore.indexes[ckey]) RepoStore.indexes[ckey] = [];\r\n        RepoStore.indexes[ckey].push(key);\r\n    }\r\n}\r\n\r\n\r\nfunction mapRepoData(response) {\r\n    RepoStore.data = [];\r\n    for (const i in response) {\r\n        let obj= new DataRow(RepoStore.meta);\r\n        obj.row = response[i];\r\n        RepoStore.data.push(obj);\r\n    }\r\n}\r\n\r\n\r\nfunction buildParams(meta_settings) {\r\n    let params = {};\r\n    if (!params) params = {};\r\n    if (Map.to) params.__to = Map.to;\r\n    if (meta_settings.to) params.__to = meta_settings.to;\r\n    if (Map.key) params[\"--parentid\"] = Map.key;\r\n    if (meta_settings.limit) params.__limit = meta_settings.limit;\r\n    if (meta_settings.fields) params.__fields = meta_settings.fields;\r\n    if (meta_settings.group) params.group = meta_settings.group;\r\n    if (Map.params._page) params.__limit = ((Map.params._page - 1) * params.__limit) + \",\" + params.__limit;\r\n    return params;\r\n}\r\n\r\nexport function resetRepo() {\r\n    RepoStore.meta = new MetaRow();\r\n    RepoStore.data = [];\r\n    RepoStore.indexes = {};\r\n    RepoStore.search = new DataRow();\r\n    RepoStore.max_pages = 0;\r\n}\r\n\r\n\r\nexport const loadRepo = async() => {\r\n    let meta_settings = getModelSettings();\r\n    \r\n    resetRepo();\r\n    let params = buildParams(meta_settings);\r\n    let url = \"/\" + Map.route + \"/\" + Map.model;\r\n    if (Map.state == \"parent\") url += \"/parent\";\r\n    return client.get(\"/route\" +url, params)\r\n    .then(response => {\r\n        RepoStore.meta.map(response.fields, meta_settings.fields);\r\n        if (meta_settings.show == 'all') {\r\n            RepoStore.meta.showAll();\r\n        }\r\n\r\n        RepoStore.search.applyMetaRow(RepoStore.meta);\r\n        RepoStore.search.filter = Map.params;\r\n        RepoStore.meta.init = true;\r\n\r\n        if (meta_settings.component) RepoStore.component = meta_settings.component;\r\n        else if (!RepoStore.meta.cells) RepoStore.component = \"\";\r\n        else RepoStore.component = (RepoStore.meta.store.index || RepoStore.meta.children.length > 0) ? \"tree\" : \"table\";\r\n    }).then(() => {\r\n        params = { ...params, ...RepoStore.search.convertToAPIParams()};\r\n        if (meta_settings.limit > 0) {\r\n            return client.get(\"/count/\" + Map.route + \"/\" + Map.model, params)\r\n            .then(response => {\r\n                RepoStore.max_pages = Math.ceil(response.count / meta_settings.limit);\r\n            })\r\n            .then(() => {\r\n                return client.get(\"/data\" + url, params);\r\n            })\r\n            .then(response => {\r\n                mapRepoData(response);\r\n                if (RepoStore.meta.store.index) indexData();\r\n                return response;\r\n            });\r\n        } else {\r\n            return client.get(\"/data\" + url, params)\r\n            .then(response => {\r\n                mapRepoData(response);\r\n                if (RepoStore.meta.store.index) indexData();\r\n                return response;\r\n            });\r\n        }\r\n    })\r\n    .catch(e => console.log(e));\r\n}\r\n","<template >\r\n    <div class=\"ptj-tree-node ptj-draggable\" :id=\"primary\" draggable=\"false\">\r\n        <div class=\"ptj-tree-node-row\">  \r\n            <div>\r\n                <a v-if=\"ischild\" data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle()\">\r\n                    <span class=\"material-icons\">subdirectory_arrow_right</span>\r\n                </a>\r\n                <a v-else data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle()\">\r\n                    <span class=\"material-icons\">keyboard_arrow_right</span>\r\n                </a>\r\n            </div>\r\n            <div v-if=\"RepoStore.meta.sortable\">\r\n                <a data-action=\"more\" class=\"button\" @click=\"prevent.stop\" @mousedown=\"setDraggable\" @mouseup=\"endDraggable\">\r\n                    <span class=\"material-icons\">drag_handle</span>\r\n                </a>\r\n            </div>\r\n            <div>{{ summary }}</div>\r\n            <ptj-button :route=\"{state:'primary', key:primary }\"><span class=\"material-icons\">arrow_forward_ios</span></ptj-button>\r\n        </div>\r\n        <ptj-tree-node v-for=\"(key, index) in children\" :row=\"key\" :ischild=\"true\"  :key=\"index\" v-show=\"store.toggle_state[primary]\" />\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, computed, onMounted } from \"vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport { RepoStore } from \"./../js/repo.js\"\r\n\r\nconst props = defineProps({\r\n    row : { \r\n        type : [String, Number],\r\n        required : true\r\n    },\r\n    draggable : Boolean,\r\n    ischild : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n});\r\n\r\nconst store = reactive({ toggle_state : {}, branch : null });\r\n\r\nfunction toggle() {\r\n    const index = store.branch.primary;\r\n    store.toggle_state[index] = (store.toggle_state[index]) ? false : true;\r\n}\r\n\r\nconst children = computed(() => {\r\n    if (!store.branch) return [];\r\n    const id = store.branch.primary;\r\n    return (RepoStore.indexes[id]) ? RepoStore.indexes[id] : [];\r\n});\r\n\r\nconst primary = computed(() => {\r\n    if (!store.branch) return 0;\r\n    return store.branch.primary;\r\n});\r\n\r\nconst summary = computed(() => {\r\n    if (!store.branch) return \"\";\r\n    return store.branch.getSummary();\r\n});\r\n\r\nonMounted(() => {\r\n    store.branch = RepoStore.data[props.row];\r\n});\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.model-tree.branch {\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  margin: 6px 0;\r\n  background-color:#111111;\r\n}\r\n\r\n.tree .ide-block {\r\n\tdisplay : none;\r\n}\r\n\r\n.dragArea {\r\n  min-height: 50px;\r\n  outline: 1px solid #777777;\r\n}\r\n\r\n\r\n</style>","<template>\r\n    <input class=\"ptj-checkbox\" type=\"checkbox\" :true-value=\"1\" :false-value=\"0\" :name=\"field.name\" v-model=\"field.change\" v-if=\"ctype=='edit'\">\r\n    <select v-else-if=\"ctype=='filter'\" :name=\"field.name\" v-model=\"field.change1\" class=\"ptj-filter-form-checkbox\">\r\n        <option :value='0'>{{ \"All\" }}</option>\r\n        <option :value='1'>{{ \"Checked\" }}</option>\r\n        <option :value='2'>{{ \"Unchecked\" }}</option>\r\n    </select>\r\n    <a v-else @click=\"submit()\"><span class=\"material-icons\">{{ icon }}</span></a>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from \"vue\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport client from \"./../js/client.js\"\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        type : String,\r\n        default : 'view'\r\n    },\r\n    id : Number\r\n});\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n\r\nfunction submit() {\r\n    let params = {};\r\n    params[\"--id\"] = props.id;\r\n    params[props.field.name] = (props.field.val == 1) ? 0 : 1;\r\n    return client.put(\"/data/\" + Map.route + \"/\" + Map.model, params)\r\n    .then(() => {\r\n        props.field.val = (props.field.val == 1) ? 0 : 1;\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n\r\nlet icon = computed(() => {\r\n    if (props.field.val == 1) {\r\n        return \"check_circle_outline\";\r\n    } else {\r\n        return \"highlight_off\"\r\n    }\r\n});\r\n</script>","<template>\r\n    <select v-if=\"ctype=='edit'\" \r\n        v-model=\"field.change\"\r\n        v-bind=\"field.atts\"\r\n        :name=\"field.name\"\r\n         @blur=\"field.validateon = true\"\r\n        >\r\n        <option value=\"0\" selected>{{ getDictionary('ptj-id-default') }}</option>\r\n        <option v-for=\"option in field.options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <ptj-multiple-select v-else-if=\"ctype=='filter'\" :field=\"field\" />\r\n  <span v-else-if=\"field.reference\">{{ field.getOption(field.val) }}</span>\r\n  <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { computed } from \"vue\"\r\nimport PtjMultipleSelect from \"./ptj-multiple-select.vue\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        default : 'view',\r\n        type : String\r\n    }\r\n});\r\n\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n\r\nlet options = computed(() => {\r\n    return props.field.options;\r\n});\r\n\r\n\r\n\r\n</script>","<template>\r\n  <input v-if=\"ctype=='edit'\"\r\n        :name=\"field.name\" \r\n        type=\"datetime-local\" \r\n        v-model=\"field.change\" \r\n        v-bind=\"field.atts\"\r\n        @blur=\"field.validateon = true\">\r\n   <div v-else-if=\"ctype=='filter'\">\r\n      <input \r\n        type=\"datetime-local\" \r\n        :name=\"field.name + 'min'\"\r\n        v-bind=\"field.atts\"\r\n        v-model=\"field.change1\">\r\n        -\r\n        <input \r\n            type=\"datetime-local\" \r\n            :name=\"field.name + 'max'\"\r\n            v-bind=\"field.atts\"\r\n            v-model=\"field.change2\"\r\n        >\r\n   </div>\r\n   <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from \"vue\"\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        default : 'view',\r\n        type : String\r\n    }\r\n});\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n</script>\r\n","<template>\r\n  <div class=\"ptj-table-wrapper\">\r\n    <table class=\"ptj-table\" :class=\"Map.model\">\r\n    <thead>\r\n        <tr class=\"ptj-table-header\" ref=\"tableheader\">\r\n        <th v-for=\"cell in RepoStore.meta.cells\" \r\n            v-show=\"cell.summary\" \r\n            :key=\"cell.name\" \r\n            class=\"ptj-table-header-cell\"\r\n            :class=\"cell.name\"\r\n            @click=\"orderBy(cell.name);\"\r\n        >{{ getDictionary('label', { \"model\" : Map.model, \"field\" : cell.name, def : cell.name }) }}\r\n            <span v-if=\"order.name == cell.name && order.dir == 'asc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_up</span>\r\n            <span v-if=\"order.name == cell.name && order.dir == 'desc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_down</span>\r\n        </th>\r\n        <th class=\"ptj-actions\">\r\n            <ptj-modal v-if=\"settings.disable_selectfields != true\" :location=\"false\" :relative=\"tableheader\">\r\n                <template #button>\r\n                    <span class=\"material-icons\">add</span> \r\n                </template>\r\n                <template #default>\r\n                    <ptj-selectfields ></ptj-selectfields> \r\n                </template>\r\n            </ptj-modal>\r\n        </th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"(obj, rindex) in RepoStore.data\" :key=\"rindex\" class=\"ptj-table-row\">\r\n        <td v-for=\"(field, name) in obj.cells\" :key=\"name\" v-show=\"field.summary\" class=\"ptj-table-cell\" :class=\"field.name\">\r\n          <ptj-asset v-if=\"field.type=='asset'\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" :field=\"field\" :id=\"obj.primary\" />\r\n          <ptj-id v-else-if=\"field.type=='id'\" :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.type=='time'\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" :field=\"field\"  />\r\n        </td>\r\n        <td class=\"ptj-actions\" >\r\n            <ptj-button :route=\"{state:'primary', key:obj.primary}\"><span class=\"material-icons\">arrow_forward_ios</span></ptj-button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjSelectfields from \"./ptj-selectfields.vue\"\r\nimport PtjModal from \"./ptj-modal.vue\"\r\nimport { reactive, ref } from \"vue\"\r\nimport { RepoStore } from \"./../js/repo.js\"\r\nimport { getModelSettings } from \"./../js/route.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\n\r\nlet settings = getModelSettings();\r\nlet order = reactive( { name : '', dir : ''});\r\nconst tableheader = ref(null);\r\n\r\nfunction orderBy(name) {\r\n    if (RepoStore.meta.pages > 0) {\r\n        order.dir = (!order.name != name || order.dir  == \"desc\") ? \"asc\" : \"desc\";\r\n        order.name = name;\r\n        let sort = [];\r\n        sort[order.name] = order.dir;\r\n        RepoStore.meta.sort = sort;\r\n        load();\r\n    } else {\r\n        //custom sort on the table\r\n        if (order.name != name || order.dir == \"desc\") {\r\n            RepoStore.data.sort(function(x, y) {\r\n                let xval = x.getCell(name).toVal();\r\n                let yval = y.getCell(name).toVal();\r\n                if (xval < yval) {\r\n                    return -1;\r\n                } else if (xval > yval) {\r\n                    return 1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n            order.name = name;\r\n            order.dir = \"asc\";\r\n        } else {\r\n            RepoStore.data.sort(function(x, y) {\r\n                let xval = x.getCell(name).toVal();\r\n                let yval = y.getCell(name).toVal();\r\n                if (xval < yval) {\r\n                    return 1;\r\n                } else if (xval > yval) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n            order.name = name;\r\n            order.dir = \"desc\";\r\n        }\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\ntable, thead, tbody, tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n.ptj-table-wrapper {\r\n    position : relative;\r\n}\r\n\r\n</style>","<template>\r\n    <div v-for=\"(combinations, index) in getIndexCombinations\" :key=\"index\">\r\n     <h3><span\r\n        v-for=\"(tag, index) in combinations.tags\"\r\n        :key=\"index\"\r\n        >{{ tag }}&nbsp;</span></h3>\r\n    <ul>\r\n       <li v-for=\"ckey in combinations.data\" :key=\"ckey\">\r\n         <ptj-button :route=\"route\">\r\n          {{  data[ckey].getSummary() }}\r\n         </ptj-button>\r\n       </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { computed, inject } from \"vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\ninject(\"data\");\r\ninject(\"indexes\");\r\n\r\nfunction getCombinations(tag, data, combos) {\r\n    const ncombos = [];\r\n    if (combos.length == 0) {\r\n        for(let d in data) {\r\n        ncombos.push({ tags : [ data[d].display ], data : data[d].contains});\r\n        }\r\n    } else {\r\n        for (let c of combos) {\r\n          for(let d in data) {\r\n            let tags = c.tags;\r\n            tags.push(d.display);\r\n            ncombos.push({ tags : tags, data : c.data.filter( value => data[d].contains.includes(value))});\r\n          }\r\n        }\r\n    }\r\n    return ncombos;\r\n}\r\n\r\nconst getIndexCombinations = computed(() => { \r\n    let combos = [];\r\n    for (let group in indexes) {\r\n        combos = this.getCombinations(group, indexes[group], combos);\r\n    }\r\n    return combos;\r\n});\r\n</script>\r\n\r\n","<template>\r\n   <form @submit.prevent=\"searchData\" class=\"ptj-filter-form\">\r\n      <h3>{{ getDictionary('ptj-filter-form-title')}}</h3>\r\n      <ptj-form-row v-for=\"field in RepoStore.search.cells\" :key=\"field.name\" :field=\"field\" v-show=\"field.type != 'id' || Object.keys(field.options).length > 0\">\r\n          <ptj-id v-if=\"field.type=='id'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.type=='time'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" type=\"filter\" :field=\"field\" />\r\n          <a class=\"ptj-filter-form-reset\" @click=\"field.reset()\">x</a>\r\n      </ptj-form-row>\r\n      <input type=\"submit\" :value=\"getDictionary('ptj-filter-form-btn')\" class=\"ptj-filter-form-submit\" @click=\"$emit('close');\">\r\n  </form>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport { addToHistory } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { RepoStore, loadRepo } from \"./../js/repo.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\n\r\nfunction searchData() {\r\n    RepoStore.search.applyChangeData();\r\n    Map.params = RepoStore.search.convertToParams();\r\n    addToHistory();\r\n    loadRepo();\r\n}\r\n\r\n\r\n</script>\r\n<style scoped>\r\n.error {\r\n  color : red;\r\n}\r\n\r\n</style>\r\n\r\n","<template>\r\n <div class=\"ptj-pagination\">\r\n     <a v-for=\"index in RepoStore.max_pages\" \r\n     :key=\"index\" \r\n     @click=\"changePage(index)\" \r\n     :class=\"getActiveClass(index)\">{{ index }}</a>\r\n </div>\r\n</template>\r\n<script setup>\r\nimport { addToHistory } from \"./../js/route.js\"\r\nimport { loadRepo, RepoStore } from \"./../js/repo.js\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\nfunction getActiveClass(index) {\r\n    return (index == Map.params._page ?? 1) ? \"ptj-pagination-active\" : \"\";\r\n}\r\n\r\nfunction changePage(page) {\r\n    Map.params._page = page;\r\n    addToHistory();\r\n    loadRepo();\r\n}\r\n</script>","<template>\r\n    <div class=\"ptj-progress-bar-wrapper\">\r\n        <div class=\"ptj-progress-holder\">\r\n            <div class=\"ptj-progress-bar\" :style=\"'width:' + num + 'px'\">&nbsp;</div> \r\n        </div>   \r\n        <span>{{ num }}%</span>\r\n    </div> \r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { computed } from \"vue\"\r\n\r\nconst props = defineProps({\r\n    total : Number,\r\n    progress : Number\r\n});\r\n\r\n\r\nconst num = computed(() => {\r\n    let num = Math.floor((props.progress / props.total) * 100);\r\n    return (isNaN(num)) ? 0 : num;\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n .ptj-progress-holder {\r\n     width : 100%;\r\n     min-height : 10px;\r\n     position : relative;\r\n     display : flex;\r\n     align-items: stretch;\r\n     padding : 2px;\r\n }\r\n\r\n .ptj-progress-bar {\r\n     width : 0;\r\n     height : 100%;\r\n     position : relative;\r\n     line-height : 100%;\r\n }\r\n\r\n\r\n</style>\r\n","<template>\r\n <form @submit.prevent=\"submit\" v-show=\"fstate==0\" class=\"ptj-form\" :class=\"Map.model + ' ' + Map.state\">\r\n    <div class=\"ptj-form-error\" v-show=\"globalerror\">{{ globalerror }}</div>\r\n    <ptj-form-row v-for=\"field in cdata.cells\" :key=\"field.name\" :field=\"field\">\r\n          <ptj-asset v-if=\"field.type=='asset'\" type=\"edit\"  :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" type=\"edit\"  :field=\"field\"/>\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" type=\"edit\"  :field=\"field\" />\r\n          <ptj-id v-else-if=\"field.type=='id'\" type=\"edit\"  :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.type=='time'\" type=\"edit\"   :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" type=\"edit\"  :field=\"field\" />\r\n    </ptj-form-row>\r\n    <input type=\"submit\" :value=\"getDictionary('ptj-create-form-btn')\" class=\"ptj-form-submit\">\r\n    <ptj-progress-bar v-show=\"fstate == 1\" :total=\"progress.total\" :progress=\"progress.progress\" />\r\n  </form>\r\n  \r\n</template>\r\n\r\n<script setup>\r\n\r\nimport {ref, reactive, onMounted } from \"vue\" \r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjProgressBar from \"./ptj-progress-bar.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport client from \"./../js/client.js\"\r\nimport { DataRow } from \"./../js/datarow.js\"\r\nimport { MetaRow } from \"./../js/metarow.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { loadRepo } from \"./../js/repo.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\nconst emit = defineEmits(['close']);\r\nlet globalerror = ref('');\r\n\r\nconst cdata = reactive(new DataRow());\r\n\r\n\r\nconst progress = reactive({ total : 0, progress : 0});\r\n\r\nlet fstate = 0;\r\n\r\n\r\n\r\nconst load = async() => {\r\n    return client.post(\"/route/\" + Map.route + \"/\" + Map.model)\r\n    .then(response => {\r\n        const meta = new MetaRow();\r\n        meta.map(response.fields);\r\n        cdata.applyMetaRow(meta);\r\n\r\n        let promises = [];\r\n        for(let i in meta.cells) {\r\n            if (meta.cells[i].type == 'id' && meta.cells[i].reference) {\r\n                let url = \"/reference/\" + Map.model + \"/\" + i;\r\n                promises.push(meta.cells[i].setReferenceOptions(url, {\"--parentid\":Map.key}));\r\n            }\r\n        }\r\n        return Promise.all(promises);\r\n    }).catch(e => console.log(e));\r\n}\r\n\r\n\r\nfunction submit() {\r\n\r\n    fstate = (progress.total > 0) ? 1 : 2;\r\n    cdata.clearErrors();\r\n    let key = 0;\r\n    let ndata = cdata.serialize();\r\n    if (Map.key) ndata[\"--parentid\"] = Map.key;\r\n    return client.post(\"/data/\" + Map.route + \"/\" + Map.model, ndata)\r\n    .then(response=>{\r\n        key = response[\"--id\"];\r\n        let promises = [];\r\n        let assets = cdata.getCellByType(\"asset\");\r\n        progress.total = 0;\r\n        for(let i in assets) {\r\n            const val = assets[i].val;\r\n            if (!val) continue;\r\n            ++progress.total;\r\n            const asset = new Asset();\r\n            asset.url = \"/asset/\" + Map.model + \"/\" + i + \"/\" + response[\"--id\"];\r\n            let promise = asset.saveFile(assets[i].val)\r\n            .then(() => {\r\n                ++progress.progress;\r\n            });\r\n            promises.push(promise);\r\n        }\r\n        return Promise.all(promises);\r\n    })\r\n    .then(() => {\r\n        cdata.reset();\r\n        loadRepo();\r\n        emit(\"close\");\r\n    })\r\n    .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n            console.log(err);\r\n        fstate = 0;\r\n        if (typeof err == \"string\") {\r\n            globalerror = err;\r\n        } else {\r\n            cdata.setErrors(err);\r\n        }\r\n    });\r\n}\r\n\r\nonMounted(async () => {\r\n    await load();\r\n});\r\n\r\n</script>\r\n","<template>\r\n  <div :class=\"[Map.model, Map.state]\">\r\n    <ptj-modal>\r\n        <template #button>\r\n            {{ getDictionary('ptj-repo-post') }}\r\n        </template>\r\n        <template #default=\"createScope\">\r\n            <ptj-create-form @close=\"createScope.toggleShow\" />\r\n        </template>\r\n    </ptj-modal>\r\n    <ptj-modal v-if=\"settings.disable_filter != true\">\r\n        <template #button>\r\n            {{ getDictionary('ptj-repo-search') }} <span class=\"material-icons\">search</span>\r\n        </template>\r\n        <template #default=\"filterScope\">\r\n            <ptj-filter-form @close=\"filterScope.toggleShow\" />\r\n        </template>\r\n    </ptj-modal>\r\n    <ptj-tree v-if=\"RepoStore.component=='tree'\" />\r\n    <ptj-list v-else-if=\"RepoStore.component=='list'\" />\r\n    <ptj-table v-else-if=\"RepoStore.component=='table'\" />\r\n    <ptj-pagination v-if=\"RepoStore.max_pages > 0\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { ref, onMounted, onBeforeUnmount } from \"vue\"\r\nimport PtjTree from \"./ptj-tree.vue\"\r\nimport PtjTable from \"./ptj-table.vue\"\r\nimport PtjList from \"./ptj-list.vue\"\r\nimport PtjFilterForm from \"./ptj-filter-form.vue\"\r\nimport PtjSelectfields from \"./ptj-selectfields.vue\"\r\nimport PtjPagination from \"./ptj-pagination.vue\"\r\nimport PtjModal from \"./ptj-modal.vue\"\r\nimport PtjCreateForm from \"./ptj-create-form.vue\"\r\nimport { RepoStore, loadRepo, resetRepo } from \"./../js/repo.js\"\r\nimport { getModelSettings } from \"./../js/route.js\" \r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\n\r\nlet settings = getModelSettings();\r\n\r\n\r\n\r\n\r\nonMounted(async () => {\r\n    await loadRepo();\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n    resetRepo();\r\n});\r\n\r\n</script>\r\n<script>\r\n\r\n</script>\r\n\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n</style>","<template>\r\n    <p>{{ title }}</p>\r\n    <input type=\"text\" :placeholder=\"check_str\" @keyup=\"checkStatus\" v-model=\"delval\">\r\n    <button :disabled=\"disabled\" @click=\"del\">{{ btn }}</button>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport client from \"./../js/client.js\"\r\nimport { ref, computed } from \"vue\";\r\nimport { redirect } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\nconst props = defineProps({\r\n    check_str : {\r\n        type : String,\r\n        default : \"delete\"\r\n    },\r\n    parentid : {\r\n        default : 0\r\n    }\r\n});\r\n\r\nconst emits = defineEmits(['close']);\r\n\r\nlet delval = ref(\"\");\r\nlet disabled = ref(true);\r\nlet title = computed(() => {\r\n    return getDictionary(\"ptj-delete-title\",  { val : props.check_str});\r\n});\r\n\r\nlet btn = computed(() => {\r\n    return getDictionary(\"ptj-delete-btn\");\r\n});\r\n\r\nfunction checkStatus() {\r\n    disabled.value = (delval.value == props.check_str) ? false : true;\r\n}\r\n\r\nfunction del() {\r\n    client.delete(\"/data/\" + Map.route + \"/\" + Map.model, {\"--id\":Map.key})\r\n    .then(res => {\r\n        Map.state = \"parent\";\r\n        Map.key = props.parentid.val;\r\n        redirect();\r\n    })\r\n    .catch(e => console.log(e));\r\n}\r\n    \r\n</script>\r\n","<template>\r\n    <a v-if=\"RouteStore.route.perms.includes('put')\" @click=\"toggleState\" class=\"ptj-edit-toggle\">{{ next_state }}</a>\r\n    <ptj-modal v-if=\"RouteStore.route.perms.includes('delete')\" cls=\"ptj-del-modal\">\r\n        <template #button>\r\n            {{ getDictionary('ptj-primary-delete') }}\r\n        </template>\r\n        <template #default=\"delScope\">\r\n            <ptj-delete :parentid=\"store.data.parent\" @close=\"delScope.toggleShow\" />\r\n        </template>\r\n    </ptj-modal>\r\n    <div class=\"ptj-primary\" :class=\"Map.model\">\r\n        <ptj-form-row v-for=\"field in store.data.cells\" :key=\"field.name\" :field=\"field\"> \r\n          <ptj-asset v-if=\"field.type=='asset'\" :type=\"store.type\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" :type=\"store.type\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" :type=\"store.type\" :field=\"field\" :id=\"store.data.primary\" />\r\n          <ptj-id v-else-if=\"field.type=='id'\" :type=\"store.type\" :field=\"field\"  />\r\n          <ptj-time v-else-if=\"field.type=='time'\" :type=\"store.type\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" :type=\"store.type\" :field=\"field\"  />\r\n        </ptj-form-row>\r\n        <input v-if=\"store.type =='edit'\" type=\"submit\" :value=\"getDictionary('ptj-primary-put-btn')\" class=\"ptj-form-submit\" @click=\"submit\">\r\n    </div>\r\n    <div class=\"ptj-children\">\r\n        <ptj-button v-for=\"action in RouteStore.route.children\" :key=\"action\" :route=\"{ model : action, state : 'parent', key : Map.key}\">\r\n            {{ action }}\r\n        </ptj-button>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport client from \"./../js/client.js\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport { DataRow } from \"./../js/datarow.js\"\r\nimport { reactive, computed, onMounted, onBeforeUnmount } from \"vue\"\r\nimport PtjDelete from \"./ptj-delete.vue\"\r\nimport PtjModal from \"./ptj-modal.vue\"\r\nimport PtjForm from \"./ptj-create-form.vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport { MetaRow } from \"./../js/metarow.js\"\r\nimport {RouteStore, getModelSettings } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n  \r\n\r\n\r\nconst store = reactive({ data : new DataRow(), fstate : 0,  type : 'view', show_def : false, progress : { total : 0, progress : 0} });\r\n\r\n\r\n\r\nfunction toggleState() {\r\n    store.type = (store.type == \"view\") ? \"edit\" : \"view\";\r\n}\r\n\r\nlet next_state = computed(() => {\r\n    return (store.type == \"edit\") ? \"view\" : \"edit\";\r\n});\r\n\r\n\r\n\r\nfunction buildParams(meta_settings) {\r\n    let params = {};\r\n    if (Map.to) params.__to = Map.to;\r\n    if (Map.key) {\r\n        if (Map.key == \"first\") params.__limit = 1;\r\n        else params[\"--id\"] = Map.key;\r\n    }\r\n    if (meta_settings.fields) params.__fields = meta_settings.fields;\r\n    return params;\r\n}\r\n\r\n\r\nfunction reset() {\r\n    store.data = new DataRow();\r\n    store.fstate = 0;\r\n    store.type = \"view\";\r\n    store.show_def = false;\r\n    store.progress = { total : 0, progress : 0};\r\n}\r\n\r\nconst load = async() => {\r\n    let meta_settings = getModelSettings();\r\n    let params = buildParams(meta_settings);\r\n   \r\n    return client.get(\"/route/\" + Map.route + \"/\" + Map.model + \"/primary\", params)\r\n    .then(response => {\r\n        const meta = new MetaRow();\r\n        meta.map(response.fields, meta_settings.fields ?? []);\r\n        store.data.applyMetaRow(meta);\r\n    }).then(() => {\r\n        return client.get(\"/data/\" + Map.route + \"/\" + Map.model + \"/primary\", params);\r\n    }).then(response => {\r\n        store.data.row = response;\r\n        //set the change values as well for each row\r\n        for(let i in store.data.cells) {\r\n            store.data.cells[i].change = store.data.cells[i].val;\r\n        }\r\n    }).then(response => {\r\n        for(let i in store.data.cells) {\r\n            if (store.data.cells[i].type == \"id\" && store.data.cells[i].reference) {\r\n                let url = \"/reference/\" + Map.model + \"/\" + i;\r\n                store.data.cells[i].setReferenceOptions(url, {\"--id\" : Map.key});\r\n            }\r\n        }\r\n    }).catch(e => console.log(e));\r\n\r\n}\r\n\r\n\r\nfunction submit() {\r\n\r\n    store.fstate = (store.progress.total > 0) ? 1 : 2;\r\n    store.data.clearErrors();\r\n    let key = 0;\r\n    let ndata = store.data.serialize(true);\r\n    if (Object.keys(ndata).length == 0) {\r\n        toggleState();\r\n        return;\r\n    }\r\n    ndata[\"--id\"] = Map.key;\r\n    return client.put(\"/data/\" + Map.route + \"/\" + Map.model, ndata)\r\n    .then(response=>{\r\n        let promises = [];\r\n        let assets = store.data.getCellByType(\"asset\");\r\n        store.progress.total = 0;\r\n        for(let i in assets) {\r\n            const val = assets[i].val;\r\n            if (!val) continue;\r\n            ++store.progress.total;\r\n            const asset = new Asset();\r\n            asset.url = \"/asset/\" + Map.model + \"/\" + i + \"/\" + response[\"--id\"];\r\n            let promise = asset.saveFile(assets[i].val)\r\n            .then(() => {\r\n                ++store.progress.progress;\r\n            });\r\n            promises.push(promise);\r\n        }\r\n        return Promise.all(promises);\r\n    })\r\n    .then(() => {\r\n        for(let i in store.data.cells) {\r\n            store.data.cells[i].val = store.data.cells[i].change;\r\n        }\r\n    })\r\n    .then(() => {\r\n        toggleState();\r\n    })\r\n    .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n        store.fstate = 0;\r\n        if (typeof err == \"string\") {\r\n            globalerror = err;\r\n        } else {\r\n            store.data.setErrors(err);\r\n        }\r\n    });\r\n}\r\n\r\nonMounted(async () => {\r\n await load();\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n    reset();\r\n});\r\n\r\n</script>","<template>\r\n <div class=\"ptj-account-handler\">\r\n    <form @submit.prevent=\"submit\" v-show=\"store.state=='login'\" class=\"ptj-login\">\r\n        <div class=\"ptj-form-error\" v-show=\"store.globalerror\">{{ store.globalerror }}</div>\r\n        <ptj-form-row v-for=\"field in store.login_data.cells\" :key=\"field.meta.name\" :field=\"field\">\r\n          <ptj-string type=\"edit\" :field=\"field\" />\r\n        </ptj-form-row>\r\n        <input type=\"submit\" :value=\"getDictionary('ptj-account-handler-btn-login')\" class=\"ptj-form-submit\">\r\n    </form>\r\n    <form  @submit.prevent=\"submit\" v-show=\"store.state=='create'\" class=\"ptj-register\">\r\n        <div class=\"ptj-form-error\" v-show=\"store.globalerror\">{{ store.globalerror }}</div>\r\n        <ptj-form-row v-for=\"field in store.register_data.cells\" :key=\"field.meta.name\" :field=\"field\">\r\n          <ptj-number v-if=\"field.meta.type=='number'\" type=\"edit\" :field=\"field\"/>\r\n          <ptj-flag v-else-if=\"field.meta.type=='flag'\" type=\"edit\" :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.meta.type=='time'\" type=\"edit\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.meta.type=='string'\" type=\"edit\" :field=\"field\" />\r\n        </ptj-form-row>\r\n        <input type=\"submit\" :value=\"getDictionary('ptj-account-handler-btn-create')\" class=\"ptj-form-submit\">\r\n    </form>\r\n </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport { refresh } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { reactive } from 'vue'\r\nimport { DataRow } from './../js/datarow.js';\r\nimport { MetaRow } from \"./../js/metarow.js\"\r\nimport client from \"./../js/client.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\nconst props = defineProps({\r\n    actions : []\r\n});\r\n\r\n\r\nconst store = reactive({\r\n    state : 'login',\r\n    active : true,\r\n    login_data : new DataRow(),\r\n    register_data : new DataRow(),\r\n    globalerror : ''\r\n});\r\n\r\n//load our modules\r\n\r\nclient.post(\"/route/\" + Map.route + \"/\" + Map.model)\r\n.then(response => {\r\n    let meta = new MetaRow();\r\n    meta.map(response.fields);\r\n    store.register_data.applyMetaRow(meta);\r\n});\r\n\r\nclient.post(\"/route/\" +  Map.route + \"/\" + Map.model + \"/login\")\r\n.then(response => {\r\n    let meta = new MetaRow();\r\n    meta.map(response.fields);\r\n    store.login_data.applyMetaRow(meta)\r\n});\r\n\r\n\r\nfunction submit() {\r\n    store.active = false;\r\n    store.globalerror = \"\";\r\n    if (store.state == \"login\") {\r\n        return client.post(\"/data/\" +  Map.route + \"/\" + Map.model + \"/login\", store.login_data.serialize(\"login\"))\r\n        .then(response => {\r\n            refresh();\r\n        })\r\n        .catch(e => {\r\n            store.globalerror = \"Incorrect username / password\";\r\n        })\r\n    } else {\r\n        return client.post(\"/data/\" + Map.route + \"/\" +  Map.model, store.register_data.serialize(\"post\"))\r\n        .then(response => {\r\n            refresh();\r\n        })\r\n        .catch(e => {\r\n            store.register_data.applyErrors(e);\r\n        });\r\n    }\r\n} \r\n</script>\r\n\r\n\r\n","<template>\r\n    <ptj-slug-trail />\r\n    <Suspense>\r\n        <template #default>\r\n            <div :class=\"[Map.model, Map.state]\">\r\n            <h1>{{ RouteStore.title }}</h1>\r\n            <component v-if=\"component\" :is=\"component\" />\r\n            </div>\r\n        </template>\r\n        <template #fallback>\r\n            <div>Loading ...</div>\r\n        </template>\r\n    </Suspense>\r\n</template>\r\n<script setup>\r\n\r\nimport { computed, onMounted } from \"vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjSlugTrail from \"./ptj-slug-trail.vue\"\r\nimport { RouteStore, loadRoute, loadSlugTrail } from \"./../js/route.js\"\r\nimport PtjRepo from \"./ptj-repo.vue\"\r\nimport PtjPrimary from \"./ptj-primary.vue\"\r\nimport PtjAccountHandler from \"./ptj-account-handler.vue\"\r\n\r\n\r\nconst component = computed(() => {\r\n    if (!RouteStore.component) return null;\r\n    else if (RouteStore.component == \"ptj-primary\") return PtjPrimary;\r\n    else if (RouteStore.component == \"ptj-repo\") return PtjRepo;\r\n    else if (RouteStore.component == \"ptj-account-handler\") return PtjAccountHandler;\r\n});\r\n\r\n\r\n\r\n\r\nonMounted(() => {\r\n    loadSlugTrail();\r\n    return loadRoute();\r\n});\r\n\r\n</script>","let settings = {};\r\nimport client from \"./client.js\"\r\nimport { Map } from \"./map.js\"\r\nimport { initUser } from \"./user.js\"\r\nimport { initSettings} from \"./route.js\"\r\n\r\n\r\nexport function PtjRun(settings = {}) {\r\n    if (!settings) settings = {};\r\n    if (!settings.client) {\r\n        throw \"Must set client settings\";\r\n    }\r\n\r\n    if (!settings.client.url) {\r\n        throw(\"No URL defined for client\");\r\n    }\r\n\r\n    client.initSettings(settings.client);\r\n\r\n    if (settings.map) {\r\n        Map.initSettings(settings.map);\r\n    }\r\n\r\n    initSettings(settings.models);\r\n\r\n    let role = (settings.user && settings.user.role) ? settings.user.role : \"\";\r\n    return initUser(role);\r\n}\r\n","import PTJUser from \"./presstojam/src/components/ptj-user.vue\"\r\nimport PTJRoute from \"./presstojam/src/components/ptj-router.vue\"\r\nimport { PtjRun } from \"./presstojam/src/js/controller.js\"\r\nimport Client from \"./presstojam/src/js/client.js\"\r\nimport { createApp } from \"vue\"\r\nimport { Map } from \"./presstojam/src/js/map.js\"\r\nimport { loadNav } from \"./presstojam/src/js/user.js\"\r\n \r\nexport function runApp(mount, user_settings) {\r\n    PtjRun(user_settings)\r\n    .then(() => {\r\n        return loadNav()\r\n    }).then(() => {\r\n        const app = createApp(PTJUser);\r\n        app.mount(mount);\r\n        return app;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n\r\nexport function runRoute(mount, user_settings) {\r\n    PtjRun(user_settings)\r\n    .then(() => {\r\n        const app = createApp(PTJRoute);\r\n        app.mount(mount);\r\n        return app;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n\r\n\r\nexport function getClient(settings) {\r\n\r\n    if (!settings.client) {\r\n        throw \"Must set client settings\";\r\n    }\r\n\r\n    if (!settings.client.url) {\r\n        throw(\"No URL defined for client\");\r\n    }\r\n\r\n    Client.initSettings(settings.client);\r\n    return Client;\r\n}\r\n\r\n"],"names":["active","ref","toggleShow","value","relstyle","computed","props","relative","obj","el","left","top","width","offsetWidth","height","offsetHeight","wrapper","classList","contains","offsetLeft","offsetTop","parentNode","getOffsetToWrapper","disabled","getClass","location","styleInject","css","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","main_url","custom_headers","initSettings","settings","url","name","run","method","params","body","headers","Headers","set","i","fetch","mode","cache","credentials","then","response","ok","json","get","data","URLSearchParams","Array","isArray","append","JSON","stringify","indexOf","toString","this","getprimary","post","put","patch","delete","Map","constructor","_route","_model","_state","_key","_to","_params","_base","_default","Object","keys","forEach","property","defineProperty","substring","newValue","action_map","id","model","state","to","reset","route","key","convertToURL","pts","x","push","join","param_str","base","convertFromURL","url_obj","URL","window","href","pathname","replace","parts","split","length","_self","searchParams","pop","isNaN","parseInt","Error","getAll","default","apply","model_settings","onpopstate","runRoute","RouteStore","reactive","component","title","parent","slug","sort","getModelSettings","loadRoute","children","perms","client","catch","e","console","log","loadSlugTrail","refresh","reload","redirect","addToHistory","url_str","protocol","host","history","pushState","custom_val","selectCustom","field","change1","change","filter","item","reference","setReferenceOptions","show_list","display","symbol","toggleList","select","target","getAttribute","dictionary","getDictionary","vals","str","exp","models","fields","def","val","ctype","immutable","tag","enums","regEx","RegExp","test","isEnum","setContainsAsOptions","encrypted","html","max","atts","readonly","placeholder","User","init","login","user","NavStore","cats","routes","logout","Client","checkLoginStatus","is_expired","setTimeout","initUser","role","loadNav","cat","route_name","getDefault","Errors","Field","_name","_type","_atts","_confirm","_reference","_label","_store","summary","options","_default_val","_immutable","_encrypted","_min","_max","_contains","_notcontains","_recursive","_listeners","toLowerCase","validation","min","notcontains","getOption","opt","clean","calcValue","validateSize","validate","err","nhas","match","has","trigger","MetaRow","_cells","_children","_active","_init","index","_state_groups","addChild","child","addState","action","_actions","resetSummary","arr","setStates","groups","states","depends_on","mapField","recursive","map","limited_fields","getCellByType","cells","showAll","DataCell","meta","error","is_validate_on","meta_keys","getOwnPropertyNames","includes","store","showError","default_val","addParam","change2","addAPIParam","cobj","validateon","on","resetMeta","isSummary","createStateTrigger","cb","group","depends_val","DataRow","metarow","_metarow","_ids","applyMetaRow","primary","clone","state_groups","listeners","row","hasOwnProperty","getSummary","cell","serialize","changes_only","clearErrors","setErrors","convertToParams","convertToAPIParams","applyChangeData","RepoStore","indexes","search","indexData","ckey","mapRepoData","resetRepo","max_pages","loadRepo","async","meta_settings","__to","limit","__limit","__fields","_page","buildParams","show","Math","ceil","count","toggle_state","branch","toggle","icon","order","dir","tableheader","pages","load","y","xval","getCell","toVal","yval","getIndexCombinations","combos","getCombinations","searchData","getActiveClass","page","num","floor","progress","total","globalerror","cdata","fstate","submit","ndata","promises","assets","asset","Asset","promise","saveFile","Promise","all","emit","delval","check_str","btn","checkStatus","del","res","parentid","show_def","toggleState","next_state","login_data","register_data","applyErrors","PtjPrimary","PtjRepo","PtjAccountHandler","PtjRun","mount","user_settings","app","createApp","PTJUser","PTJRoute"],"mappings":"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"}