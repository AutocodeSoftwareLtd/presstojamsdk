{"version":3,"file":"ptj.min.js","sources":["../presstojam/src/components/ptj-modal.vue","../node_modules/style-inject/dist/style-inject.es.js","../presstojam/src/js/client.js","../presstojam/src/js/map.js","../presstojam/src/js/route.js","../presstojam/src/components/ptj-button.vue","../presstojam/src/components/ptj-multiple-input.vue","../presstojam/src/components/ptj-multiple-select.vue","../presstojam/src/js/dictionary.js","../presstojam/src/js/error.js","../presstojam/src/components/ptj-form-confirm.vue","../presstojam/src/components/ptj-update-encrypted.vue","../presstojam/src/components/ptj-string.vue","../presstojam/src/js/user.js","../presstojam/src/js/meta/field.js","../presstojam/src/js/meta/id.js","../presstojam/src/js/meta/flag.js","../presstojam/src/js/meta/asset.js","../presstojam/src/js/meta/time.js","../presstojam/src/js/meta/number.js","../presstojam/src/js/meta/string.js","../presstojam/src/js/meta/fieldfactory.js","../presstojam/src/js/metarow.js","../presstojam/src/js/datacell.js","../presstojam/src/js/states.js","../presstojam/src/js/datarow.js","../presstojam/src/js/repo.js","../presstojam/src/components/ptj-tree-node.vue","../presstojam/src/components/ptj-number.vue","../presstojam/src/components/ptj-flag.vue","../presstojam/src/components/ptj-id.vue","../presstojam/src/components/ptj-time.vue","../presstojam/src/components/ptj-asset.vue","../presstojam/src/components/ptj-table.vue","../presstojam/src/components/ptj-list.vue","../presstojam/src/components/ptj-filter-form.vue","../presstojam/src/components/ptj-pagination.vue","../presstojam/src/components/ptj-progress-bar.vue","../presstojam/src/components/ptj-create-form.vue","../presstojam/src/components/ptj-sort.vue","../presstojam/src/components/ptj-repo.vue","../presstojam/src/components/ptj-delete.vue","../presstojam/src/components/ptj-primary.vue","../presstojam/src/components/ptj-account-handler.vue","../presstojam/src/components/ptj-router.vue","../presstojam/src/js/controller.js","../import.js"],"sourcesContent":["<template>\r\n  <a @click=\"toggleShow\" class=\"ptj-modal-button\"><slot name=\"button\"></slot></a>\r\n  <teleport :disabled=\"disabled\" :to=\"location\">\r\n  <div class=\"ptj-modal-backdrop\" v-show=\"active\" :class=\"getClass\" :style=\"relstyle\">\r\n    <div class=\"ptj-modal\" :class=\"cls\">\r\n        <header>\r\n            <button\r\n          type=\"button\"\r\n          class=\"btn-close\"\r\n          @click=\"toggleShow\"\r\n        >\r\n          x\r\n        </button>\r\n        </header>\r\n      <slot :toggleShow=\"toggleShow\" name=\"default\">\r\n      </slot>\r\n    </div>\r\n  </div>\r\n  </teleport>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from \"vue\"\r\n\r\nconst props = defineProps({\r\n    location : {\r\n        default : 'body'\r\n    },\r\n    relative : {\r\n        default : false\r\n    },\r\n    cls : String\r\n});\r\n\r\nlet active = ref(false);\r\n\r\nfunction toggleShow() {\r\n    active.value = (active.value) ? false : true;\r\n}\r\n\r\nfunction getOffsetToWrapper(el) {\r\n    let obj = {\r\n        left : 0,\r\n        top : 0,\r\n        width : el.offsetWidth,\r\n        height : el.offsetHeight,\r\n        wrapper : 0\r\n    };\r\n    \r\n    while(!el.classList.contains('ptj-table-wrapper')) {\r\n        obj.left += el.offsetLeft;\r\n        obj.top += el.offsetTop;\r\n        el=el.parentNode;\r\n    }\r\n\r\n    obj.wrapper = el.offsetWidth;\r\n\r\n    return obj;\r\n}\r\n\r\nlet relstyle = computed(() => {\r\n    if (props.relative) {\r\n        let obj = getOffsetToWrapper(props.relative);\r\n        let right = obj.wrapper - (obj.left + obj.width);\r\n        return \"position:absolute;top:\" + (obj.top + obj.height) + \"px;right:0px;\";\r\n    } else {\r\n        return \"\";\r\n    }\r\n});\r\n\r\n\r\nlet disabled = computed(() => {\r\n    return (props.location) ? false : true;\r\n});\r\n\r\n\r\nlet getClass = computed(() => {\r\n    if (props.location == 'body') {\r\n        return \"ptj-modal-backdrop-full\";\r\n    } else {\r\n        return \"\";\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n</script>\r\n<style>\r\n.ptj-modal-backdrop-full {\r\n    position : absolute;\r\n    top : 0;\r\n    left : 0;\r\n    height : 100vh;\r\n    width : 100vw;\r\n}\r\n</style>","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","let custom_headers  = {};\r\nlet main_url;\r\n\r\nexport default {\r\n\r\n    initSettings(settings) {\r\n        main_url = settings.url;\r\n\r\n        if (settings.custom_headers) {\r\n            for(let name in settings.custom_headers) {\r\n                custom_headers[name] = settings.custom_headers[name];\r\n            }\r\n        }\r\n    },\r\n\r\n    run(method, url, params, body) {\r\n        const headers = new Headers();\r\n        if (params) {\r\n            headers.set('Content-Type', 'application/json');\r\n            body = params;\r\n        }\r\n\r\n        for(let i in custom_headers) {\r\n            headers.set(i, custom_headers[i]);\r\n        }\r\n\r\n        const options = {\r\n            method  : method,\r\n            mode : 'cors',\r\n            cache : 'no-cache',\r\n            credentials : 'include',\r\n            headers  : headers,\r\n            body : body\r\n        }\r\n\r\n        const _self = this;\r\n\r\n        return fetch(main_url + url, options)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw response;\r\n            }\r\n        });\r\n    }, \r\n    get(url, data) {\r\n        if (data) {\r\n            const params = new URLSearchParams();\r\n            for(let i in data) {\r\n                if (Array.isArray(data[i]) || (typeof data[i] == 'object' && data[i] !== null)) {\r\n                   params.append(i, JSON.stringify(data[i]));\r\n                } else params.append(i, data[i]);\r\n            }\r\n\r\n            if (url.indexOf(\"?\") == -1) url += \"?\";\r\n            else url += \"&\";\r\n            url += params.toString();\r\n        }\r\n        return  this.run('GET', url);\r\n    },\r\n\r\n    getprimary(url, data) {\r\n        return this.get(url, data);\r\n    },\r\n\r\n    post(url, data) {\r\n        //call our fetch response and return\r\n        return this.run('POST', url, JSON.stringify(data));\r\n    },\r\n\r\n    put(url, data) {\r\n        return this.run('PUT', url, JSON.stringify(data));\r\n    },\r\n\r\n    patch(url, data) {\r\n        return this.run('PATCH', url, null, data);\r\n    },\r\n\r\n    getAsset(url) {\r\n        const headers = new Headers();\r\n        for(let i in custom_headers) {\r\n            headers.set(i, custom_headers[i]);\r\n        }\r\n\r\n        const options = {\r\n            method  : 'GET',\r\n            mode : 'cors',\r\n            cache : 'no-cache',\r\n            credentials : 'include',\r\n            headers  : headers\r\n        }\r\n\r\n        const _self = this;\r\n\r\n        return fetch(main_url + url, options)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.blob();\r\n            } else {\r\n                throw response;\r\n            }\r\n        });\r\n    },\r\n\r\n    delete(url, data) {\r\n        return this.run('DELETE', url, JSON.stringify(data));\r\n    }\r\n}\r\n","class MapModel {\r\n\r\n    constructor() {\r\n        this._route = '';\r\n        this._model = '';\r\n        this._state = '';\r\n        this._key = 0;\r\n        this._to = '';\r\n        this._params = {};\r\n        this._base = \"/\";\r\n        this._default = false;\r\n    \r\n        const keys = Object.keys(this);\r\n\r\n        keys.forEach(property => {\r\n          if (property[0] == \"_\") {\r\n            Object.defineProperty(this, property.substring(1), {\r\n                get: function() { \r\n                    return this[property];\r\n                },\r\n                set: function(newValue) {\r\n                    if (newValue != this[property]) {\r\n                        this[property] = newValue;\r\n                    }\r\n                }\r\n            });\r\n          } \r\n        });\r\n\r\n\r\n        this.action_map = {\r\n            'post' : '-create',\r\n            'put' : '-update',\r\n            'delete' : '-delete',\r\n            'login' : '-login',\r\n            'logout' : '-logout',\r\n            'primary' : '-primary',\r\n            'parent' : '-parent',\r\n            'get' : ''\r\n        };\r\n\r\n    }\r\n\r\n    get id() {\r\n        return this.model + \"-\" + this.state + \"-\" + this.to;\r\n    }\r\n\r\n    reset() {\r\n        this.route = '';\r\n        this.model = '';\r\n        this.state = '';\r\n        this.key = 0;\r\n        this.to = '';\r\n        this.params = {};\r\n    }\r\n\r\n\r\n    convertToURL() {\r\n        let url = this._base + this.route + \"/\" + this.model + this.action_map[this.state];\r\n        if (this.key) url += \"-\" + this.key;\r\n        if (this.to) url += \"-to-\" + this.to;\r\n\r\n        let params = new URLSearchParams();\r\n        for(const i in this.params) {\r\n            if (!this.params[i]) continue;\r\n            if (typeof this.params[i] == 'object') {\r\n                let pts = [];\r\n                for(let x in this.params[i]) {\r\n                    pts.push(this.params[i][x]);\r\n                }\r\n                params.append(i, pts.join(\",\"));\r\n            } else {\r\n                params.append(i, this.params[i]);\r\n            }\r\n        }\r\n\r\n        let param_str = params.toString();\r\n        if (param_str) url += \"?\" + param_str;\r\n\r\n        return url;\r\n    }\r\n    \r\n    initSettings(settings) {\r\n        if (settings) this._base = settings.base;\r\n        this.convertFromURL();\r\n    }\r\n\r\n    convertFromURL() {\r\n        let url_obj = new URL(window.location.href);\r\n        let url = url_obj.pathname.replace(this.base, \"\");\r\n        url = url.replace(/^\\/+|\\/+$/g, '');\r\n\r\n        if (!url) return;\r\n\r\n\r\n        let parts = url.split(\"/\");\r\n\r\n        if (parts.length >= 2) {\r\n            this.route = parts[0];\r\n            url = parts[1];\r\n        }\r\n        \r\n        const _self = this;\r\n        url_obj.searchParams.forEach(function(value, key) {\r\n            _self.params[key] = (value.indexOf(\",\") > -1) ? value.split(\",\") : value;\r\n        });\r\n\r\n       \r\n        parts = url.split(\"-to-\");\r\n        if (parts.length > 1) {\r\n            this.to = parts[1];\r\n            url = parts[0];\r\n        }\r\n\r\n       \r\n        parts = url.split(\"-\");\r\n        let key = parts[parts.length - 1];\r\n        if (key == \"first\") {\r\n            this.key = key;\r\n            parts.pop();\r\n        } else if (!isNaN(key)) {\r\n            this.key = parseInt(key);\r\n            parts.pop();\r\n        }\r\n            \r\n        if (parts.length == 0) {\r\n            throw new Error(\"Can't convert this url string: \" + url);\r\n        }\r\n    \r\n        this.state = \"get\";\r\n        for(let i in this.action_map) {\r\n            if (this.action_map[i] == \"-\" + parts[parts.length - 1]) {\r\n                this.state = i\r\n                parts.pop();\r\n                break;\r\n            }\r\n        }\r\n        this.model = parts.join(\"-\");\r\n        if (!this.route) this.route = this.model;\r\n    }\r\n\r\n    getAll() {\r\n        return {\r\n            route : this.route,\r\n            model : this.model,\r\n            state : this.state,\r\n            key : this.key,\r\n            to : this.to,\r\n            params : this.params,\r\n            base : this.base,\r\n            default : this.default\r\n        };\r\n    }\r\n\r\n    apply(route) {\r\n        for(let i in route) {\r\n            this[i] = route[i];\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const Map = new MapModel();\r\n\r\n","import { reactive } from \"vue\"\r\nimport client from \"./client.js\"\r\nimport { Map } from \"./map.js\"\r\n\r\n\r\nlet model_settings = {};\r\n\r\nwindow.onpopstate = function() {\r\n    Map.reset();\r\n    Map.convertFromURL();\r\n    runRoute();\r\n}\r\n\r\nexport const RouteStore = reactive({ \r\n    component : '', \r\n    title : '',\r\n    name : '',\r\n    route : { \"children\" : [], parent : null, \"perms\" : []}, \r\n    slug : [],\r\n    sort : false\r\n});\r\n\r\nfunction setComponent() {\r\n    if (Map.state == \"get\" || Map.state == \"parent\") {\r\n        RouteStore.component = \"ptj-repo\";\r\n    } else if (Map.state == \"primary\") {\r\n        RouteStore.component = \"ptj-primary\";\r\n    } else if (Map.state == \"login\") {\r\n        RouteStore.component = \"ptj-account-handler\";\r\n    }\r\n}\r\n\r\n\r\nexport function initSettings(settings) {\r\n    if (settings) model_settings = settings;\r\n}\r\n\r\n\r\nexport function getModelSettings() {\r\n    if (model_settings[Map.model] && model_settings[Map.model][Map.state]) {\r\n        return model_settings[Map.model][Map.state];\r\n    }\r\n    return {};\r\n}\r\n\r\n\r\nexport function loadRoute() {\r\n    RouteStore.component = \"\";\r\n    RouteStore.route.children = [];\r\n    RouteStore.route.parent = null;\r\n    RouteStore.route.perms = [];\r\n    RouteStore.route.title = \"\";\r\n    RouteStore.route.name = \"\";\r\n    RouteStore.sort = false;\r\n    return client.get(\"/nav/route-points/\" + Map.route + \"/\" + Map.model)\r\n    .then(response => {   \r\n        RouteStore.route.children = response.children;\r\n        RouteStore.route.perms = response.perms;\r\n        RouteStore.route.parent = response.parent;\r\n        RouteStore.title = response.title;\r\n        RouteStore.name = response.name;\r\n        if (response.sort) RouteStore.sort = true;\r\n        setComponent();\r\n    })\r\n    .then(response => {\r\n\r\n    })\r\n    .catch(e => console.log(e));\r\n}\r\n\r\nexport function loadSlugTrail() {\r\n    RouteStore.slug = [];\r\n    let params = {};\r\n    if (Map.key) {\r\n        if (Map.state == \"parent\") params[\"--parentid\"] = Map.key;\r\n        else if (Map.state == \"primary\") params[\"--id\"] = Map.key;\r\n    } else {\r\n        return;\r\n    }\r\n\r\n    return client.get(\"/slug/\" + Map.route + \"/\" + Map.model, params)\r\n    .then(response => {\r\n        RouteStore.slug = response;\r\n        for(let i in RouteStore.slug) {\r\n            i=parseInt(i);\r\n            if (i > 0) {\r\n                RouteStore.slug[i].route = {\r\n                    model : RouteStore.slug[i].model,\r\n                    state : 'parent',\r\n                    key : RouteStore.slug[i].id\r\n                }\r\n            } else {\r\n                RouteStore.slug[i].route = {\r\n                    model : RouteStore.slug[i].model,\r\n                    state : 'get',\r\n                    key : 0\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\nexport function refresh() {\r\n    location.href = Map.base;\r\n}\r\n\r\nexport function redirect() {\r\n    addToHistory();\r\n    runRoute();\r\n}\r\n\r\nexport function addToHistory() {\r\n    const url_str = window.location.protocol + \"//\" + window.location.host +  Map.convertToURL();\r\n    const url = new URL(url_str);\r\n    window.history.pushState({'name' : url.pathname}, document.title, url);\r\n}\r\n\r\nexport function runRoute() {\r\n    loadRoute();\r\n    loadSlugTrail();\r\n}\r\n","<template>\r\n  <a class=\"ptj-button\" :key=\"route\" @click=\"run\">\r\n    <slot />\r\n  </a> \r\n</template>\r\n\r\n<script setup>\r\n\r\n\r\nimport { redirect } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\nconst props = defineProps({\r\n    route : Object\r\n});\r\n\r\n\r\nfunction run() {\r\n    for(let i in props.route) {\r\n        Map[i] = props.route[i];\r\n    }\r\n    Map.params = {};\r\n    redirect();\r\n}\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n    <div class=\"ptj-multiple-select\">\r\n        <div class=\"ptj-multiple-select-display\">\r\n            <div class=\"ptj-multiple-select-values\">\r\n                <div class=\"ptj-multiple-select-val\" v-for=\"val in field.change1\" :key=\"val\">\r\n                    {{ val }}\r\n                    <a class=\"ptj-multiple-select-val-remove\" @click=\"remove(val)\"><span class=\"material-icons\">close</span></a>\r\n                </div>\r\n            </div>\r\n            <input type=\"text\" v-model=\"custom_val\" />\r\n            <a @click=\"selectCustom\" class=\"ptj-multiple-select-add\">add</a>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script setup>\r\n\r\nimport { ref } from \"vue\"\r\n\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n});\r\n\r\nconst custom_val = ref(\"\");\r\n\r\nfunction remove(key) {\r\n    props.field.change = props.field.change.filter(function(item) {\r\n        return item !== key\r\n    });\r\n}\r\n\r\nfunction selectCustom() {\r\n    props.field.change1 = custom_val.value;\r\n    custom_val.value = \"\";\r\n}\r\n\r\n\r\n</script>\r\n<style scoped>\r\n.ptj-multiple-select-val {\r\n    display : inline-block;\r\n    border : 1px solid green;\r\n    margin-left : 2px;\r\n    margin-right : 2px;\r\n    padding : 2px;\r\n    background-color : green;\r\n}\r\n\r\n\r\n.ptj-multiple-select-val-remove {\r\n    color : red;\r\n}\r\n\r\n\r\n.ptj-multiple-select-display {\r\n    position :relative;\r\n    background-color : #fff;\r\n    border : 1px solid #cdcdcd;\r\n    min-height : 35px;\r\n\r\n}\r\n\r\n</style>","<template>\r\n    <div class=\"ptj-multiple-select\">\r\n        <div class=\"ptj-multiple-select-display\">\r\n            <div class=\"ptj-multiple-select-values\">\r\n                <div class=\"ptj-multiple-select-val\" v-for=\"val in field.change\" :key=\"val\">\r\n                    {{ getOption(val) }}\r\n                    <a class=\"ptj-multiple-select-val-remove\" @click=\"remove(val)\"><span class=\"material-icons\">close</span></a>\r\n                </div>\r\n            </div>\r\n            <a class=\"ptj-multiple-select-arrow\" @click=\"toggleList\">\r\n            <span class=\"material-icons\">{{ show_list.symbol }}</span>\r\n            </a>\r\n        </div>\r\n        <ul class=\"ptj-multiple-select-options\" v-show=\"show_list.display\" @click=\"select\">\r\n            <li v-for=\"option in options\" :key=\"option.key\" :data-key=\"option.key\">{{ option.value }}</li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n<script setup>\r\n\r\nimport { reactive } from \"vue\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n    options : {\r\n        type : Array,\r\n        required : true\r\n    }\r\n});\r\n\r\n\r\n\r\nfunction getOption(key) {\r\n    for(let opt of props.options) {\r\n        if (opt.key == key) return opt.value;\r\n    }\r\n}\r\n\r\n\r\nconst show_list = reactive({\r\n    display : false,\r\n    symbol : 'keyboard_arrow_down'\r\n});\r\n\r\n\r\nfunction toggleList() {\r\n    if (show_list.display) {\r\n        show_list.display = false;\r\n        show_list.symbol = 'keyboard_arrow_down';\r\n    } else {\r\n        show_list.display = true;\r\n        show_list.symbol = 'keyboard_arrow_up';\r\n    }\r\n}\r\n\r\n\r\nfunction remove(key) {\r\n    props.field.change = props.field.change.filter(function(item) {\r\n        return item !== key\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction select(e) {\r\n    props.field.change1 = e.target.getAttribute(\"data-key\");\r\n    toggleList();\r\n}\r\n</script>\r\n<style scoped>\r\n.ptj-multiple-select-val {\r\n    display : inline-block;\r\n    border : 1px solid green;\r\n    margin-left : 2px;\r\n    margin-right : 2px;\r\n    padding : 2px;\r\n    background-color : green;\r\n}\r\n\r\n\r\n.ptj-multiple-select-val-remove {\r\n    color : red;\r\n}\r\n\r\n.ptj-multiple-select-arrow {\r\n    position :absolute;\r\n    right : 2px;\r\n    top : 3px;\r\n}\r\n\r\n.ptj-multiple-select-display {\r\n    position :relative;\r\n    background-color : #fff;\r\n    border : 1px solid #cdcdcd;\r\n    min-height : 35px;\r\n\r\n}\r\n\r\n.ptj-multiple-select-options li {\r\n    list-style: none;\r\n    cursor: pointer;\r\n    margin-top : 2px;\r\n    border : 1px solid #cdcdcd;\r\n    background-color : #fff;\r\n}\r\n\r\n.ptj-multiple-select-options li:hover {\r\n    background-color : #f9f9fb;\r\n    transition : background-color .2s ease-out,border .2s ease-out;\r\n}\r\n</style>","let dictionary = {};\r\n\r\nexport function setDictionary(dict) {\r\n    dictionary = dict;\r\n}\r\n\r\n\r\nexport function getDictionary(id, vals) {\r\n    let str = \"\";\r\n    if (!vals) {\r\n        if (dictionary[id]) str = dictionary[id];\r\n        return str;\r\n    }\r\n    \r\n    if (vals.model) {\r\n        if (vals.field) {\r\n            if (vals.field.indexOf(\"/\") > -1) {\r\n                let exp = vals.field.split(\"/\");\r\n                vals.field = exp.pop();\r\n            }\r\n            \r\n            if (dictionary.models[vals.model] && dictionary.models[vals.model].fields[vals.field]) {\r\n                str= dictionary.models[vals.model].fields[vals.field][id];\r\n            }\r\n        } else {\r\n            if ( dictionary.models[vals.model]) {\r\n                str = dictionary.models[vals.model][id];\r\n            }\r\n        }\r\n    } else if (vals.type) {\r\n        if (dictionary[id][vals.type]) str = dictionary[id][vals.type];\r\n        else str = dictionary[id].def;\r\n    } else {\r\n        str = dictionary[id];\r\n    }\r\n\r\n    if (vals.val) {\r\n        str = str.replace( /\\{\\{(.*?)\\}\\}/g, vals.val);    \r\n\r\n        //s.replace( /\\{\\{(.*?)\\}\\}/g, function(x){          // this grabs replacement tags\r\n          //  return x.replace( /\\[(\\d+)\\]/g,'.$1' )});      \r\n    }\r\n\r\n    if (!str && vals.default) str = vals.default;\r\n    return str;\r\n}","const error_invalid_map = {\r\n            1 : \"too small\",\r\n            2 : \"too large\",\r\n            3 : \"contains incorrect characters\",\r\n            4 : \"doesn't contain required characters\",\r\n            5 : \"not unique\"\r\n}\r\n\r\nexport function getError(code) {\r\n    return error_invalid_map[code];\r\n}\r\n\r\nexport const Errors = {\r\n    OK : 0,\r\n    MIN_VALUE : 1,\r\n    MAX_VALUE : 2,\r\n    HAS : 3,\r\n    HAS_NOT : 4\r\n}\r\n","<template>\r\n    <input type=\"text\"\r\n        :name=\"field.name\"\r\n        v-model=\"val\" \r\n        @blur=\"store.validateon = true\" />\r\n</template>\r\n<script setup>\r\nimport { reactive, computed } from 'vue'\r\n\r\nconst props = defineProps({\r\n    field : {\r\n        type : Object,\r\n        required : true\r\n    }\r\n});\r\n\r\nconst store = reactive({ validateon : false, val : ''});\r\n\r\nconst val = computed({\r\n    get() {\r\n        return store.val;\r\n    },\r\n    set(val) {\r\n        if (val != field.val) {\r\n\r\n        }\r\n        store.val = val;\r\n    }\r\n});\r\n</script>\r\n","<template>\r\n    <form @submit.prevent=\"submit\" v-show=\"fstate==0\" class=\"ptj-form\" :class=\"Map.model + ' ' + Map.state\">\r\n        <ptj-form-row :field=\"field\">\r\n           <input type=\"password\"\r\n                :name=\"field.name\"\r\n                v-model=\"field.change\" \r\n                @blur=\"field.validateon = true\" />\r\n        </ptj-form-row>\r\n        <ptj-form-row :field=\"field\">\r\n          <ptj-confirm :field=\"field\" />\r\n        </ptj-form-row>\r\n        <input type=\"submit\" :value=\"getDictionary('ptj-reset-form-btn')\" class=\"ptj-form-submit\">\r\n  </form>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { ref } from \"vue\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjConfirm from \"./ptj-form-confirm.vue\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\nconst props = defineProps({\r\n    field : Object\r\n});\r\n\r\nconst fstate = ref(0);\r\n\r\nconst emit = defineEmits(['close']);\r\n\r\nfunction submit() {\r\n\r\n    fstate.value = 1;\r\n    let key = 0;\r\n    let ndata = {};\r\n    ndata[\"--id\"] = Map.key; //only called from primary field\r\n    ndata[field.name] = field.change;\r\n    return client.put(\"/data/\" + Map.route + \"/\" + Map.model, ndata)\r\n    .then(() => {\r\n        emit(\"close\");\r\n    })\r\n    .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n        fstate.value = 0;\r\n        if (typeof err == \"string\") {\r\n            globalerror = err;\r\n        } else {\r\n            cdata.setErrors(err);\r\n        }\r\n    });\r\n}\r\n\r\n</script>","<template>\r\n   <ptj-modal v-if=\"field.encrypted && type=='edit'\">\r\n        <template #button>\r\n            {{ getDictionary('ptj-repo-post') }}\r\n        </template>\r\n        <template #default=\"encryptedScope\">\r\n            <ptj-update-encrypted @close=\"encryptedScope.toggleShow\" :field=\"field\"/>\r\n        </template>\r\n    </ptj-modal>\r\n   <textarea v-if=\"tag=='textarea' && (ctype=='edit' || ctype =='post')\"\r\n        v-bind=\"atts\" \r\n        :name=\"field.name\" \r\n        v-model=\"field.change\"></textarea>\r\n   <div v-else-if=\"tag=='textarea' && ctype=='view'\">{{ field.val }}</div>\r\n   <ptj-multiple-select v-else-if=\"tag=='select' && ctype == 'filter'\" :field=\"field\" :options=\"options\" />\r\n  <select v-else-if=\"tag=='select' && (ctype=='edit' || ctype =='post')\" \r\n        v-model=\"field.change\"\r\n        :name=\"field.name\"\r\n        v-bind=\"atts\"\r\n         @blur=\"field.validateon = true\"\r\n        >\r\n        <option value=\"\" selected disabled>{{ getDictionary('ptj-string-default') }}</option>\r\n        <option v-for=\"option in options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <input v-else-if=\"ctype=='edit' || ctype=='post'\" v-bind=\"atts\"\r\n        :name=\"field.name\"\r\n        v-model=\"field.change\" \r\n        @blur=\"field.validateon = true\" />\r\n   <ptj-multiple-input :field=\"field\" v-else-if=\"ctype=='filter'\"/>\r\n  <span v-else-if=\"ctype=='view' && field.reference\">\r\n    <ptj-button :route=\"{model : field.reference, key : field.val, state:'primary' }\">{{ field.val }}</ptj-button>\r\n  </span>\r\n  <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjMultipleInput from \"./ptj-multiple-input.vue\"\r\nimport PtjMultipleSelect from \"./ptj-multiple-select.vue\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\nimport PtjModal from \"./ptj-modal.vue\"\r\nimport PtjUpdateEncrypted from \"./ptj-update-encrypted.vue\"\r\n\r\nimport { computed } from \"vue\"\r\nconst props = defineProps({\r\n    field : {\r\n        type : Object,\r\n        required : true\r\n    },\r\n    type : {\r\n        type : String,\r\n        default : 'view'\r\n    }\r\n});\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n\r\nconst options = ref([]);\r\n\r\nfunction isEnum(contains) {\r\n    if (contains.length == 0) return null;\r\n    let enums=[];\r\n    const regEx = new RegExp(/^[a-zA-Z]+[a-zA-Z0-9._]+$/);\r\n    for(let exp of contains) {\r\n        if (!exp) continue;\r\n        if (regEx.test(exp)) {\r\n            enums.push(exp);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    return enums;\r\n}\r\n\r\nconst tag = computed(() => {\r\nif (isEnum(props.field.contains)) {\r\n    props.field.setContainsAsOptions(options);\r\n    return \"select\";\r\n} else if (props.field.encrypted) {\r\n    return \"input\";\r\n} else if (props.field.html || props.field.max > 300) {\r\n    return \"textarea\";\r\n} else {\r\n    return \"input\";\r\n}\r\n});\r\n\r\n\r\nconst atts = computed(() => {\r\nlet atts = {};\r\nif (props.field.encrypted) {\r\n    atts.type = \"password\";\r\n}\r\n\r\nif (props.field.immutable) {\r\n    atts.readonly = true;\r\n}\r\n\r\n\r\nlet pholder = getDictionary('placeholder', { \"model\" : props.field.model, \"field\" : props.field.name });\r\nif (pholder) {\r\n    atts.placeholder = pholder;\r\n}\r\n\r\nif (props.field.contains.includes(\"html\")) {\r\n    atts[\"data-html\"] = 1;\r\n}\r\nreturn atts;\r\n});\r\n\r\n\r\n</script>\r\n","import { reactive } from \"vue\"\r\nimport { refresh } from \"./route.js\"\r\nimport Client from \"./client.js\"\r\nimport { Map } from \"./map.js\"\r\nimport { setDictionary } from \"./dictionary.js\"\r\n\r\nexport const User = reactive({init : false, login : false, user : \"public\" });\r\n\r\nexport const NavStore = reactive({\r\n    cats : {}, \r\n    routes : [], \r\n});\r\n\r\nexport function logout() {\r\n    Client.post(\"/core/logout\")\r\n    .then(() => {\r\n        refresh();\r\n    });\r\n}\r\n\r\nfunction getDefault() {\r\n    for(let cat in NavStore.cats) {\r\n        for(let route of NavStore.cats[cat]) {\r\n            if (route.default) {\r\n                return route;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst user_check = 600000;\r\n\r\nexport function checkLoginStatus() {\r\n    Client.get(\"/core/check-user\")\r\n    .then(response => {\r\n        if (response.is_expired) {\r\n            return Client.put(\"/core/switch-tokens\")\r\n            .then(() => {\r\n                checkLoginStatus();\r\n            });\r\n        }\r\n    }).then(response => {\r\n        if (User.user != \"public\") setTimeout(checkLoginStatus, user_check);\r\n    }).catch(e => {\r\n        User.login = true;\r\n    });\r\n}\r\n\r\nexport function initUser(role = \"\") {\r\n    return Client.get(\"/core/check-user\")\r\n    .then(response => {\r\n        if (response.is_expired) {\r\n            return Client.put(\"/core/switch-tokens\")\r\n            .then(() => {\r\n                return Client.get(\"/core/check-user\");\r\n            });\r\n        } else {\r\n            return response;\r\n        }\r\n    })\r\n    .then(response => {\r\n        User.user = response.user;\r\n        User.role = response.role;\r\n        User.init = true;\r\n\r\n        if (User.role != role) {\r\n            let url = \"/core/change-role\";\r\n            if (role) url += \"/\" + role;\r\n            return Client.post(url)\r\n            .then(response => {\r\n                User.role = role;\r\n            });\r\n        }\r\n    }).then(() => {\r\n        checkLoginStatus();\r\n    }).then(() => {\r\n        return Client.get(\"/dictionary\")\r\n        .then(response => {\r\n            setDictionary(response);\r\n            return true;\r\n        });\r\n    }).catch(e => console.log(e));\r\n}\r\n\r\nexport function loadNav() {\r\n    NavStore.cats = {};\r\n    NavStore.routes = [];\r\n    return Client.get(\"/nav/site-map\")\r\n    .then(response => {\r\n        for(let cat in response) {\r\n            for(let route_name in response[cat]) {\r\n                const route = { model : route_name, state : response[cat][route_name].state };\r\n                if (response[cat][route_name].default) route.default = true;\r\n                route.route = route_name;\r\n                NavStore.routes.push(route);\r\n\r\n                if (!NavStore.cats[cat]) NavStore.cats[cat] = [];\r\n                NavStore.cats[cat].push(route);\r\n            }\r\n        }\r\n    })\r\n    .then(() => {\r\n        if (!Map.model) {\r\n            Map.apply(getDefault());\r\n        }\r\n        return true;\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n","\r\nimport { Errors } from \"./../error.js\"\r\nimport { reactive, computed } from \"vue\"\r\n\r\n\r\nexport class Field {\r\n\r\n    constructor(name) {\r\n        this._name = name;\r\n        this._store = reactive({ summary : 0});\r\n        this._default_val = null;\r\n        this._immutable = false;\r\n        this._encrypted = false;\r\n        this._min = null;\r\n        this._max = null;\r\n        this._contains = [];\r\n        this._notcontains = [];\r\n        this._listeners = [];\r\n        \r\n        const keys = Object.keys(this);\r\n       \r\n        keys.forEach(property => {\r\n          if (property != \"_store\" && property[0] == \"_\") {\r\n            Object.defineProperty(this, property.substring(1), {\r\n                get: function() { \r\n                   return this[property];\r\n                },\r\n                set: function(newValue) {\r\n                    if (property == \"_type\") this._type = newValue.toLowerCase();\r\n                    else this[property] = newValue;\r\n                }\r\n            })\r\n          }\r\n        });\r\n      \r\n      \r\n        this.summary = computed({\r\n            get : () => {\r\n                return this._store.summary;\r\n            },\r\n            set : (val) => {\r\n                this._store.summary = (val) ? 1 : 0;\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    apply(obj) {\r\n        for (let x in obj) {\r\n            if (x == \"summary\") this.summary = (obj[x]) ? 1 : 0;\r\n            else if (x == \"validation\") continue;\r\n            else if (x == \"type\") this.type = obj[x].toLowerCase();\r\n            else this[x] = obj[x];\r\n        }\r\n\r\n        this._min = obj.validation.min;\r\n        this._max = obj.validation.max;\r\n        if (obj.validation.contains) this._contains = obj.validation.contains.split(\"|\");\r\n        if (obj.validation.notcontains) this._notcontains = obj.validation.notcontains.split(\"|\");\r\n    }\r\n\r\n\r\n    clean(val) {\r\n        return val;\r\n    }\r\n\r\n\r\n    calcValue(value) {\r\n        if (!value) return \"\";\r\n        else return value;\r\n    }\r\n\r\n\r\n    validateSize(val) {\r\n        if (val < this._min) return Errors.MIN_VALUE;\r\n        else if (val > this._max) return Errors.MAX_VALUE;\r\n        else return Errors.OK;\r\n    }\r\n\r\n\r\n    validate(val) {\r\n        if (val === null) return;\r\n        let err;\r\n        if (isNaN(val)) {\r\n            const length = (val) ? val.length : 0;\r\n            err = this.validateSize(length);\r\n        } else {\r\n            err = this.validateSize(val);\r\n        }\r\n        if (err != Errors.OK) return err;\r\n\r\n        for(let nhas of this._notcontains) {\r\n            if (val.match(nhas)) return Errors.HAS_NOT;\r\n        }\r\n\r\n        if (this._contains.length == 0) return Errors.OK;\r\n        \r\n        for(let has of this._contains) {\r\n            if (val.match(has)) return Errors.OK;\r\n        }\r\n        return Errors.HAS;\r\n    }\r\n\r\n\r\n    trigger(val) {\r\n        for(let state of this._listeners) {\r\n            state(val);\r\n        }\r\n    }\r\n\r\n\r\n    addParam(obj, val) {\r\n        if (val) {\r\n            obj[this._name] = val;\r\n        }\r\n    }\r\n\r\n\r\n    addAPIParam(obj, val) {\r\n        if (val) {\r\n            obj[this._name] = val;\r\n        }\r\n    }\r\n\r\n\r\n    getVal(store) {\r\n        return store.value;\r\n    }\r\n\r\n    setVal(store, val) {\r\n        store.value = this.clean(val);\r\n        store.error = this.validate(val);\r\n    }\r\n\r\n    getChange(store) {\r\n        if (store.change == null) return store.value;\r\n        else return store.change;\r\n    }\r\n\r\n    setChange(store, val) {\r\n        store.change = this.clean(val);\r\n        store.error = this.validate(val);\r\n        this.trigger(val);\r\n    }\r\n\r\n    getFilter(store) {\r\n        return store.value;\r\n    }\r\n    \r\n    setFilter(store, val) {\r\n        store.value = val;\r\n    }\r\n\r\n    getErrorVal(error) {\r\n        if (error == Errors.MIN_VALUE) return this.min;\r\n        else if (error == Errors.MAX_VALUE) return this._max;\r\n        else if (error == Errors.HAS) return this._contains.join(\" | \");\r\n        else if (error == Errors.HAS_NOT) return this._notcontains;\r\n    }\r\n}\r\n\r\n\r\n","import { Field } from \"./field.js\"\r\nimport Client from \"./../client.js\"\r\n\r\nexport class ID extends Field {\r\n\r\n    constructor(name, obj) {\r\n\r\n        super(name);\r\n        \r\n        this._reference = false;\r\n        this._include_fields = [];\r\n        this._recursive = false;\r\n        this._reference_to;\r\n\r\n        this._default_val = 0;\r\n        if (obj) this.apply(obj);\r\n        if (obj.includes) this._include_fields = obj.includes;\r\n        if (obj.reference_to) this.referenceTo = obj.reference_to;\r\n    }\r\n\r\n\r\n    setReferenceOptions(url, params) {\r\n        return Client.get(url, params)\r\n        .then(response => {\r\n            let options = [];\r\n            for (let i in response) {\r\n                let key = response[i][\"--id\"];\r\n                let vals = [];\r\n                for(let x  in response[i]) {\r\n                    if (x != \"--id\") {\r\n                        vals.push(response[i][x]);\r\n                    }\r\n                }\r\n                options.push({ key: key, value: vals.join(\" \", vals) });\r\n            }\r\n           return options;\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n\r\n    getChange1(store) {\r\n        if (store.change == null) store.change = store.value;\r\n        let val = (store.change == null) ? [] : store.change;\r\n        return val;\r\n    }\r\n\r\n    \r\n    setChange1(store, val) {\r\n        if (store.change == null) store.change = [];\r\n        if (store.change.includes(val)) return;\r\n        store.change.push(this.clean(val));\r\n        store.error = this.validate(val);\r\n    }\r\n\r\n    get reference() {\r\n        return this._reference;\r\n    }\r\n\r\n    set reference(ref) {\r\n        this._reference = ref;\r\n    }\r\n\r\n    get include_fields() {\r\n        return this._include_fields;\r\n    }\r\n\r\n    set include_fields(fields) {\r\n        this._include_fields = fields;\r\n    }\r\n\r\n    get recursive() {\r\n        return this._recursive;\r\n    }\r\n\r\n    set recursive(recursive) {\r\n        this._recursive = recursive;\r\n    }\r\n\r\n    get referenceTo() {\r\n        return this._reference_to;\r\n    }\r\n\r\n    set referenceTo(ref) {\r\n        this._reference_to = ref;\r\n    }\r\n\r\n}","import { Field } from \"./field.js\"\r\n\r\nexport class Flag extends Field {\r\n\r\n    constructor(name, obj) {\r\n        super(name);\r\n        if (obj) this.apply(obj);\r\n    }\r\n\r\n\r\n    clean(val) {\r\n        return (val) ? 1 : 0;\r\n    }\r\n\r\n\r\n    getChange1(store) {\r\n        if (store.change == null) store.change = store.value;\r\n        if (store.change == null) return 0;\r\n        else if (!store.change) return 2;\r\n        else return store.change;\r\n    }\r\n\r\n    setChange1(store, val) {\r\n        if (val == 0) {\r\n            store.change = null;\r\n            return;\r\n        }\r\n        if (val == 2) val = 0;\r\n        store.change = this.clean(val);\r\n        store.error = this.validate(val);\r\n    }\r\n\r\n}","import { Field } from \"./field.js\"\r\nimport Client from \"./../client.js\"\r\n\r\nexport class Asset extends Field {\r\n\r\n    constructor(name, obj) {\r\n        super(name);\r\n        this._size = 0;\r\n      this._blob = null;\r\n      this._uploaded = false;\r\n      this._chunk_size = 0;\r\n      this._url;\r\n      this._key = 0;\r\n\r\n      if (obj) this.apply(obj);\r\n    }\r\n\r\n    set chunk_size(chunk) {\r\n        this._chunk_size = chunk;\r\n      }\r\n  \r\n      set blob(blob) {\r\n        this._blob = blob;\r\n      }\r\n  \r\n      set url(url) {\r\n          this._url = url;\r\n      }\r\n  \r\n      set key(key) {\r\n          this._key = key;\r\n      }\r\n  \r\n  \r\n      get blob() {\r\n        return this._blob;\r\n      }\r\n  \r\n      get size() {\r\n        return this._size;\r\n      }\r\n  \r\n      get uploaded() {\r\n        return this._uploaded;\r\n      }\r\n  \r\n      get chunk_size() {\r\n        return this._chunk_size;\r\n      }\r\n  \r\n  \r\n      get url() {\r\n          return this._url;\r\n      }\r\n  \r\n  \r\n      getChunk(index) {\r\n        const start = (this._chunk_size == 0) ? 0 : index * this._chunk_size;\r\n        let end = (this._chunk_size == 0) ? this._size : (index + 1) * this._chunk_size;\r\n        if (end > this._size) end = this._size;\r\n        const view = new DataView(this._blob, start, end - start);\r\n        let buffer = [];\r\n        for(let i = 0, n=view.byteLength; i<n; ++i) {\r\n          buffer.push(view.getInt8(i));\r\n        }\r\n        return buffer.join('');\r\n      }\r\n  \r\n  \r\n      loadFile(id) {\r\n          let data = {};\r\n          data.__key = id;\r\n          return Client.get(this._url, data)\r\n          .catch(e => {\r\n              alert(e);\r\n          });\r\n      }\r\n  \r\n      delFile(id) {\r\n          let data = {};\r\n          data.__key = id;\r\n          return Client.delete(this._url, data)\r\n          .catch(e => {\r\n              alert(e);\r\n          });\r\n      }\r\n  \r\n      saveFile(file) {\r\n          //this needs to be a promise\r\n          this._size = file.size;\r\n          return new Promise(( resolve, reject) => {\r\n            const fr = new FileReader();\r\n            let _self = this;\r\n            fr.onload = function(e) {\r\n              _self.blob = e.target.result;\r\n              resolve(fr.result);\r\n            }\r\n            fr.onerror = reject;\r\n            fr.readAsArrayBuffer(file);  \r\n          })\r\n          .then(() => {\r\n            let promises = [];\r\n            //else, do we have any assets?\r\n            let chunks = (this.chunk_size == 0) ? 1 : Math.ceil(this.size / this.chunk_size);\r\n            for(let i=0; i<chunks; ++i) {\r\n                const data = {};\r\n                data.__chunk = i;\r\n                data.__blob = this.getChunk(i);\r\n                promises.push(Client.put(this._url, data));\r\n            }\r\n            return Promise.all(promises);\r\n          });\r\n        }\r\n} ","import { Field } from \"./field.js\"\r\n\r\nexport class Time extends Field {\r\n\r\n    constructor(name, obj) {\r\n        super(name);\r\n        if (obj) this.apply(obj);\r\n    }\r\n\r\n\r\n    addAPIParam(obj, val) {\r\n        let cobj = {};\r\n        if (val) {\r\n            if (val.min) cobj.min = val.min;\r\n            if (val.max) cobj.max = val.max;\r\n            if (Object.keys(cobj).length > 0) {\r\n                obj[this._name] = cobj;\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    getChange1(store) {\r\n        if (store.change == null) store.change = store.value;\r\n        if (!store.change) return \"\";\r\n        return store.change.min;\r\n    }\r\n\r\n\r\n    setChange1(store, val) {\r\n        if (!store.change) store.change = { min: null, max: null };\r\n        store.change.min = this.clean(val);\r\n        store.error = this.validate(val);\r\n    }\r\n\r\n\r\n    getChange2(store) {\r\n        if (store.change2 == null) store.change2 = store.value;\r\n        if (!store.change2) return \"\";\r\n        return store.change2;\r\n    }\r\n\r\n\r\n    setChange2(store, val) {\r\n        store.change2 = this.clean(val);\r\n        store.error = this.validate(val);\r\n    }\r\n}","import { Field } from \"./field.js\"\r\n\r\nexport class Number extends Field {\r\n    constructor(name, obj) {\r\n        super(name);\r\n        this._round = 0;\r\n\r\n        if (obj) this.apply(obj);\r\n    }\r\n\r\n    clean(val) {\r\n        if (this._round) return parseFloat(val);\r\n        else return parseInt(val);\r\n    }\r\n\r\n    getVal(store) {\r\n        let val = (store.value) ? store.value : 0;\r\n        return val.toFixed(this._round);\r\n    }\r\n\r\n    setVal(store, val) {\r\n        store.value = this.clean(val);\r\n        store.error = this.validate(val);\r\n    }\r\n\r\n    getChange(store) {\r\n        if (store.change == null) store.change=  store.value;\r\n        if (!store.change) return \"\";\r\n        return store.change.toFixed(this._round);\r\n    }\r\n\r\n    setChange(store, val) {\r\n        store.change = this.clean(val);\r\n        store.error = this.validate(val);\r\n        this.trigger(val);\r\n    }\r\n\r\n    getFilter(store) {\r\n        let val = (store.value) ? store.value : 0;\r\n        return store.value.toFixed(this._round);\r\n    }\r\n    \r\n    setFilter(store, val) {\r\n        store.value = this.clean(val);\r\n    }\r\n\r\n\r\n    getChange1(store) {\r\n        if (store.change == null) store.change = store.value;\r\n        if (!store.change) return \"\";\r\n        return store.change.toFixed(this._round);\r\n    }\r\n\r\n\r\n    setChange1(store, val) {\r\n        if (!store.change) store.change = store.value;\r\n        store.change = this.clean(val);\r\n        store.error = this.validate(val);\r\n    }\r\n\r\n   \r\n    getChange2(store) {\r\n        if (store.change2 == null) store.change2 = store.value;\r\n        if (!store.change2) return \"\";\r\n        return store.change2.toFixed(this._round);\r\n    }\r\n\r\n\r\n    setChange2(store, val) {\r\n        store.change2 = this.clean(val);\r\n        store.error = this.validate(val);\r\n    }\r\n\r\n    get round() {\r\n        return this._round;\r\n    }\r\n\r\n    set round(round) {\r\n        this._round = round;\r\n    }\r\n}","import { Field } from \"./field.js\"\r\n\r\nexport class String extends Field {\r\n\r\n    constructor(name, obj) {\r\n        super(name);\r\n\r\n        if (obj) this.apply(obj);\r\n    }\r\n\r\n    setContainsAsOptions(options) {\r\n        let opts = [];\r\n        for(let exp of this._contains) {\r\n            if (exp.indexOf(\":\") > -1) {\r\n                const pts = exp.split(\":\");\r\n                opts.push({ key : pts[0], value : pts[1]});\r\n            } else {\r\n                opts.push({ key : exp, value : exp});\r\n            }\r\n        }\r\n        options.value = opts;\r\n    }\r\n\r\n\r\n    addAPIParam(obj, val) {\r\n        if (val) {\r\n            let arr = [];\r\n            for(let i in val) {\r\n                if (val[i]) arr.push(\"%\" + val[i] + \"%\");\r\n            }\r\n            if (arr.length > 0) obj[this._name] = arr;\r\n        }\r\n    }\r\n\r\n    getChange1(store) {\r\n        if (store.change == null) store.change = store.value;\r\n        if (store.change == null) return [];\r\n        else return store.change;\r\n    }\r\n\r\n\r\n    setChange1(store, val) {\r\n        if (store.change == null) store.change = [];\r\n        store.change.push(this.clean(val));\r\n        store.error = this.validate(val);\r\n    }\r\n\r\n\r\n    getFilter(store) {\r\n        return store.value;\r\n    }\r\n\r\n\r\n    setFilter(store, val) {\r\n        if (Array.isArray(val)) store.value = val;\r\n        else if (val) store.value = [val];\r\n    }\r\n\r\n}","import { ID} from \"./id.js\"\r\nimport { Flag } from \"./flag.js\"\r\nimport { Asset } from \"./asset.js\"\r\nimport { Time } from \"./time.js\"\r\nimport { Number } from \"./number.js\"\r\nimport { String } from \"./string.js\"\r\n\r\nexport function createField(field, obj) {\r\n    if (obj.type == \"ID\") return new ID(field, obj);\r\n    else if (obj.type ==\"Number\") return new Number(field, obj);\r\n    else if (obj.type == \"Asset\") return new Asset(field, obj);\r\n    else if (obj.type == \"Flag\") return new Flag(field, obj);\r\n    else if (obj.type == \"Time\") return new Time(field, obj);\r\n    else return new String(field, obj);\r\n}","import { reactive} from \"vue\"\r\nimport { createField } from \"./meta/fieldfactory.js\"\r\n\r\nexport class MetaRow {\r\n\r\n    constructor() {\r\n        this._cells = {};\r\n        this._children = [];\r\n        this._active = 0;\r\n        this._init = false;\r\n        this._store = reactive({index : null});\r\n        this._state_groups = {};\r\n      \r\n        const keys = Object.keys(this);\r\n\r\n        keys.forEach(property => {\r\n          if (property[0] == \"_\") {\r\n            Object.defineProperty(this, property.substring(1), {\r\n                get: function() { \r\n                    return this[property];\r\n                },\r\n                set: function(newValue) {\r\n                    this[property] = newValue;\r\n                }\r\n            });\r\n          } \r\n        });\r\n    }\r\n\r\n\r\n    addChild(name, child) {\r\n        this._children[name] = child;\r\n    }\r\n\r\n    addState(name, action) {\r\n        this._actions[name] = action;\r\n    }\r\n\r\n\r\n    resetSummary(arr) {\r\n\r\n        for(let i in this._cells) {\r\n            this._cells[i].summary = false;\r\n        }\r\n        \r\n        for(let i in arr) {\r\n            if (this._cells[arr[i]]) {\r\n                this._cells[arr[i]].summary = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    setStates(fields) {\r\n        for(let i in fields) {\r\n            let groups = {};\r\n            if (fields[i].states) {\r\n                for(const state of fields[i].states) {\r\n                    if (!groups[state.depends_on]) groups[state.depends_on] = [];\r\n                    groups[state.depends_on].push(state); \r\n                }\r\n            }\r\n            this._state_groups[i] = groups;\r\n        }\r\n    }\r\n\r\n    mapField(field, obj) {\r\n        this._cells[field] = createField(field, obj);\r\n         \r\n        if (this._cells[field].recursive) {\r\n            this._store.index = field;\r\n        }\r\n    }\r\n\r\n    map(fields, limited_fields = []) {\r\n        if (limited_fields.length > 0) {\r\n            for(let field of limited_fields) {\r\n                this.mapField(field, fields[field]);\r\n            }\r\n        } else {\r\n            for (let i in fields) {\r\n                this.mapField(i, fields[i]);\r\n            }\r\n        }\r\n        this.setStates(fields);\r\n    }\r\n\r\n\r\n    getCellByType(type) {\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].type == type) cells[i] = this._cells[i];\r\n        }\r\n        return cells;\r\n    }\r\n\r\n    showAll() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].summary = true;\r\n        }\r\n    }\r\n\r\n}","import { reactive, computed } from \"vue\"\r\n\r\nexport class DataCell {\r\n\r\n    constructor(meta) {\r\n        this._store = reactive({ \r\n            meta : meta, \r\n            value: null, \r\n            change: null,\r\n            change2 : null,\r\n            display: null, \r\n            error: 0, \r\n            is_validate_on: false \r\n        });\r\n\r\n\r\n        const meta_keys = Object.getOwnPropertyNames(meta);\r\n        const keys = Object.keys(this);\r\n\r\n        const _self = this;\r\n        meta_keys.forEach(property => {\r\n            if (property[0] != \"_\" && !keys.includes(property)) {\r\n                this[property] = computed({\r\n                    get: function () {\r\n                        return _self.store.meta[property];\r\n                    },\r\n                    set: function (newValue) {\r\n                        _self.store.meta[property] = newValue;\r\n                    }\r\n                })\r\n            }\r\n        });\r\n\r\n\r\n\r\n        this.error = computed({\r\n            get: () => { return this._store.error; },\r\n            set: val => { \r\n                this._store.error = parseInt(val); \r\n                this._store.is_validate_on = true; \r\n            }\r\n        });\r\n\r\n        this.display = computed({\r\n            get: () => {\r\n                if (Array.isArray(this._store.display)) {\r\n                    if (this._store.display.length > 0) return this._store.display.join(\" \");\r\n                    else return this._store.value;\r\n                } else if (this._store.display) return this._store.display;\r\n                else return this._store.value;\r\n            },\r\n            set: (row) => {\r\n                this._store.display = [];\r\n                const fields = this._store.meta.include_fields;\r\n                if (fields) {\r\n                    for(const field of fields) {\r\n                        const fname = this._store.meta.name + \"/\" + field;\r\n                        this._store.display.push(row[fname]);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        this.showError = computed(() => {\r\n            let res = this._store.is_validate_on && this._store.error ? true : false;\r\n            return this._store.is_validate_on && this._store.error ? true : false;\r\n        });\r\n\r\n        if (this._store.meta.default_val) this._store.value = this._store.meta.default_val;\r\n        else if (this._store.meta.type == \"select\") this._store.value = 0;\r\n\r\n        this.val = computed({\r\n            get: () => {\r\n                return this._store.meta.getVal(this._store);\r\n            },\r\n            set: (val) => {\r\n                this._store.value = this._store.meta.clean(val);\r\n                this._store.error = this._store.meta.validate(val);\r\n            }\r\n        });\r\n\r\n        this.change = computed({\r\n            get: () => {\r\n                return this._store.meta.getChange(this._store);\r\n            },\r\n            set: (val) => {\r\n                this._store.meta.setChange(this._store, val);\r\n            }\r\n        });\r\n\r\n       \r\n        this.change1 = computed({\r\n            get: () => {\r\n                return this._store.meta.getChange1(this._store);\r\n            },\r\n            set: (val) => {\r\n                this._store.meta.setChange1(this._store, val);\r\n            }\r\n        });\r\n\r\n        this.change2 = computed({\r\n            get: () => {\r\n                if (typeof this._store.meta.getChange2 === \"function\") {\r\n                    return this._store.meta.getChange2(this._store);\r\n                }\r\n            },\r\n            set: (val) => {\r\n                this._store.meta.setChange2(this._store, val);\r\n            }\r\n        });\r\n\r\n\r\n        this.filter = computed({\r\n            get: () => {\r\n                return this._store.meta.getFilter(this._store);\r\n            },\r\n            set: (val) => {\r\n                this._store.meta.setFilter(this._store, val);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    get meta() {\r\n        return this._store.meta;\r\n    }\r\n\r\n    set validateon(on) {\r\n        this._store.is_validate_on = on;\r\n    }\r\n\r\n    get store() {\r\n        return this._store;\r\n    }\r\n\r\n    resetMeta(meta) {\r\n        this._store.meta = meta;\r\n    }\r\n\r\n    toString() {\r\n        return this._store.display;\r\n    }\r\n\r\n    isSummary() {\r\n        return this._store.meta.summary;\r\n    }\r\n\r\n    setContainsAsOptions(options) {\r\n        this._store.meta.setContainsAsOptions(options);\r\n    }\r\n\r\n    reset() {\r\n        this._store.change = null;\r\n        this._store.value = null;\r\n    }\r\n\r\n    getOption(key) {\r\n        if (this._store.meta.type == 'string') return key;\r\n        else return this._store.meta.getOption(key);\r\n    }\r\n\r\n\r\n    addParam(obj) {\r\n        this._store.meta.addParam(obj, this._store.value)\r\n    }\r\n\r\n    addAPIParam(obj) {\r\n        this._store.meta.addParam(obj, this._store.value)\r\n    }\r\n    \r\n}\r\n","import { createField } from \"./meta/fieldfactory.js\"\r\n\r\nexport function createStateTrigger(name, states, cb) {\r\n\r\n    let group = [];\r\n    for(let i in states) {\r\n        let field = createField(name, states[i]);\r\n        group.push({ depends_val : states[i].depends_val, field });\r\n    }\r\n    \r\n    return (val) => {\r\n        for(const state of group) {\r\n            if (state.depends_val == val) {\r\n                return cb(state.field);\r\n            }\r\n        }\r\n\r\n        //if we get to here, then set a default\r\n        for(const state of group) {\r\n            if (!state.depends_val) {\r\n                return cb(state.field);\r\n            }\r\n        }\r\n    }\r\n\r\n}           ","import { DataCell } from \"./datacell.js\"\r\nimport { reactive, computed } from \"vue\"\r\nimport { createStateTrigger } from \"./states.js\"\r\n\r\n\r\nexport class DataRow {\r\n\r\n    constructor(metarow) {\r\n        this._metarow = metarow;\r\n        this._cells = reactive({});\r\n        this._children = {};\r\n        this._ids = reactive({});\r\n        \r\n        \r\n\r\n\r\n        if (metarow) {\r\n            this.applyMetaRow(metarow);\r\n        }\r\n\r\n        this.cells = computed(() => {\r\n            return this._cells;\r\n        });\r\n        \r\n    }\r\n\r\n    \r\n\r\n    set children(children) {\r\n        this._children = children;\r\n    }\r\n\r\n    get children() {\r\n        return this._children;\r\n    }\r\n\r\n    get primary() {\r\n        return this._ids[\"--id\"];\r\n    }\r\n\r\n    get parent() {\r\n        return this._ids[\"--parentid\"];\r\n    }\r\n\r\n\r\n    clone() {\r\n        const data = new DataRow(this._metarow);\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            cells[i].val = this._cells[i].val;\r\n        }\r\n    \r\n        let children = {};\r\n        for(let i in data.children) {\r\n            children[i] = data.children[i].clone();\r\n        }\r\n        data.children = children;\r\n        return data;\r\n    }\r\n\r\n    \r\n    applyMetaRow(metarow) {\r\n        for(const i in metarow.cells) {\r\n            const field = metarow.cells[i];\r\n            this._cells[field.name] = new DataCell(field);\r\n        }\r\n\r\n        for(const i in metarow.children) {\r\n            this._children[i] = metarow.children[i];\r\n        }\r\n\r\n        let groups = metarow.state_groups;\r\n\r\n\r\n        for(let i in groups) {\r\n            for(let x in groups[i]) {\r\n                const _self = this;\r\n                let state = createStateTrigger(i, groups[i][x], field => {\r\n                    _self._cells[i].resetMeta(field);\r\n                });\r\n                this._cells[x].listeners.push(state);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    addChild(name, child) {\r\n        if (!this._children[name]) {\r\n            this._children[name] = [];\r\n        }\r\n        this._children[name].push(child);\r\n    }\r\n\r\n    set row(row) {\r\n        if (!row) return;\r\n\r\n        if (row[\"--id\"]) this._ids[\"--id\"] = row[\"--id\"];\r\n        if (row[\"--parentid\"]) this._ids[\"--parentid\"] = row[\"--parentid\"];\r\n\r\n        for(let field in this._cells) {\r\n            if (row.hasOwnProperty(field)) {\r\n                this._cells[field].val = row[field];\r\n                this._cells[field].display = row;\r\n            }\r\n        }\r\n\r\n        for(let child in this._children) {\r\n            this._children[child].row = row[child];\r\n        }\r\n    }\r\n\r\n\r\n    set filter(row) {\r\n        if (!row) return;\r\n\r\n        for(let field in this._cells) {\r\n            if (row.hasOwnProperty(field)) this._cells[field].filter = row[field];\r\n        }\r\n    }\r\n\r\n\r\n    getSummary() {\r\n        let str = [];\r\n        for(let i in this._cells) {\r\n            const cell = this._cells[i];\r\n            if (cell.isSummary()) {\r\n                const display = cell.display;\r\n                str.push(display);\r\n            }\r\n        }\r\n        return str.join(\" \");\r\n    }\r\n\r\n    toString() {\r\n        let str = [];\r\n        for(let i in this._cells) {\r\n            str.push(this._cells[i].display);\r\n        }   \r\n        return str.join(\" \");\r\n    }\r\n\r\n\r\n    serialize(changes_only = false) {\r\n        let data = {};\r\n        for(let i in this._cells) {\r\n            if (changes_only) {\r\n                if (this._cells[i].change != this._cells[i].val) {\r\n                    data[i] = this._cells[i].change;\r\n                }\r\n            } else {\r\n                if (this._cells[i].change != null) data[i] = this._cells[i].change;\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n\r\n    getCellByType(type) {\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].type == type) cells[i] = this._cells[i];\r\n        }\r\n        return cells;\r\n    }\r\n\r\n    clearErrors() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].error = 0;\r\n        }\r\n    }\r\n\r\n\r\n    reset() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].error = 0;\r\n            this._cells[i].change = null;\r\n        }\r\n    }\r\n\r\n    setErrors(err) {\r\n        for(let i in err) {\r\n            if (i.indexOf(\"__\") === 0) continue;\r\n            if (this._cells[i]) {\r\n                this._cells[i].error = err[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    convertToParams() {\r\n        let obj = {};\r\n        for(let i in this._cells) {\r\n            this._cells[i].addParam(obj);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    convertToAPIParams() {\r\n        let obj = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].type == \"asset\") continue;\r\n            this._cells[i].addAPIParam(obj);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    applyChangeData() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].val = this._cells[i].change;\r\n        }\r\n    }\r\n\r\n}","import { MetaRow } from \"./metarow.js\"\r\nimport { DataRow } from \"./datarow.js\"\r\nimport { Map } from \"./map.js\"\r\nimport { reactive } from \"vue\"\r\nimport client from \"./client.js\"\r\nimport { getModelSettings } from \"./route.js\" \r\n\r\n\r\nexport const RepoStore = reactive({meta : new MetaRow, data : [], indexes : {}, search : new DataRow() });\r\n\r\nexport function applySettings(settings) {\r\n    meta_settings = settings;\r\n}\r\n\r\nfunction indexData() {\r\n    RepoStore.indexes = {};\r\n    \r\n    for(const key in RepoStore.data) {\r\n        const row = RepoStore.data[key];\r\n        let ckey = row.cells[RepoStore.meta.store.index].val;\r\n        if (!RepoStore.indexes[ckey]) RepoStore.indexes[ckey] = [];\r\n        RepoStore.indexes[ckey].push(key);\r\n    }\r\n}\r\n\r\n\r\nfunction mapRepoData(response) {\r\n    RepoStore.data = [];\r\n    for (const i in response) {\r\n        let obj= new DataRow(RepoStore.meta);\r\n        obj.row = response[i];\r\n        RepoStore.data.push(obj);\r\n    }\r\n}\r\n\r\n\r\nfunction buildParams(meta_settings) {\r\n    let params = {};\r\n    if (!params) params = {};\r\n    if (Map.to) params.__to = Map.to;\r\n    if (meta_settings.to) params.__to = meta_settings.to;\r\n    if (Map.key) params[\"--parentid\"] = Map.key;\r\n    if (meta_settings.limit) params.__limit = meta_settings.limit;\r\n    if (meta_settings.fields) params.__fields = meta_settings.fields;\r\n    if (meta_settings.group) params.group = meta_settings.group;\r\n    if (Map.params._page) params.__limit = ((Map.params._page - 1) * params.__limit) + \",\" + params.__limit;\r\n    return params;\r\n}\r\n\r\nexport function resetRepo() {\r\n    RepoStore.meta = new MetaRow();\r\n    RepoStore.data = [];\r\n    RepoStore.indexes = {};\r\n    RepoStore.search = new DataRow();\r\n    RepoStore.max_pages = 0;\r\n}\r\n\r\n\r\nexport const loadRepo = async() => {\r\n    let meta_settings = getModelSettings();\r\n    \r\n    resetRepo();\r\n    let params = buildParams(meta_settings);\r\n    let url = \"/\" + Map.route + \"/\" + Map.model;\r\n    if (Map.state == \"parent\") url += \"/parent\";\r\n    return client.get(\"/route\" +url, params)\r\n    .then(response => {\r\n        RepoStore.meta.map(response.fields, meta_settings.fields);\r\n        if (meta_settings.show == 'all') {\r\n            RepoStore.meta.showAll();\r\n        }\r\n\r\n        RepoStore.search.applyMetaRow(RepoStore.meta);\r\n        RepoStore.search.filter = Map.params;\r\n        RepoStore.meta.init = true;\r\n\r\n        if (meta_settings.component) RepoStore.component = meta_settings.component;\r\n        else if (!RepoStore.meta.cells) RepoStore.component = \"\";\r\n        else RepoStore.component = (RepoStore.meta.store.index || RepoStore.meta.children.length > 0) ? \"tree\" : \"table\";\r\n    }).then(() => {\r\n        params = { ...params, ...RepoStore.search.convertToAPIParams()};\r\n        if (meta_settings.limit > 0) {\r\n            return client.get(\"/count/\" + Map.route + \"/\" + Map.model, params)\r\n            .then(response => {\r\n                RepoStore.max_pages = Math.ceil(response.count / meta_settings.limit);\r\n            })\r\n            .then(() => {\r\n                return client.get(\"/data\" + url, params);\r\n            })\r\n            .then(response => {\r\n                mapRepoData(response);\r\n                if (RepoStore.meta.store.index) indexData();\r\n                return response;\r\n            });\r\n        } else {\r\n            return client.get(\"/data\" + url, params)\r\n            .then(response => {\r\n                mapRepoData(response);\r\n                if (RepoStore.meta.store.index) indexData();\r\n                return response;\r\n            });\r\n        }\r\n    })\r\n    .catch(e => console.log(e));\r\n}\r\n\r\n\r\nexport function reorderRepo(positions) {\r\n    const arr = [];\r\n    arr.length = RepoStore.data.length;\r\n    for(let i in RepoStore.data) {\r\n        arr[positions[RepoStore.data[i].primary] - 1] = RepoStore.data[i];\r\n    }\r\n    RepoStore.data = arr;\r\n}\r\n","<template >\r\n    <div class=\"ptj-tree-node ptj-draggable\" :id=\"primary\" draggable=\"false\">\r\n        <div class=\"ptj-tree-node-row\">  \r\n            <div>\r\n                <a v-if=\"ischild\" data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle()\">\r\n                    <span class=\"material-icons\">subdirectory_arrow_right</span>\r\n                </a>\r\n                <a v-else data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle()\">\r\n                    <span class=\"material-icons\">keyboard_arrow_right</span>\r\n                </a>\r\n            </div>\r\n            <div v-if=\"RepoStore.meta.sortable\">\r\n                <a data-action=\"more\" class=\"button\" @click=\"prevent.stop\" @mousedown=\"setDraggable\" @mouseup=\"endDraggable\">\r\n                    <span class=\"material-icons\">drag_handle</span>\r\n                </a>\r\n            </div>\r\n            <div>{{ summary }}</div>\r\n            <ptj-button :route=\"{state:'primary', key:primary }\"><span class=\"material-icons\">arrow_forward_ios</span></ptj-button>\r\n        </div>\r\n        <ptj-tree-node v-for=\"(key, index) in children\" :row=\"key\" :ischild=\"true\"  :key=\"index\" v-show=\"store.toggle_state[primary]\" />\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, computed, onMounted } from \"vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport { RepoStore } from \"./../js/repo.js\"\r\n\r\nconst props = defineProps({\r\n    row : { \r\n        type : [String, Number],\r\n        required : true\r\n    },\r\n    draggable : Boolean,\r\n    ischild : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n});\r\n\r\nconst store = reactive({ toggle_state : {}, branch : null });\r\n\r\nfunction toggle() {\r\n    const index = store.branch.primary;\r\n    store.toggle_state[index] = (store.toggle_state[index]) ? false : true;\r\n}\r\n\r\nconst children = computed(() => {\r\n    if (!store.branch) return [];\r\n    const id = store.branch.primary;\r\n    return (RepoStore.indexes[id]) ? RepoStore.indexes[id] : [];\r\n});\r\n\r\nconst primary = computed(() => {\r\n    if (!store.branch) return 0;\r\n    return store.branch.primary;\r\n});\r\n\r\nconst summary = computed(() => {\r\n    if (!store.branch) return \"\";\r\n    return store.branch.getSummary();\r\n});\r\n\r\nonMounted(() => {\r\n    store.branch = RepoStore.data[props.row];\r\n});\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.model-tree.branch {\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  margin: 6px 0;\r\n  background-color:#111111;\r\n}\r\n\r\n.tree .ide-block {\r\n\tdisplay : none;\r\n}\r\n\r\n.dragArea {\r\n  min-height: 50px;\r\n  outline: 1px solid #777777;\r\n}\r\n\r\n\r\n</style>","<template>\r\n  <input v-if=\"type=='edit' || type=='post'\"\r\n        class=\"ptj-form-number\" \r\n        :name=\"field.name\" \r\n        type=\"number\" \r\n        v-model=\"field.change\" \r\n        v-bind=\"atts\"\r\n        @blur=\"field.validateon = true\" >\r\n   <div v-else-if=\"type=='filter'\">\r\n       <input\r\n        class=\"ptj-form-filter-number ptj-min\" \r\n        :name=\"field.name\" \r\n        type=\"number\" \r\n        v-model=\"field.change1\" \r\n        v-bind=\"atts\"\r\n        @blur=\"field.validateon = true\"> - \r\n        <input\r\n        class=\"ptj-form-filter-number ptj-max\" \r\n        :name=\"field.name\" \r\n        type=\"number\" \r\n        v-model=\"field.change2\" \r\n        v-bind=\"atts\"\r\n        @blur=\"field.validateon = true\">\r\n   </div>\r\n   <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from \"vue\"\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        type : String,\r\n        default : 'view'\r\n    }\r\n});\r\n\r\n\r\nconst atts = computed(() => {\r\n    let atts = {};\r\n    if (props.field.meta.round) {\r\n        let step = \"0.\";\r\n        for(let i=0; i<props.field.meta.round - 1; ++i) {\r\n            step += \"0\";\r\n        }\r\n        step += \"1\";\r\n        atts[\"step\"]  = step;\r\n    }\r\n    return atts;\r\n});\r\n</script>\r\n","<template>\r\n    <input class=\"ptj-checkbox\" type=\"checkbox\" :true-value=\"1\" :false-value=\"0\" :name=\"field.name\" v-model=\"field.change\" v-if=\"ctype=='edit' || type == 'post'\">\r\n    <select v-else-if=\"ctype=='filter'\" :name=\"field.name\" v-model=\"field.change1\" class=\"ptj-filter-form-checkbox\">\r\n        <option :value='0'>{{ \"All\" }}</option>\r\n        <option :value='1'>{{ \"Checked\" }}</option>\r\n        <option :value='2'>{{ \"Unchecked\" }}</option>\r\n    </select>\r\n    <a v-else @click=\"submit()\"><span class=\"material-icons\">{{ icon }}</span></a>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from \"vue\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport client from \"./../js/client.js\"\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        type : String,\r\n        default : 'view'\r\n    },\r\n    id : Number\r\n});\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n\r\nfunction submit() {\r\n    let params = {};\r\n    params[\"--id\"] = props.id;\r\n    params[props.field.name] = (props.field.val == 1) ? 0 : 1;\r\n    return client.put(\"/data/\" + Map.route + \"/\" + Map.model, params)\r\n    .then(() => {\r\n        props.field.val = (props.field.val == 1) ? 0 : 1;\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n\r\nlet icon = computed(() => {\r\n    if (props.field.val == 1) {\r\n        return \"check_circle_outline\";\r\n    } else {\r\n        return \"highlight_off\"\r\n    }\r\n});\r\n</script>","<template>\r\n    <select v-if=\"ctype=='edit' || type == 'post'\" \r\n        v-model=\"field.change\"\r\n        v-bind=\"field.atts\"\r\n        :name=\"field.name\"\r\n         @blur=\"field.validateon = true\"\r\n        >\r\n        <option value=\"0\" selected>{{ getDictionary('ptj-id-default') }}</option>\r\n        <option v-for=\"option in options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <ptj-multiple-select v-else-if=\"ctype=='filter'\" :field=\"field\" :options=\"options\" />\r\n  <span v-else>{{ field.display }}</span>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { computed, ref, onMounted } from \"vue\"\r\nimport PtjMultipleSelect from \"./ptj-multiple-select.vue\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        default : 'view',\r\n        type : String\r\n    },\r\n    parent : Number\r\n});\r\n\r\nconst options = ref([]);\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n\r\nasync function getOptions() {\r\n    let url = \"/reference/\" + Map.model + \"/\";\r\n    url += (props.field.meta.reference) ? props.field.name : \"id\";\r\n    options.value = await props.field.meta.setReferenceOptions(\r\n        url, \r\n        {\"--parentid\":props.parent}\r\n    );\r\n}\r\n\r\n\r\nif (props.field.meta.reference || props.field.meta.recursive) {\r\n    onMounted(() => {\r\n        getOptions();\r\n    });\r\n    \r\n}\r\n\r\n\r\n</script>","<template>\r\n  <input v-if=\"ctype=='edit' || ctype == 'post'\"\r\n        :name=\"field.name\" \r\n        type=\"datetime-local\" \r\n        v-model=\"field.change\" \r\n        v-bind=\"field.atts\"\r\n        @blur=\"field.validateon = true\">\r\n   <div v-else-if=\"ctype=='filter'\">\r\n      <input \r\n        type=\"datetime-local\" \r\n        :name=\"field.name + 'min'\"\r\n        v-bind=\"field.atts\"\r\n        v-model=\"field.change1\">\r\n        -\r\n        <input \r\n            type=\"datetime-local\" \r\n            :name=\"field.name + 'max'\"\r\n            v-bind=\"field.atts\"\r\n            v-model=\"field.change2\"\r\n        >\r\n   </div>\r\n   <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from \"vue\"\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        default : 'view',\r\n        type : String\r\n    }\r\n});\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n</script>\r\n","<template>\r\n   <input v-if=\"type=='edit'  || type == 'post'\" class=\"ptj-form-asset\" \r\n    ref=\"input\" @change=\"setFile\" \r\n    :name=\"field.meta.name\" \r\n    type=\"file\" >\r\n   <span v-else>{{ field.val }}   <a @click=\"download()\"><span class=\"material-icons\">download</span></a></span>\r\n   \r\n</template>\r\n\r\n<script setup>\r\nimport client from \"./../js/client.js\"\r\n\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        type : String,\r\n        default : 'view'\r\n    },\r\n    id : Number\r\n});\r\n\r\nfunction download() {\r\n    client.getAsset(\"/asset/\" + props.field.model + \"/\" + props.field.name + \"/\" + props.id)\r\n    .then(blob => {\r\n\r\n        const anchor = document.createElement(\"a\");\r\n        const url = URL.createObjectURL(blob);\r\n        anchor.href = url;\r\n        anchor.download = props.field.val;\r\n        document.body.appendChild(anchor);\r\n        anchor.click();\r\n        document.body.removeChild(anchor);\r\n        URL.revokeObjectURL(url);\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n</script>\r\n","<template>\r\n  <div class=\"ptj-table-wrapper\">\r\n    <table class=\"ptj-table\" :class=\"Map.model\">\r\n    <thead>\r\n        <tr class=\"ptj-table-header\" ref=\"tableheader\">\r\n        <th v-for=\"cell in RepoStore.meta.cells\" \r\n            v-show=\"cell.summary\" \r\n            :key=\"cell.name\" \r\n            class=\"ptj-table-header-cell\"\r\n            :class=\"cell.name\"\r\n            @click=\"orderBy(cell.name);\"\r\n        >{{ getDictionary('label', { \"model\" : cell.model, \"field\" : cell.name, def : cell.name }) }}\r\n            <span v-if=\"order.name == cell.name && order.dir == 'asc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_up</span>\r\n            <span v-if=\"order.name == cell.name && order.dir == 'desc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_down</span>\r\n        </th>\r\n        <th class=\"ptj-actions\">\r\n            <ptj-modal v-if=\"settings.disable_selectfields != true\" :location=\"false\" :relative=\"tableheader\">\r\n                <template #button>\r\n                    <span class=\"material-icons\">add</span> \r\n                </template>\r\n                <template #default>\r\n                    <ptj-selectfields ></ptj-selectfields> \r\n                </template>\r\n            </ptj-modal>\r\n        </th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"(obj, rindex) in RepoStore.data\" :key=\"rindex\" class=\"ptj-table-row\">\r\n        <td v-for=\"(field, name) in obj.cells\" :key=\"name\" v-show=\"field.summary\" class=\"ptj-table-cell\" :class=\"field.name\">\r\n          <ptj-asset v-if=\"field.type=='asset'\" :field=\"field\" :id=\"obj.primary\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" :field=\"field\" :id=\"obj.primary\" />\r\n          <ptj-id v-else-if=\"field.type=='id'\" :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.type=='time'\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" :field=\"field\"  />\r\n        </td>\r\n        <td class=\"ptj-actions\" >\r\n            <ptj-button :route=\"{state:'primary', key:obj.primary}\"><span class=\"material-icons\">arrow_forward_ios</span></ptj-button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjSelectfields from \"./ptj-selectfields.vue\"\r\nimport PtjModal from \"./ptj-modal.vue\"\r\nimport { reactive, ref } from \"vue\"\r\nimport { RepoStore } from \"./../js/repo.js\"\r\nimport { getModelSettings } from \"./../js/route.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\n\r\nlet settings = getModelSettings();\r\nlet order = reactive( { name : '', dir : ''});\r\nconst tableheader = ref(null);\r\n\r\nfunction orderBy(name) {\r\n    if (RepoStore.meta.pages > 0) {\r\n        order.dir = (!order.name != name || order.dir  == \"desc\") ? \"asc\" : \"desc\";\r\n        order.name = name;\r\n        let sort = [];\r\n        sort[order.name] = order.dir;\r\n        RepoStore.meta.sort = sort;\r\n        load();\r\n    } else {\r\n        //custom sort on the table\r\n        if (order.name != name || order.dir == \"desc\") {\r\n            RepoStore.data.sort(function(x, y) {\r\n                let xval = x.getCell(name).toVal();\r\n                let yval = y.getCell(name).toVal();\r\n                if (xval < yval) {\r\n                    return -1;\r\n                } else if (xval > yval) {\r\n                    return 1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n            order.name = name;\r\n            order.dir = \"asc\";\r\n        } else {\r\n            RepoStore.data.sort(function(x, y) {\r\n                let xval = x.getCell(name).toVal();\r\n                let yval = y.getCell(name).toVal();\r\n                if (xval < yval) {\r\n                    return 1;\r\n                } else if (xval > yval) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n            order.name = name;\r\n            order.dir = \"desc\";\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\ntable, thead, tbody, tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n.ptj-table-wrapper {\r\n    position : relative;\r\n}\r\n\r\n</style>","<template>\r\n    <div v-for=\"(combinations, index) in getIndexCombinations\" :key=\"index\">\r\n     <h3><span\r\n        v-for=\"(tag, index) in combinations.tags\"\r\n        :key=\"index\"\r\n        >{{ tag }}&nbsp;</span></h3>\r\n    <ul>\r\n       <li v-for=\"ckey in combinations.data\" :key=\"ckey\">\r\n         <ptj-button :route=\"route\">\r\n          {{  data[ckey].getSummary() }}\r\n         </ptj-button>\r\n       </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { computed, inject } from \"vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\ninject(\"data\");\r\ninject(\"indexes\");\r\n\r\nfunction getCombinations(tag, data, combos) {\r\n    const ncombos = [];\r\n    if (combos.length == 0) {\r\n        for(let d in data) {\r\n        ncombos.push({ tags : [ data[d].display ], data : data[d].contains});\r\n        }\r\n    } else {\r\n        for (let c of combos) {\r\n          for(let d in data) {\r\n            let tags = c.tags;\r\n            tags.push(d.display);\r\n            ncombos.push({ tags : tags, data : c.data.filter( value => data[d].contains.includes(value))});\r\n          }\r\n        }\r\n    }\r\n    return ncombos;\r\n}\r\n\r\nconst getIndexCombinations = computed(() => { \r\n    let combos = [];\r\n    for (let group in indexes) {\r\n        combos = this.getCombinations(group, indexes[group], combos);\r\n    }\r\n    return combos;\r\n});\r\n</script>\r\n\r\n","<template>\r\n   <form @submit.prevent=\"searchData\" class=\"ptj-filter-form\">\r\n      <h3>{{ getDictionary('ptj-filter-form-title')}}</h3>\r\n      <ptj-form-row v-for=\"field in RepoStore.search.cells\" :key=\"field.name\" :field=\"field\" v-show=\"field.type != 'id' || field.meta.reference || field.meta.recursive\">\r\n          <ptj-id v-if=\"field.type=='id'\" type=\"filter\" :field=\"field\" :parent=\"Map.key\"/>\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.type=='time'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" type=\"filter\" :field=\"field\" />\r\n          <a class=\"ptj-filter-form-reset\" @click=\"field.reset()\">x</a>\r\n      </ptj-form-row>\r\n      <input type=\"submit\" :value=\"getDictionary('ptj-filter-form-btn')\" class=\"ptj-filter-form-submit\" @click=\"$emit('close');\">\r\n  </form>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport { addToHistory } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { RepoStore, loadRepo } from \"./../js/repo.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\n\r\nfunction searchData() {\r\n    RepoStore.search.applyChangeData();\r\n    Map.params = RepoStore.search.convertToParams();\r\n    addToHistory();\r\n    loadRepo();\r\n}\r\n\r\n\r\n</script>\r\n<style scoped>\r\n.error {\r\n  color : red;\r\n}\r\n\r\n</style>\r\n\r\n","<template>\r\n <div class=\"ptj-pagination\">\r\n     <a v-for=\"index in RepoStore.max_pages\" \r\n     :key=\"index\" \r\n     @click=\"changePage(index)\" \r\n     :class=\"getActiveClass(index)\">{{ index }}</a>\r\n </div>\r\n</template>\r\n<script setup>\r\nimport { addToHistory } from \"./../js/route.js\"\r\nimport { loadRepo, RepoStore } from \"./../js/repo.js\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\nfunction getActiveClass(index) {\r\n    return (index == Map.params._page ?? 1) ? \"ptj-pagination-active\" : \"\";\r\n}\r\n\r\nfunction changePage(page) {\r\n    Map.params._page = page;\r\n    addToHistory();\r\n    loadRepo();\r\n}\r\n</script>","<template>\r\n    <div class=\"ptj-progress-bar-wrapper\">\r\n        <div class=\"ptj-progress-holder\">\r\n            <div class=\"ptj-progress-bar\" :style=\"'width:' + num + 'px'\">&nbsp;</div> \r\n        </div>   \r\n        <span>{{ num }}%</span>\r\n    </div> \r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { computed } from \"vue\"\r\n\r\nconst props = defineProps({\r\n    total : Number,\r\n    progress : Number\r\n});\r\n\r\n\r\nconst num = computed(() => {\r\n    let num = Math.floor((props.progress / props.total) * 100);\r\n    return (isNaN(num)) ? 0 : num;\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n .ptj-progress-holder {\r\n     width : 100%;\r\n     min-height : 10px;\r\n     position : relative;\r\n     display : flex;\r\n     align-items: stretch;\r\n     padding : 2px;\r\n }\r\n\r\n .ptj-progress-bar {\r\n     width : 0;\r\n     height : 100%;\r\n     position : relative;\r\n     line-height : 100%;\r\n }\r\n\r\n\r\n</style>\r\n","<template>\r\n <form @submit.prevent=\"submit\" v-show=\"fstate==0\" class=\"ptj-form\" :class=\"Map.model + ' ' + Map.state\">\r\n    <div class=\"ptj-form-error\" v-show=\"globalerror\">{{ globalerror }}</div>\r\n    <ptj-form-row v-for=\"field in cdata.cells\" :key=\"field.name\" :field=\"field\">\r\n          <ptj-asset v-if=\"field.type=='asset'\" type=\"post\"  :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" type=\"post\"  :field=\"field\"/>\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" type=\"post\"  :field=\"field\" />\r\n          <ptj-id v-else-if=\"field.type=='id'\" type=\"post\"  :field=\"field\"  :parent=\"Map.key\" />\r\n          <ptj-time v-else-if=\"field.type=='time'\" type=\"post\"   :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" type=\"post\"  :field=\"field\" />\r\n          <ptj-form-row :field=\"field\" v-if=\"field.encrypted\">\r\n            <ptj-confirm :field=\"field\" />\r\n          </ptj-form-row>\r\n    </ptj-form-row>\r\n    <input type=\"submit\" :value=\"getDictionary('ptj-create-form-btn')\" class=\"ptj-form-submit\">\r\n    <ptj-progress-bar v-show=\"fstate == 1\" :total=\"progress.total\" :progress=\"progress.progress\" />\r\n  </form>\r\n  \r\n</template>\r\n\r\n<script setup>\r\n\r\nimport {ref, reactive, onMounted } from \"vue\" \r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjProgressBar from \"./ptj-progress-bar.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjConfirm from \"./ptj-form-confirm.vue\"\r\nimport client from \"./../js/client.js\"\r\nimport { DataRow } from \"./../js/datarow.js\"\r\nimport { MetaRow } from \"./../js/metarow.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { loadRepo } from \"./../js/repo.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\nconst emit = defineEmits(['close']);\r\nlet globalerror = ref('');\r\n\r\nconst cdata = reactive(new DataRow());\r\n\r\n\r\nconst progress = reactive({ total : 0, progress : 0});\r\n\r\nlet fstate = 0;\r\n\r\n\r\n\r\nconst load = async() => {\r\n    return client.post(\"/route/\" + Map.route + \"/\" + Map.model)\r\n    .then(response => {\r\n        const meta = new MetaRow();\r\n        meta.map(response.fields);\r\n        cdata.applyMetaRow(meta);\r\n\r\n        let promises = [];\r\n        for(let i in meta.cells) {\r\n            if (meta.cells[i].type == 'id' && meta.cells[i].reference) {\r\n                let url = \"/reference/\" + Map.model + \"/\" + i;\r\n                promises.push(meta.cells[i].setReferenceOptions(url, {\"--parentid\":Map.key}));\r\n            }\r\n        }\r\n        return Promise.all(promises);\r\n    }).catch(e => console.log(e));\r\n}\r\n\r\n\r\nfunction submit() {\r\n\r\n    fstate = (progress.total > 0) ? 1 : 2;\r\n    cdata.clearErrors();\r\n    let key = 0;\r\n    let ndata = cdata.serialize();\r\n    if (Map.key) ndata[\"--parentid\"] = Map.key;\r\n    return client.post(\"/data/\" + Map.route + \"/\" + Map.model, ndata)\r\n    .then(response=>{\r\n        key = response[\"--id\"];\r\n        let promises = [];\r\n        let assets = cdata.getCellByType(\"asset\");\r\n        progress.total = 0;\r\n        for(let i in assets) {\r\n            const val = assets[i].val;\r\n            if (!val) continue;\r\n            ++progress.total;\r\n            const asset = new Asset();\r\n            asset.url = \"/asset/\" + Map.model + \"/\" + i + \"/\" + response[\"--id\"];\r\n            let promise = asset.saveFile(assets[i].val)\r\n            .then(() => {\r\n                ++progress.progress;\r\n            });\r\n            promises.push(promise);\r\n        }\r\n        return Promise.all(promises);\r\n    })\r\n    .then(() => {\r\n        cdata.reset();\r\n        loadRepo();\r\n        emit(\"close\");\r\n    })\r\n    .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n        fstate = 0;\r\n        return err.json()\r\n        .then(response => {\r\n            const msg = response.exception[0];\r\n            if (msg.type == \"PressToJamCore\\\\Exceptions\\\\ValidationException\") {\r\n                cdata.setErrors(JSON.parse(msg.message));\r\n            }\r\n            console.log(\"Err response\", response);\r\n        });\r\n        \r\n    });\r\n}\r\n\r\nonMounted(async () => {\r\n    await load();\r\n});\r\n\r\n</script>\r\n","<template>\r\n    <div class=\"ptj-drop-target\" \r\n            @dragover=\"dragOver\" \r\n            @dragenter=\"dragEnter\"\r\n            @dragleave=\"dragLeave\"\r\n            @drop=\"drop\">\r\n        <div v-for=\"(data, rindex) in RepoStore.data\" \r\n            :key=\"rindex\" \r\n            :id=\"data.primary\"\r\n            class=\"ptj-drag-target\" \r\n            draggable=\"true\" \r\n            @dragstart=\"dragStart\"\r\n            @dragend=\"dragEnd\"\r\n            >\r\n            <span>{{ data.getSummary() }}</span>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script setup>\r\nimport { RepoStore } from \"./../js/repo.js\"\r\nimport client from \"./../js/client.js\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\nlet _drag_target;\r\nlet _x =0;\r\nlet _y=0;\r\n\r\nconst emit = defineEmits(['reorder']);\r\n\r\n\r\nfunction getDirection(x, y) {\r\n    const dir_x = (x == _x) ? 0 : (x > _x) ? 1 : -1;\r\n    const dir_y = (y == _y) ? 0 : (y > _y) ? 1 : -1;\r\n      \r\n    return { x : dir_x, y : dir_y };\r\n}\r\n\r\nfunction insertAfter(drop_target) {\r\n    if (drop_target.nextElementSibling) {\r\n        drop_target.parentNode.insertBefore(_drag_target, drop_target.nextElementSibling);\r\n    } else {\r\n        drop_target.parentNode.append(_drag_target);\r\n    }\r\n}\r\n\r\nfunction insertBefore(drop_target) {\r\n    drop_target.parentNode.insertBefore(_drag_target, drop_target);\r\n}\r\n\r\nfunction dragStart(ev) {\r\n    const targ = ev.target;\r\n    _drag_target = targ;\r\n  \r\n    ev.dataTransfer.dropEffect = \"move\";\r\n    _drag_target.style.opacity = '0.4';\r\n\r\n    _x = ev.clientX;\r\n    _y = ev.clientY;\r\n}\r\n\r\n\r\nfunction dragEnd() {\r\n    _drag_target.style.opacity = \"1.0\";\r\n}\r\n\r\n\r\nfunction dragEnter(ev) {\r\n    ev.preventDefault();\r\n    ev.dataTransfer.dropEffect = \"move\";\r\n\r\n    const dir = getDirection(ev.clientX, ev.clientY);\r\n\r\n    if (dir.y == 1) {\r\n        insertAfter(ev.target.closest(\".ptj-drag-target\"));\r\n    } else if (dir.y == -1) {\r\n        insertBefore(ev.target.closest(\".ptj-drag-target\"));\r\n    }\r\n    _x = ev.clientX;\r\n    _y = ev.clientY;\r\n}\r\n\r\nfunction dragLeave(ev) {\r\n    ev.preventDefault();\r\n}\r\n\r\nfunction dragOver(ev) {\r\n    ev.preventDefault();\r\n    ev.dataTransfer.dropEffect = \"move\";\r\n}\r\n\r\n\r\nfunction drop(ev) {\r\n    ev.preventDefault();\r\n    ev.dataTransfer.dropEffect = 'move';\r\n    let indexes = getOrder();\r\n    let url = \"/data/\" + Map.route + \"/\" + Map.model + \"/resort\";\r\n    client.put(url, {\"_rows\" : indexes })\r\n    .catch(e => console.log(e));\r\n\r\n\r\n    const positions = {};\r\n    for(let obj of indexes) {\r\n        positions[obj['--id']] = obj['--sort'];\r\n    }\r\n\r\n    emit('reorder', positions);\r\n   \r\n}\r\n\r\n\r\nfunction getOrder() {\r\n    let index = [];\r\n    const children = _drag_target.closest(\".ptj-drop-target\").querySelectorAll(\".ptj-drag-target\");\r\n    for(let c=0; c<children.length; ++c) {\r\n        index.push({\"--id\" : children[c].getAttribute(\"id\"), \"--sort\" : c + 1});\r\n    }\r\n    return index;\r\n}\r\n\r\n</script>","<template>\r\n  <div :class=\"[Map.model, Map.state]\">\r\n    <ptj-modal v-if=\"RouteStore.route.perms.includes('post')\">\r\n        <template #button>\r\n            {{ getDictionary('ptj-repo-post') }}\r\n        </template>\r\n        <template #default=\"createScope\">\r\n            <ptj-create-form @close=\"createScope.toggleShow\" />\r\n        </template>\r\n    </ptj-modal>\r\n    <ptj-modal v-if=\"settings.disable_filter != true\">\r\n        <template #button>\r\n            {{ getDictionary('ptj-repo-search') }} <span class=\"material-icons\">search</span>\r\n        </template>\r\n        <template #default=\"filterScope\">\r\n            <ptj-filter-form @close=\"filterScope.toggleShow\" />\r\n        </template>\r\n    </ptj-modal>\r\n    <ptj-modal v-if=\"settings.disable_sort != true && RouteStore.sort && RouteStore.route.perms.includes('put')\">\r\n        <template #button>\r\n            {{ getDictionary('ptj-repo-sort') }} <span class=\"material-icons\">sort</span>\r\n        </template>\r\n        <template #default=\"sortScope\">\r\n            <ptj-sort @close=\"sortScope.toggleShow\" @reorder=\"reorder\"/>\r\n        </template>\r\n    </ptj-modal>\r\n    <ptj-tree v-if=\"RepoStore.component=='tree'\" />\r\n    <ptj-list v-else-if=\"RepoStore.component=='list'\" />\r\n    <ptj-table v-else-if=\"RepoStore.component=='table'\" />\r\n    <ptj-pagination v-if=\"RepoStore.max_pages > 0\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { ref, onMounted, onBeforeUnmount } from \"vue\"\r\nimport PtjTree from \"./ptj-tree.vue\"\r\nimport PtjTable from \"./ptj-table.vue\"\r\nimport PtjList from \"./ptj-list.vue\"\r\nimport PtjFilterForm from \"./ptj-filter-form.vue\"\r\nimport PtjSelectfields from \"./ptj-selectfields.vue\"\r\nimport PtjPagination from \"./ptj-pagination.vue\"\r\nimport PtjModal from \"./ptj-modal.vue\"\r\nimport PtjCreateForm from \"./ptj-create-form.vue\"\r\nimport { RepoStore, loadRepo, resetRepo, reorderRepo } from \"./../js/repo.js\"\r\nimport { getModelSettings, RouteStore } from \"./../js/route.js\" \r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\nimport PtjSort from \"./ptj-sort.vue\"\r\n\r\n\r\nlet settings = getModelSettings();\r\n\r\nfunction reorder(positions) {\r\n    reorderRepo(positions);\r\n}\r\n\r\n\r\nonMounted(async () => {\r\n    await loadRepo();\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n    resetRepo();\r\n});\r\n\r\n</script>\r\n<script>\r\n\r\n</script>\r\n\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n</style>","<template>\r\n    <p>{{ title }}</p>\r\n    <input type=\"text\" :placeholder=\"check_str\" @keyup=\"checkStatus\" v-model=\"delval\">\r\n    <button :disabled=\"disabled\" @click=\"del\">{{ btn }}</button>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport client from \"./../js/client.js\"\r\nimport { ref, computed } from \"vue\";\r\nimport { redirect } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\nconst props = defineProps({\r\n    check_str : {\r\n        type : String,\r\n        default : \"delete\"\r\n    },\r\n    parentid : {\r\n        default : 0\r\n    }\r\n});\r\n\r\nconst emits = defineEmits(['close']);\r\n\r\nlet delval = ref(\"\");\r\nlet disabled = ref(true);\r\nlet title = computed(() => {\r\n    return getDictionary(\"ptj-delete-title\",  { val : props.check_str});\r\n});\r\n\r\nlet btn = computed(() => {\r\n    return getDictionary(\"ptj-delete-btn\");\r\n});\r\n\r\nfunction checkStatus() {\r\n    disabled.value = (delval.value == props.check_str) ? false : true;\r\n}\r\n\r\nfunction del() {\r\n    client.delete(\"/data/\" + Map.route + \"/\" + Map.model, {\"--id\":Map.key})\r\n    .then(res => {\r\n        Map.state = \"parent\";\r\n        Map.key = props.parentid.val;\r\n        redirect();\r\n    })\r\n    .catch(e => console.log(e));\r\n}\r\n    \r\n</script>\r\n","<template>\r\n    <a v-if=\"RouteStore.route.perms.includes('put')\" @click=\"toggleState\" class=\"ptj-edit-toggle\">{{ next_state }}</a>\r\n    <ptj-modal v-if=\"RouteStore.route.perms.includes('delete')\" cls=\"ptj-del-modal\">\r\n        <template #button>\r\n            {{ getDictionary('ptj-primary-delete') }}\r\n        </template>\r\n        <template #default=\"delScope\">\r\n            <ptj-delete :parentid=\"store.data.parent\" @close=\"delScope.toggleShow\" />\r\n        </template>\r\n    </ptj-modal>\r\n    <div class=\"ptj-primary\" :class=\"Map.model\">\r\n        <ptj-form-row v-for=\"field in store.data.cells\" :key=\"field.name\" :field=\"field\"> \r\n          <ptj-asset v-if=\"field.type=='asset'\" :type=\"store.type\" :field=\"field\" :id=\"store.data.primary\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" :type=\"store.type\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" :type=\"store.type\" :field=\"field\" :id=\"store.data.primary\" />\r\n          <ptj-id v-else-if=\"field.type=='id'\" :type=\"store.type\" :field=\"field\" :parent=\"store.data.parent\" />\r\n          <ptj-time v-else-if=\"field.type=='time'\" :type=\"store.type\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" :type=\"store.type\" :field=\"field\"  />\r\n        </ptj-form-row>\r\n        <input v-if=\"store.type =='edit'\" type=\"submit\" :value=\"getDictionary('ptj-primary-put-btn')\" class=\"ptj-form-submit\" @click=\"submit\">\r\n    </div>\r\n    <div class=\"ptj-children\">\r\n        <ptj-button v-for=\"action in RouteStore.route.children\" :key=\"action\" :route=\"{ model : action, state : 'parent', key : Map.key}\">\r\n            {{ action }}\r\n        </ptj-button>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport client from \"./../js/client.js\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport { DataRow } from \"./../js/datarow.js\"\r\nimport { reactive, computed, onMounted, onBeforeUnmount } from \"vue\"\r\nimport PtjDelete from \"./ptj-delete.vue\"\r\nimport PtjModal from \"./ptj-modal.vue\"\r\nimport PtjForm from \"./ptj-create-form.vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport { MetaRow } from \"./../js/metarow.js\"\r\nimport {RouteStore, getModelSettings } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n  \r\n\r\n\r\nconst store = reactive({ data : new DataRow(), fstate : 0,  type : 'view', show_def : false, progress : { total : 0, progress : 0} });\r\n\r\n\r\n\r\nfunction toggleState() {\r\n    store.type = (store.type == \"view\") ? \"edit\" : \"view\";\r\n}\r\n\r\nlet next_state = computed(() => {\r\n    return (store.type == \"edit\") ? \"view\" : \"edit\";\r\n});\r\n\r\n\r\n\r\nfunction buildParams(meta_settings) {\r\n    let params = {};\r\n    if (Map.to) params.__to = Map.to;\r\n    if (Map.key) {\r\n        if (Map.key == \"first\") params.__limit = 1;\r\n        else params[\"--id\"] = Map.key;\r\n    }\r\n    if (meta_settings.fields) params.__fields = meta_settings.fields;\r\n    return params;\r\n}\r\n\r\n\r\nfunction reset() {\r\n    store.data = new DataRow();\r\n    store.fstate = 0;\r\n    store.type = \"view\";\r\n    store.show_def = false;\r\n    store.progress = { total : 0, progress : 0};\r\n}\r\n\r\nconst load = async() => {\r\n    let meta_settings = getModelSettings();\r\n    let params = buildParams(meta_settings);\r\n   \r\n    return client.get(\"/route/\" + Map.route + \"/\" + Map.model + \"/primary\", params)\r\n    .then(response => {\r\n        const meta = new MetaRow();\r\n        meta.map(response.fields, meta_settings.fields ?? []);\r\n        store.data.applyMetaRow(meta);\r\n    }).then(() => {\r\n        return client.get(\"/data/\" + Map.route + \"/\" + Map.model + \"/primary\", params);\r\n    }).then(response => {\r\n        store.data.row = response;\r\n        //set the change values as well for each row\r\n        for(let i in store.data.cells) {\r\n            store.data.cells[i].change = store.data.cells[i].val;\r\n        }\r\n    }).then(response => {\r\n        for(let i in store.data.cells) {\r\n            if (store.data.cells[i].type == \"id\" && store.data.cells[i].reference) {\r\n                let url = \"/reference/\" + Map.model + \"/\" + i;\r\n                store.data.cells[i].setReferenceOptions(url, {\"--id\" : Map.key});\r\n            }\r\n        }\r\n    }).catch(e => console.log(e));\r\n\r\n}\r\n\r\n\r\nfunction submit() {\r\n\r\n    store.fstate = (store.progress.total > 0) ? 1 : 2;\r\n    store.data.clearErrors();\r\n    let key = 0;\r\n    let ndata = store.data.serialize(true);\r\n    if (Object.keys(ndata).length == 0) {\r\n        toggleState();\r\n        return;\r\n    }\r\n    ndata[\"--id\"] = Map.key;\r\n    return client.put(\"/data/\" + Map.route + \"/\" + Map.model, ndata)\r\n    .then(response=>{\r\n        let promises = [];\r\n        let assets = store.data.getCellByType(\"asset\");\r\n        store.progress.total = 0;\r\n        for(let i in assets) {\r\n            const val = assets[i].val;\r\n            if (!val) continue;\r\n            ++store.progress.total;\r\n            const asset = new Asset();\r\n            asset.url = \"/asset/\" + Map.model + \"/\" + i + \"/\" + response[\"--id\"];\r\n            let promise = asset.saveFile(assets[i].val)\r\n            .then(() => {\r\n                ++store.progress.progress;\r\n            });\r\n            promises.push(promise);\r\n        }\r\n        return Promise.all(promises);\r\n    })\r\n    .then(() => {\r\n        for(let i in store.data.cells) {\r\n            store.data.cells[i].val = store.data.cells[i].change;\r\n        }\r\n    })\r\n    .then(() => {\r\n        toggleState();\r\n    })\r\n    .catch(err => {\r\n            //show error fields, mark fields as invalidate\r\n        store.fstate = 0;\r\n        if (typeof err == \"string\") {\r\n            globalerror = err;\r\n        } else {\r\n            return err.json()\r\n            .then(response => {\r\n                const msg = response.exception[0];\r\n                if (msg.type == \"PressToJamCore\\\\Exceptions\\\\ValidationException\") {\r\n                    store.data.setErrors(JSON.parse(msg.message));\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nonMounted(async () => {\r\n await load();\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n    reset();\r\n});\r\n\r\n</script>","<template>\r\n <div class=\"ptj-account-handler\">\r\n    <form @submit.prevent=\"submit\" v-show=\"store.state=='login'\" class=\"ptj-login\">\r\n        <div class=\"ptj-form-error\" v-show=\"store.globalerror\">{{ store.globalerror }}</div>\r\n        <ptj-form-row v-for=\"field in store.login_data.cells\" :key=\"field.meta.name\" :field=\"field\">\r\n          <ptj-string type=\"post\" :field=\"field\" />\r\n        </ptj-form-row>\r\n        <input type=\"submit\" :value=\"getDictionary('ptj-account-handler-btn-login')\" class=\"ptj-form-submit\">\r\n        <a v-if=\"RouteStore.route.perms.includes('post')\" @click=\"toggleState('create')\">Register</a>\r\n        <a @click=\"toggleState('forgotpassword')\">Forgotten password?</a>\r\n    </form>\r\n    <form  @submit.prevent=\"submit\" v-show=\"store.state=='create'\" class=\"ptj-register\">\r\n        <div class=\"ptj-form-error\" v-show=\"store.globalerror\">{{ store.globalerror }}</div>\r\n        <ptj-form-row v-for=\"field in store.register_data.cells\" :key=\"field.meta.name\" :field=\"field\">\r\n          <ptj-number v-if=\"field.meta.type=='number'\" type=\"post\" :field=\"field\"/>\r\n          <ptj-flag v-else-if=\"field.meta.type=='flag'\" type=\"post\" :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.meta.type=='time'\" type=\"post\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.meta.type=='string'\" type=\"post\" :field=\"field\" />\r\n          <ptj-form-row :field=\"field\" v-if=\"field.encrypted\">\r\n            <ptj-confirm :field=\"field\" />\r\n          </ptj-form-row>\r\n        </ptj-form-row>\r\n        <input type=\"submit\" :value=\"getDictionary('ptj-account-handler-btn-create')\" class=\"ptj-form-submit\">\r\n        <a v-if=\"RouteStore.route.perms.includes('login')\" @click=\"toggleState('login')\">Login</a>\r\n    </form>\r\n    <form  @submit.prevent=\"submit\" v-show=\"store.state=='forgotpassword'\" class=\"ptj-register\">\r\n        <div class=\"ptj-form-error\" v-show=\"store.globalerror\">{{ store.globalerror }}</div>\r\n        <ptj-form-row v-for=\"field in store.forgot_password.cells\" :key=\"field.meta.name\" :field=\"field\">\r\n          <ptj-string type=\"post\" :field=\"field\" />\r\n          <ptj-form-row :field=\"field\">\r\n            <ptj-confirm :field=\"field\" />\r\n          </ptj-form-row>\r\n        </ptj-form-row>\r\n        <input type=\"submit\" :value=\"getDictionary('ptj-account-handler-btn-forgot-password')\" class=\"ptj-form-submit\">\r\n        <a @click=\"toggleState('login')\">Login</a>\r\n    </form>\r\n </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport { refresh } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { reactive } from 'vue'\r\nimport { DataRow } from './../js/datarow.js';\r\nimport { MetaRow } from \"./../js/metarow.js\"\r\nimport client from \"./../js/client.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\nimport {RouteStore } from \"./../js/route.js\"\r\nimport PtjConfirm from \"./ptj-form-confirm.vue\"\r\n\r\nconst props = defineProps({\r\n    actions : []\r\n});\r\n\r\n\r\nconst store = reactive({\r\n    state : 'login',\r\n    active : true,\r\n    login_data : new DataRow(),\r\n    register_data : new DataRow(),\r\n    forgot_password : new DataRow(),\r\n    globalerror : ''\r\n});\r\n\r\nfunction toggleState(state) {\r\n    store.state = state;\r\n}\r\n\r\n//load our modules\r\n\r\nclient.post(\"/route/\" + Map.route + \"/\" + Map.model)\r\n.then(response => {\r\n    let meta = new MetaRow();\r\n    meta.map(response.fields);\r\n    store.register_data.applyMetaRow(meta);\r\n});\r\n\r\nclient.post(\"/route/\" +  Map.route + \"/\" + Map.model + \"/login\")\r\n.then(response => {\r\n    let meta = new MetaRow();\r\n    meta.map(response.fields);\r\n    store.login_data.applyMetaRow(meta);\r\n\r\n    store.forgot_password.applyMetaRow(meta);\r\n});\r\n\r\n\r\nfunction submit() {\r\n    store.active = false;\r\n    store.globalerror = \"\";\r\n    if (store.state == \"login\") {\r\n        return client.post(\"/data/\" +  Map.route + \"/\" + Map.model + \"/login\", store.login_data.serialize(\"login\"))\r\n        .then(response => {\r\n            refresh();\r\n        })\r\n        .catch(e => {\r\n            store.globalerror = \"Incorrect username / password\";\r\n        });\r\n    } else if (store.state == \"forgotpassword\") {\r\n        return client.post(\"/data/\" +  Map.route + \"/\" + Map.model + \"/forgotpassword\", store.forgot_password.serialize(\"login\"))\r\n        .then(response => {\r\n            refresh();\r\n        })\r\n        .catch(e => {\r\n            store.globalerror = \"Incorrect username / password\";\r\n        });\r\n    } else {\r\n        return client.post(\"/data/\" + Map.route + \"/\" +  Map.model, store.register_data.serialize(\"post\"))\r\n        .then(response => {\r\n            refresh();\r\n        })\r\n        .catch(e => {\r\n            store.register_data.applyErrors(e);\r\n        });\r\n    }\r\n} \r\n</script>\r\n\r\n\r\n","<template>\r\n    <ptj-slug-trail />\r\n    <Suspense>\r\n        <template #default>\r\n            <div :class=\"[Map.model, Map.state]\">\r\n            <h1>{{ RouteStore.title }}</h1>\r\n            <component v-if=\"component\" :is=\"component\" />\r\n            </div>\r\n        </template>\r\n        <template #fallback>\r\n            <div>Loading ...</div>\r\n        </template>\r\n    </Suspense>\r\n</template>\r\n<script setup>\r\n\r\nimport { computed, onMounted } from \"vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjSlugTrail from \"./ptj-slug-trail.vue\"\r\nimport { RouteStore, loadRoute, loadSlugTrail } from \"./../js/route.js\"\r\nimport PtjRepo from \"./ptj-repo.vue\"\r\nimport PtjPrimary from \"./ptj-primary.vue\"\r\nimport PtjAccountHandler from \"./ptj-account-handler.vue\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\n\r\nconst component = computed(() => {\r\n    if (!RouteStore.component) return null;\r\n    else if (RouteStore.component == \"ptj-primary\") return PtjPrimary;\r\n    else if (RouteStore.component == \"ptj-repo\") return PtjRepo;\r\n    else if (RouteStore.component == \"ptj-account-handler\") return PtjAccountHandler;\r\n});\r\n\r\n\r\n\r\n\r\nonMounted(() => {\r\n    loadSlugTrail();\r\n    return loadRoute();\r\n});\r\n\r\n</script>","let settings = {};\r\nimport client from \"./client.js\"\r\nimport { Map } from \"./map.js\"\r\nimport { initUser } from \"./user.js\"\r\nimport { initSettings} from \"./route.js\"\r\n\r\n\r\nexport function PtjRun(settings = {}) {\r\n    if (!settings) settings = {};\r\n    if (!settings.client) {\r\n        throw \"Must set client settings\";\r\n    }\r\n\r\n    if (!settings.client.url) {\r\n        throw(\"No URL defined for client\");\r\n    }\r\n\r\n    client.initSettings(settings.client);\r\n\r\n    if (settings.map) {\r\n        Map.initSettings(settings.map);\r\n    }\r\n\r\n    initSettings(settings.models);\r\n\r\n    let role = (settings.user && settings.user.role) ? settings.user.role : \"\";\r\n    return initUser(role);\r\n}\r\n","import PTJUser from \"./presstojam/src/components/ptj-user.vue\"\r\nimport PTJRoute from \"./presstojam/src/components/ptj-router.vue\"\r\nimport { PtjRun } from \"./presstojam/src/js/controller.js\"\r\nimport Client from \"./presstojam/src/js/client.js\"\r\nimport { createApp } from \"vue\"\r\nimport { loadNav } from \"./presstojam/src/js/user.js\"\r\n \r\nexport function runApp(mount, user_settings) {\r\n    PtjRun(user_settings)\r\n    .then(() => {\r\n        return loadNav()\r\n    }).then(() => {\r\n        const app = createApp(PTJUser);\r\n        app.mount(mount);\r\n        return app;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n\r\nexport function runRoute(mount, user_settings) {\r\n    PtjRun(user_settings)\r\n    .then(() => {\r\n        const app = createApp(PTJRoute);\r\n        app.mount(mount);\r\n        return app;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n\r\n\r\nexport function getClient(settings) {\r\n\r\n    if (!settings.client) {\r\n        throw \"Must set client settings\";\r\n    }\r\n\r\n    if (!settings.client.url) {\r\n        throw(\"No URL defined for client\");\r\n    }\r\n\r\n    Client.initSettings(settings.client);\r\n    return Client;\r\n}\r\n\r\n"],"names":["active","ref","toggleShow","value","relstyle","computed","props","relative","obj","el","left","top","width","offsetWidth","height","offsetHeight","wrapper","classList","contains","offsetLeft","offsetTop","parentNode","getOffsetToWrapper","disabled","getClass","location","styleInject","css","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","main_url","custom_headers","initSettings","settings","url","name","run","method","params","body","headers","Headers","set","i","fetch","mode","cache","credentials","then","response","ok","json","get","data","URLSearchParams","Array","isArray","append","JSON","stringify","indexOf","toString","this","getprimary","post","put","patch","getAsset","blob","delete","Map","constructor","_route","_model","_state","_key","_to","_params","_base","_default","Object","keys","forEach","property","defineProperty","substring","newValue","action_map","id","model","state","to","reset","route","key","convertToURL","pts","x","push","join","param_str","base","convertFromURL","url_obj","URL","window","href","pathname","replace","parts","split","length","_self","searchParams","pop","isNaN","parseInt","Error","getAll","default","apply","model_settings","onpopstate","runRoute","RouteStore","reactive","component","title","parent","slug","sort","getModelSettings","loadRoute","children","perms","client","catch","e","console","log","loadSlugTrail","refresh","redirect","addToHistory","url_str","protocol","host","history","pushState","custom_val","selectCustom","field","change1","change","filter","item","getOption","opt","options","show_list","display","symbol","toggleList","select","target","getAttribute","dictionary","getDictionary","vals","str","exp","models","fields","def","val","Errors","store","validateon","fstate","submit","ndata","emit","err","globalerror","cdata","setErrors","ctype","immutable","tag","enums","regEx","RegExp","test","isEnum","setContainsAsOptions","encrypted","html","max","atts","readonly","pholder","placeholder","includes","User","init","login","user","NavStore","cats","routes","logout","Client","checkLoginStatus","is_expired","setTimeout","initUser","role","loadNav","cat","route_name","getDefault","Field","_name","_store","summary","_default_val","_immutable","_encrypted","_min","_max","_contains","_notcontains","_listeners","_type","toLowerCase","validation","min","notcontains","clean","calcValue","validateSize","validate","nhas","match","has","trigger","addParam","addAPIParam","getVal","setVal","error","getChange","setChange","getFilter","setFilter","getErrorVal","ID","_reference","_include_fields","_recursive","_reference_to","reference_to","referenceTo","setReferenceOptions","getChange1","setChange1","reference","include_fields","recursive","Flag","Asset","_size","_blob","_uploaded","_chunk_size","_url","chunk_size","chunk","size","uploaded","getChunk","index","start","end","view","DataView","buffer","n","byteLength","getInt8","loadFile","__key","alert","delFile","saveFile","file","Promise","resolve","reject","fr","FileReader","onload","result","onerror","readAsArrayBuffer","promises","chunks","Math","ceil","__chunk","__blob","all","Time","cobj","getChange2","change2","setChange2","Number","_round","parseFloat","toFixed","round","String","opts","arr","createField","MetaRow","_cells","_children","_active","_init","_state_groups","addChild","child","addState","action","_actions","resetSummary","setStates","groups","states","depends_on","mapField","map","limited_fields","getCellByType","cells","showAll","DataCell","meta","is_validate_on","meta_keys","getOwnPropertyNames","row","fname","showError","default_val","on","resetMeta","isSummary","createStateTrigger","cb","group","depends_val","DataRow","metarow","_metarow","_ids","applyMetaRow","primary","clone","state_groups","listeners","hasOwnProperty","getSummary","cell","serialize","changes_only","clearErrors","convertToParams","convertToAPIParams","applyChangeData","RepoStore","indexes","search","indexData","ckey","mapRepoData","resetRepo","max_pages","loadRepo","async","meta_settings","__to","limit","__limit","__fields","_page","buildParams","show","count","toggle_state","branch","toggle","step","icon","onMounted","getOptions","anchor","createObjectURL","download","click","removeChild","revokeObjectURL","order","dir","tableheader","pages","load","y","xval","getCell","toVal","yval","getIndexCombinations","combos","getCombinations","searchData","getActiveClass","page","num","floor","progress","total","assets","asset","promise","msg","exception","parse","message","_drag_target","_x","_y","dragStart","ev","targ","dataTransfer","dropEffect","opacity","clientX","clientY","dragEnd","dragEnter","preventDefault","drop_target","closest","nextElementSibling","dragLeave","dragOver","drop","querySelectorAll","c","getOrder","_rows","positions","reorder","reorderRepo","delval","check_str","btn","checkStatus","del","res","parentid","show_def","toggleState","next_state","login_data","register_data","forgot_password","applyErrors","PtjPrimary","PtjRepo","PtjAccountHandler","PtjRun","mount","user_settings","app","createApp","PTJUser","PTJRoute"],"mappings":"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"}