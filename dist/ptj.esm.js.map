{"version":3,"file":"ptj.esm.js","sources":["../presstojam/src/components/ptj-modal.vue","../node_modules/style-inject/dist/style-inject.es.js","../presstojam/src/js/client.js","../presstojam/src/js/map.js","../presstojam/src/js/route.js","../presstojam/src/components/ptj-button.vue","../presstojam/src/components/ptj-multiple-input.vue","../presstojam/src/components/ptj-multiple-select.vue","../presstojam/src/js/dictionary.js","../presstojam/src/components/ptj-string.vue","../presstojam/src/js/user.js","../presstojam/src/js/error.js","../presstojam/src/js/field.js","../presstojam/src/js/metarow.js","../presstojam/src/js/datacell.js","../presstojam/src/js/states.js","../presstojam/src/js/datarow.js","../presstojam/src/js/repo.js","../presstojam/src/components/ptj-tree-node.vue","../presstojam/src/components/ptj-flag.vue","../presstojam/src/components/ptj-id.vue","../presstojam/src/components/ptj-time.vue","../presstojam/src/components/ptj-asset.vue","../presstojam/src/components/ptj-table.vue","../presstojam/src/components/ptj-list.vue","../presstojam/src/components/ptj-filter-form.vue","../presstojam/src/components/ptj-pagination.vue","../presstojam/src/components/ptj-progress-bar.vue","../presstojam/src/components/ptj-create-form.vue","../presstojam/src/components/ptj-repo.vue","../presstojam/src/components/ptj-delete.vue","../presstojam/src/components/ptj-primary.vue","../presstojam/src/components/ptj-account-handler.vue","../presstojam/src/components/ptj-router.vue","../presstojam/src/js/controller.js","../import.js"],"sourcesContent":["<template>\r\n  <a @click=\"toggleShow\" class=\"ptj-modal-button\"><slot name=\"button\"></slot></a>\r\n  <teleport :disabled=\"disabled\" :to=\"location\">\r\n  <div class=\"ptj-modal-backdrop\" v-show=\"active\" :class=\"getClass\" :style=\"relstyle\">\r\n    <div class=\"ptj-modal\" :class=\"cls\">\r\n        <header>\r\n            <button\r\n          type=\"button\"\r\n          class=\"btn-close\"\r\n          @click=\"toggleShow\"\r\n        >\r\n          x\r\n        </button>\r\n        </header>\r\n      <slot :toggleShow=\"toggleShow\" name=\"default\">\r\n      </slot>\r\n    </div>\r\n  </div>\r\n  </teleport>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from \"vue\"\r\n\r\nconst props = defineProps({\r\n    location : {\r\n        default : 'body'\r\n    },\r\n    relative : {\r\n        default : false\r\n    },\r\n    cls : String\r\n});\r\n\r\nlet active = ref(false);\r\n\r\nfunction toggleShow() {\r\n    active.value = (active.value) ? false : true;\r\n}\r\n\r\nfunction getOffsetToWrapper(el) {\r\n    let obj = {\r\n        left : 0,\r\n        top : 0,\r\n        width : el.offsetWidth,\r\n        height : el.offsetHeight,\r\n        wrapper : 0\r\n    };\r\n    \r\n    while(!el.classList.contains('ptj-table-wrapper')) {\r\n        obj.left += el.offsetLeft;\r\n        obj.top += el.offsetTop;\r\n        el=el.parentNode;\r\n    }\r\n\r\n    obj.wrapper = el.offsetWidth;\r\n\r\n    return obj;\r\n}\r\n\r\nlet relstyle = computed(() => {\r\n    if (props.relative) {\r\n        let obj = getOffsetToWrapper(props.relative);\r\n        let right = obj.wrapper - (obj.left + obj.width);\r\n        return \"position:absolute;top:\" + (obj.top + obj.height) + \"px;right:0px;\";\r\n    } else {\r\n        return \"\";\r\n    }\r\n});\r\n\r\n\r\nlet disabled = computed(() => {\r\n    return (props.location) ? false : true;\r\n});\r\n\r\n\r\nlet getClass = computed(() => {\r\n    if (props.location == 'body') {\r\n        return \"ptj-modal-backdrop-full\";\r\n    } else {\r\n        return \"\";\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n</script>\r\n<style>\r\n.ptj-modal-backdrop-full {\r\n    position : absolute;\r\n    top : 0;\r\n    left : 0;\r\n    height : 100vh;\r\n    width : 100vw;\r\n}\r\n</style>","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","let custom_headers  = {};\r\nlet main_url;\r\n\r\nexport default {\r\n\r\n    initSettings(settings) {\r\n        main_url = settings.url;\r\n\r\n        if (settings.custom_headers) {\r\n            for(let name in settings.custom_headers) {\r\n                custom_headers[name] = settings.custom_headers[name];\r\n            }\r\n        }\r\n    },\r\n\r\n    run(method, url, params, body) {\r\n        const headers = new Headers();\r\n        if (params) {\r\n            headers.set('Content-Type', 'application/json');\r\n            body = params;\r\n        }\r\n\r\n        for(let i in custom_headers) {\r\n            headers.set(i, custom_headers[i]);\r\n        }\r\n\r\n        const options = {\r\n            method  : method,\r\n            mode : 'cors',\r\n            cache : 'no-cache',\r\n            credentials : 'include',\r\n            headers  : headers,\r\n            body : body\r\n        }\r\n\r\n        const _self = this;\r\n\r\n        return fetch(main_url + url, options)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw response;\r\n            }\r\n        });\r\n    }, \r\n    get(url, data) {\r\n        if (data) {\r\n            const params = new URLSearchParams();\r\n            for(let i in data) {\r\n                if (Array.isArray(data[i]) || (typeof data[i] == 'object' && data[i] !== null)) {\r\n                   params.append(i, JSON.stringify(data[i]));\r\n                } else params.append(i, data[i]);\r\n            }\r\n\r\n            if (url.indexOf(\"?\") == -1) url += \"?\";\r\n            else url += \"&\";\r\n            url += params.toString();\r\n        }\r\n        return  this.run('GET', url);\r\n    },\r\n\r\n    getprimary(url, data) {\r\n        return this.get(url, data);\r\n    },\r\n\r\n    post(url, data) {\r\n        //call our fetch response and return\r\n        return this.run('POST', url, JSON.stringify(data));\r\n    },\r\n\r\n    put(url, data) {\r\n        return this.run('PUT', url, JSON.stringify(data));\r\n    },\r\n\r\n    patch(url, data) {\r\n        return this.run('PATCH', url, null, data);\r\n    },\r\n\r\n    getAsset(url) {\r\n        const headers = new Headers();\r\n        for(let i in custom_headers) {\r\n            headers.set(i, custom_headers[i]);\r\n        }\r\n\r\n        const options = {\r\n            method  : 'GET',\r\n            mode : 'cors',\r\n            cache : 'no-cache',\r\n            credentials : 'include',\r\n            headers  : headers\r\n        }\r\n\r\n        const _self = this;\r\n\r\n        return fetch(main_url + url, options)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.blob();\r\n            } else {\r\n                throw response;\r\n            }\r\n        });\r\n    },\r\n\r\n    delete(url, data) {\r\n        return this.run('DELETE', url, JSON.stringify(data));\r\n    }\r\n}\r\n","class MapModel {\r\n\r\n    constructor() {\r\n        this._route = '';\r\n        this._model = '';\r\n        this._state = '';\r\n        this._key = 0;\r\n        this._to = '';\r\n        this._params = {};\r\n        this._base = \"/\";\r\n        this._default = false;\r\n    \r\n        const keys = Object.keys(this);\r\n\r\n        keys.forEach(property => {\r\n          if (property[0] == \"_\") {\r\n            Object.defineProperty(this, property.substring(1), {\r\n                get: function() { \r\n                    return this[property];\r\n                },\r\n                set: function(newValue) {\r\n                    if (newValue != this[property]) {\r\n                        this[property] = newValue;\r\n                    }\r\n                }\r\n            });\r\n          } \r\n        });\r\n\r\n\r\n        this.action_map = {\r\n            'post' : '-create',\r\n            'put' : '-update',\r\n            'delete' : '-delete',\r\n            'login' : '-login',\r\n            'logout' : '-logout',\r\n            'primary' : '-primary',\r\n            'parent' : '-parent',\r\n            'get' : ''\r\n        };\r\n\r\n    }\r\n\r\n    get id() {\r\n        return this.model + \"-\" + this.state + \"-\" + this.to;\r\n    }\r\n\r\n    reset() {\r\n        this.route = '';\r\n        this.model = '';\r\n        this.state = '';\r\n        this.key = 0;\r\n        this.to = '';\r\n        this.params = {};\r\n    }\r\n\r\n\r\n    convertToURL() {\r\n        let url = this._base + this.route + \"/\" + this.model + this.action_map[this.state];\r\n        if (this.key) url += \"-\" + this.key;\r\n        if (this.to) url += \"-to-\" + this.to;\r\n\r\n        let params = new URLSearchParams();\r\n        for(const i in this.params) {\r\n            if (!this.params[i]) continue;\r\n            if (typeof this.params[i] == 'object') {\r\n                let pts = [];\r\n                for(let x in this.params[i]) {\r\n                    pts.push(this.params[i][x]);\r\n                }\r\n                params.append(i, pts.join(\",\"));\r\n            } else {\r\n                params.append(i, this.params[i]);\r\n            }\r\n        }\r\n\r\n        let param_str = params.toString();\r\n        if (param_str) url += \"?\" + param_str;\r\n\r\n        return url;\r\n    }\r\n    \r\n    initSettings(settings) {\r\n        if (settings) this._base = settings.base;\r\n        this.convertFromURL();\r\n    }\r\n\r\n    convertFromURL() {\r\n        let url_obj = new URL(window.location.href);\r\n        let url = url_obj.pathname.replace(this.base, \"\");\r\n        url = url.replace(/^\\/+|\\/+$/g, '');\r\n\r\n        if (!url) return;\r\n\r\n\r\n        let parts = url.split(\"/\");\r\n\r\n        if (parts.length >= 2) {\r\n            this.route = parts[0];\r\n            url = parts[1];\r\n        }\r\n        \r\n        const _self = this;\r\n        url_obj.searchParams.forEach(function(value, key) {\r\n            _self.params[key] = (value.indexOf(\",\") > -1) ? value.split(\",\") : value;\r\n        });\r\n\r\n       \r\n        parts = url.split(\"-to-\");\r\n        if (parts.length > 1) {\r\n            this.to = parts[1];\r\n            url = parts[0];\r\n        }\r\n\r\n       \r\n        parts = url.split(\"-\");\r\n        let key = parts[parts.length - 1];\r\n        if (key == \"first\") {\r\n            this.key = key;\r\n            parts.pop();\r\n        } else if (!isNaN(key)) {\r\n            this.key = parseInt(key);\r\n            parts.pop();\r\n        }\r\n            \r\n        if (parts.length == 0) {\r\n            throw new Error(\"Can't convert this url string: \" + url);\r\n        }\r\n    \r\n        this.state = \"get\";\r\n        for(let i in this.action_map) {\r\n            if (this.action_map[i] == \"-\" + parts[parts.length - 1]) {\r\n                this.state = i\r\n                parts.pop();\r\n                break;\r\n            }\r\n        }\r\n        this.model = parts.join(\"-\");\r\n        if (!this.route) this.route = this.model;\r\n    }\r\n\r\n    getAll() {\r\n        return {\r\n            route : this.route,\r\n            model : this.model,\r\n            state : this.state,\r\n            key : this.key,\r\n            to : this.to,\r\n            params : this.params,\r\n            base : this.base,\r\n            default : this.default\r\n        };\r\n    }\r\n\r\n    apply(route) {\r\n        for(let i in route) {\r\n            this[i] = route[i];\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const Map = new MapModel();\r\n\r\n","import { reactive } from \"vue\"\r\nimport client from \"./client.js\"\r\nimport { Map } from \"./map.js\"\r\n\r\n\r\nlet model_settings = {};\r\n\r\nwindow.onpopstate = function() {\r\n    Map.reset();\r\n    Map.convertFromURL();\r\n    runRoute();\r\n}\r\n\r\nexport const RouteStore = reactive({ \r\n    component : '', \r\n    title : '',\r\n    name : '',\r\n    route : { \"children\" : [], parent : null, \"perms\" : []}, \r\n    slug : [],\r\n    sort : false\r\n});\r\n\r\nfunction setComponent() {\r\n    if (Map.state == \"get\" || Map.state == \"parent\") {\r\n        RouteStore.component = \"ptj-repo\";\r\n    } else if (Map.state == \"primary\") {\r\n        RouteStore.component = \"ptj-primary\";\r\n    } else if (Map.state == \"login\") {\r\n        RouteStore.component = \"ptj-account-handler\";\r\n    }\r\n}\r\n\r\n\r\nexport function initSettings(settings) {\r\n    if (settings) model_settings = settings;\r\n}\r\n\r\n\r\nexport function getModelSettings() {\r\n    if (model_settings[Map.model] && model_settings[Map.model][Map.state]) {\r\n        return model_settings[Map.model][Map.state];\r\n    }\r\n    return {};\r\n}\r\n\r\n\r\nexport function loadRoute() {\r\n    RouteStore.component = \"\";\r\n    RouteStore.route.children = [];\r\n    RouteStore.route.parent = null;\r\n    RouteStore.route.perms = [];\r\n    RouteStore.route.title = \"\";\r\n    RouteStore.route.name = \"\";\r\n    RouteStore.sort = false;\r\n    return client.get(\"/nav/route-points/\" + Map.route + \"/\" + Map.model)\r\n    .then(response => {   \r\n        RouteStore.route.children = response.children;\r\n        RouteStore.route.perms = response.perms;\r\n        RouteStore.route.parent = response.parent;\r\n        RouteStore.title = response.title;\r\n        RouteStore.name = response.name;\r\n        if (response.sort) RouteStore.sort = true;\r\n        setComponent();\r\n    })\r\n    .then(response => {\r\n\r\n    })\r\n    .catch(e => console.log(e));\r\n}\r\n\r\nexport function loadSlugTrail() {\r\n    RouteStore.slug = [];\r\n    let params = {};\r\n    if (Map.key) {\r\n        if (Map.state == \"parent\") params[\"--parentid\"] = Map.key;\r\n        else if (Map.state == \"primary\") params[\"--id\"] = Map.key;\r\n    } else {\r\n        return;\r\n    }\r\n\r\n    return client.get(\"/slug/\" + Map.route + \"/\" + Map.model, params)\r\n    .then(response => {\r\n        RouteStore.slug = response;\r\n        for(let i in RouteStore.slug) {\r\n            i=parseInt(i);\r\n            if (i > 0) {\r\n                RouteStore.slug[i].route = {\r\n                    model : RouteStore.slug[i].model,\r\n                    state : 'parent',\r\n                    key : RouteStore.slug[i].id\r\n                }\r\n            } else {\r\n                RouteStore.slug[i].route = {\r\n                    model : RouteStore.slug[i].model,\r\n                    state : 'get',\r\n                    key : 0\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\nexport function refresh() {\r\n    if (location.href == Map.base) location.reload();\r\n    else location.href = Map.base;\r\n}\r\n\r\nexport function redirect() {\r\n    addToHistory();\r\n    runRoute();\r\n}\r\n\r\nexport function addToHistory() {\r\n    const url_str = window.location.protocol + \"//\" + window.location.host +  Map.convertToURL();\r\n    const url = new URL(url_str);\r\n    window.history.pushState({'name' : url.pathname}, document.title, url);\r\n}\r\n\r\nexport function runRoute() {\r\n    loadRoute();\r\n    loadSlugTrail();\r\n}\r\n","<template>\r\n  <a class=\"ptj-button\" :key=\"route\" @click=\"run\">\r\n    <slot />\r\n  </a> \r\n</template>\r\n\r\n<script setup>\r\n\r\n\r\nimport { redirect } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\nconst props = defineProps({\r\n    route : Object\r\n});\r\n\r\n\r\nfunction run() {\r\n    for(let i in props.route) {\r\n        Map[i] = props.route[i];\r\n    }\r\n    Map.params = {};\r\n    redirect();\r\n}\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n    <div class=\"ptj-multiple-select\">\r\n        <div class=\"ptj-multiple-select-display\">\r\n            <div class=\"ptj-multiple-select-values\">\r\n                <div class=\"ptj-multiple-select-val\" v-for=\"val in field.change1\" :key=\"val\">\r\n                    {{ val }}\r\n                    <a class=\"ptj-multiple-select-val-remove\" @click=\"remove(val)\"><span class=\"material-icons\">close</span></a>\r\n                </div>\r\n            </div>\r\n            <input type=\"text\" v-model=\"custom_val\" />\r\n            <a @click=\"selectCustom\" class=\"ptj-multiple-select-add\">add</a>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script setup>\r\n\r\nimport { ref } from \"vue\"\r\n\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n});\r\n\r\nconst custom_val = ref(\"\");\r\n\r\nfunction remove(key) {\r\n    props.field.change = props.field.change.filter(function(item) {\r\n        return item !== key\r\n    });\r\n}\r\n\r\nfunction selectCustom() {\r\n    props.field.change1 = custom_val.value;\r\n    custom_val.value = \"\";\r\n}\r\n\r\n\r\n</script>\r\n<style scoped>\r\n.ptj-multiple-select-val {\r\n    display : inline-block;\r\n    border : 1px solid green;\r\n    margin-left : 2px;\r\n    margin-right : 2px;\r\n    padding : 2px;\r\n    background-color : green;\r\n}\r\n\r\n\r\n.ptj-multiple-select-val-remove {\r\n    color : red;\r\n}\r\n\r\n\r\n.ptj-multiple-select-display {\r\n    position :relative;\r\n    background-color : #fff;\r\n    border : 1px solid #cdcdcd;\r\n    min-height : 35px;\r\n\r\n}\r\n\r\n</style>","<template>\r\n    <div class=\"ptj-multiple-select\">\r\n        <div class=\"ptj-multiple-select-display\">\r\n            <div class=\"ptj-multiple-select-values\">\r\n                <div class=\"ptj-multiple-select-val\" v-for=\"val in field.change\" :key=\"val\">\r\n                    {{ field.getOption(val) }}\r\n                    <a class=\"ptj-multiple-select-val-remove\" @click=\"remove(val)\"><span class=\"material-icons\">close</span></a>\r\n                </div>\r\n            </div>\r\n            <a class=\"ptj-multiple-select-arrow\" @click=\"toggleList\">\r\n            <span class=\"material-icons\">{{ show_list.symbol }}</span>\r\n            </a>\r\n        </div>\r\n        <ul class=\"ptj-multiple-select-options\" v-show=\"show_list.display\" @click=\"select\">\r\n            <li v-for=\"option in field.options\" :key=\"option.key\" :data-key=\"option.key\">{{ option.value }}</li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n<script setup>\r\n\r\nimport { reactive, onMounted } from \"vue\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n});\r\n\r\nonMounted(() => {\r\n    if (props.field.reference) {\r\n        let url = \"/reference/\" + Map.model + \"/\" + props.field.name;\r\n        props.field.setReferenceOptions(url, {\"--parentid\":Map.key});\r\n    }\r\n});\r\n\r\n\r\nconst show_list = reactive({\r\n    display : false,\r\n    symbol : 'keyboard_arrow_down'\r\n});\r\n\r\n\r\nfunction toggleList() {\r\n    if (show_list.display) {\r\n        show_list.display = false;\r\n        show_list.symbol = 'keyboard_arrow_down';\r\n    } else {\r\n        show_list.display = true;\r\n        show_list.symbol = 'keyboard_arrow_up';\r\n    }\r\n}\r\n\r\n\r\nfunction remove(key) {\r\n    props.field.change = props.field.change.filter(function(item) {\r\n        return item !== key\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction select(e) {\r\n    props.field.change1 = e.target.getAttribute(\"data-key\");\r\n    toggleList();\r\n}\r\n</script>\r\n<style scoped>\r\n.ptj-multiple-select-val {\r\n    display : inline-block;\r\n    border : 1px solid green;\r\n    margin-left : 2px;\r\n    margin-right : 2px;\r\n    padding : 2px;\r\n    background-color : green;\r\n}\r\n\r\n\r\n.ptj-multiple-select-val-remove {\r\n    color : red;\r\n}\r\n\r\n.ptj-multiple-select-arrow {\r\n    position :absolute;\r\n    right : 2px;\r\n    top : 3px;\r\n}\r\n\r\n.ptj-multiple-select-display {\r\n    position :relative;\r\n    background-color : #fff;\r\n    border : 1px solid #cdcdcd;\r\n    min-height : 35px;\r\n\r\n}\r\n\r\n.ptj-multiple-select-options li {\r\n    list-style: none;\r\n    cursor: pointer;\r\n    margin-top : 2px;\r\n    border : 1px solid #cdcdcd;\r\n    background-color : #fff;\r\n}\r\n\r\n.ptj-multiple-select-options li:hover {\r\n    background-color : #f9f9fb;\r\n    transition : background-color .2s ease-out,border .2s ease-out;\r\n}\r\n</style>","let dictionary = {};\r\n\r\nexport function setDictionary(dict) {\r\n    dictionary = dict;\r\n}\r\n\r\n\r\nexport function getDictionary(id, vals) {\r\n    let str = \"\";\r\n    if (!vals) {\r\n        if (dictionary[id]) str = dictionary[id];\r\n        return str;\r\n    }\r\n    \r\n    if (vals.model) {\r\n        if (vals.field) {\r\n            if (vals.field.indexOf(\"/\") > -1) {\r\n                let exp = vals.field.split(\"/\");\r\n                vals.field = exp.pop();\r\n            }\r\n            \r\n            if (dictionary.models[vals.model] && dictionary.models[vals.model].fields[vals.field]) {\r\n                str= dictionary.models[vals.model].fields[vals.field][id];\r\n            }\r\n        } else {\r\n            if ( dictionary.models[vals.model]) {\r\n                str = dictionary.models[vals.model][id];\r\n            }\r\n        }\r\n    } else if (vals.type) {\r\n        if (dictionary[id][vals.type]) str = dictionary[id][vals.type];\r\n        else str = dictionary[id].def;\r\n    } else {\r\n        str = dictionary[id];\r\n    }\r\n\r\n    if (vals.val) {\r\n        str = str.replace( /\\{\\{(.*?)\\}\\}/g, vals.val);    \r\n\r\n        //s.replace( /\\{\\{(.*?)\\}\\}/g, function(x){          // this grabs replacement tags\r\n          //  return x.replace( /\\[(\\d+)\\]/g,'.$1' )});      \r\n    }\r\n\r\n    if (!str && vals.default) str = vals.default;\r\n    return str;\r\n}","<template>\r\n   <textarea v-if=\"tag=='textarea' && ctype=='edit'\"\r\n        v-bind=\"atts\" \r\n        :name=\"field.name\" \r\n        v-model=\"field.change\"></textarea>\r\n   <div v-else-if=\"tag=='textarea' && ctype=='view'\">{{ field.val }}</div>\r\n   <ptj-multiple-select v-else-if=\"tag=='select' && ctype == 'filter'\" :field=\"field\" />\r\n  <select v-else-if=\"tag=='select' && ctype=='edit'\" \r\n        v-model=\"field.change\"\r\n        :name=\"field.name\"\r\n        v-bind=\"atts\"\r\n         @blur=\"field.validateon = true\"\r\n        >\r\n        <option value=\"\" selected disabled>{{ getDictionary('ptj-string-default') }}</option>\r\n        <option v-for=\"option in field.options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <input v-else-if=\"ctype=='edit'\" v-bind=\"atts\"\r\n        :name=\"field.name\"\r\n        v-model=\"field.change\" \r\n        @blur=\"field.validateon = true\" />\r\n   <ptj-multiple-input :field=\"field\" v-else-if=\"ctype=='filter'\"/>\r\n  <span v-else-if=\"ctype=='view' && field.reference\">\r\n    <ptj-button :route=\"{model : field.reference, key : field.val, state:'primary' }\">{{ field.val }}</ptj-button>\r\n  </span>\r\n  <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n<script setup>\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjMultipleInput from \"./ptj-multiple-input.vue\"\r\nimport PtjMultipleSelect from \"./ptj-multiple-select.vue\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\nimport { computed } from \"vue\"\r\nconst props = defineProps({\r\n    field : {\r\n        type : Object,\r\n        required : true\r\n    },\r\n    type : {\r\n        type : String,\r\n        default : 'view'\r\n    }\r\n});\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n\r\nfunction isEnum(contains) {\r\n    if (contains.length == 0) return null;\r\n    let enums=[];\r\n    const regEx = new RegExp(/^[a-zA-Z]+[a-zA-Z0-9._]+$/);\r\n    for(let exp of contains) {\r\n        if (!exp) continue;\r\n        if (regEx.test(exp)) {\r\n            enums.push(exp);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    return enums;\r\n}\r\n\r\nconst tag = computed(() => {\r\nif (isEnum(props.field.contains)) {\r\n    props.field.setContainsAsOptions();\r\n    return \"select\";\r\n} else if (props.field.encrypted) {\r\n    return \"input\";\r\n} else if (props.field.html || props.field.max > 300) {\r\n    return \"textarea\";\r\n} else {\r\n    return \"input\";\r\n}\r\n});\r\n\r\n\r\nconst atts = computed(() => {\r\nlet atts = {};\r\nif (props.field.encrypted) {\r\n    atts.type = \"password\";\r\n}\r\n\r\nif (props.field.atts.readonly) {\r\n    atts.readonly = true;\r\n}\r\n\r\nif (props.field.atts.placeholder) {\r\n    atts.placeholder = field.placeholder;\r\n}\r\n\r\nif (props.field.atts.html) {\r\n    atts[\"data-html\"] = 1;\r\n}\r\nreturn atts;\r\n});\r\n\r\n\r\n</script>\r\n","import { reactive } from \"vue\"\r\nimport { refresh } from \"./route.js\"\r\nimport Client from \"./client.js\"\r\nimport { Map } from \"./map.js\"\r\nimport { setDictionary } from \"./dictionary.js\"\r\n\r\nexport const User = reactive({init : false, login : false, user : \"public\" });\r\n\r\nexport const NavStore = reactive({\r\n    cats : {}, \r\n    routes : [], \r\n});\r\n\r\nexport function logout() {\r\n    Client.post(\"/core/logout\")\r\n    .then(() => {\r\n        refresh();\r\n    });\r\n}\r\n\r\nfunction getDefault() {\r\n    for(let cat in NavStore.cats) {\r\n        for(let route of NavStore.cats[cat]) {\r\n            if (route.default) {\r\n                return route;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst user_check = 600000;\r\n\r\nexport function checkLoginStatus() {\r\n    Client.get(\"/core/check-user\")\r\n    .then(response => {\r\n        if (response.is_expired) {\r\n            return Client.put(\"/core/switch-tokens\")\r\n            .then(() => {\r\n                checkLoginStatus();\r\n            });\r\n        }\r\n    }).then(response => {\r\n        if (User.user != \"public\") setTimeout(checkLoginStatus, user_check);\r\n    }).catch(e => {\r\n        User.login = true;\r\n    });\r\n}\r\n\r\nexport function initUser(role = \"\") {\r\n    return Client.get(\"/core/check-user\")\r\n    .then(response => {\r\n        if (response.is_expired) {\r\n            return Client.put(\"/core/switch-tokens\")\r\n            .then(() => {\r\n                return Client.get(\"/core/check-user\");\r\n            });\r\n        } else {\r\n            return response;\r\n        }\r\n    })\r\n    .then(response => {\r\n        User.user = response.user;\r\n        User.role = response.role;\r\n        User.init = true;\r\n\r\n        if (User.role != role) {\r\n            let url = \"/core/change-role\";\r\n            if (role) url += \"/\" + role;\r\n            return Client.post(url)\r\n            .then(response => {\r\n                User.role = role;\r\n            });\r\n        }\r\n    }).then(() => {\r\n        checkLoginStatus();\r\n    }).then(() => {\r\n        return Client.get(\"/dictionary\")\r\n        .then(response => {\r\n            setDictionary(response);\r\n            return true;\r\n        });\r\n    }).catch(e => console.log(e));\r\n}\r\n\r\nexport function loadNav() {\r\n    NavStore.cats = {};\r\n    NavStore.routes = [];\r\n    return Client.get(\"/nav/site-map\")\r\n    .then(response => {\r\n        for(let cat in response) {\r\n            for(let route_name in response[cat]) {\r\n                const route = { model : route_name, state : response[cat][route_name].state };\r\n                if (response[cat][route_name].default) route.default = true;\r\n                route.route = route_name;\r\n                NavStore.routes.push(route);\r\n\r\n                if (!NavStore.cats[cat]) NavStore.cats[cat] = [];\r\n                NavStore.cats[cat].push(route);\r\n            }\r\n        }\r\n    })\r\n    .then(() => {\r\n        if (!Map.model) {\r\n            Map.apply(getDefault());\r\n        }\r\n        return true;\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n","const error_invalid_map = {\r\n            1 : \"too small\",\r\n            2 : \"too large\",\r\n            3 : \"contains incorrect characters\",\r\n            4 : \"doesn't contain required characters\",\r\n            5 : \"not unique\"\r\n}\r\n\r\nexport function getError(code) {\r\n    return error_invalid_map[code];\r\n}\r\n\r\nexport const Errors = {\r\n    OK : 0,\r\n    MIN_VALUE : 1,\r\n    MAX_VALUE : 2,\r\n    HAS : 3,\r\n    HAS_NOT : 4\r\n}\r\n","\r\nimport { Errors } from \"./error.js\"\r\nimport { reactive, computed } from \"vue\"\r\nimport Client from \"./client.js\"\r\n\r\n\r\nexport class Field {\r\n\r\n    constructor(name, obj = null) {\r\n        this._name = name;\r\n        this._type = \"\";\r\n        this._atts={}\r\n        this._confirm = false;\r\n        this._reference = \"\";\r\n        this._label = \"\";\r\n        this._store = reactive({ summary : 0, options : []});\r\n        this._default_val = null;\r\n        this._immutable = false;\r\n        this._encrypted = false;\r\n        this._min = null;\r\n        this._max = null;\r\n        this._contains = [];\r\n        this._notcontains = [];\r\n        this._recursive = false;\r\n        this._listeners = [];\r\n        \r\n        const keys = Object.keys(this);\r\n       \r\n        keys.forEach(property => {\r\n          if (property != \"_store\" && property[0] == \"_\") {\r\n            Object.defineProperty(this, property.substring(1), {\r\n                get: function() { \r\n                   return this[property];\r\n                },\r\n                set: function(newValue) {\r\n                    if (property == \"_type\") this._type = newValue.toLowerCase();\r\n                    else this[property] = newValue;\r\n                }\r\n            })\r\n          }\r\n        });\r\n      \r\n      \r\n        this.summary = computed({\r\n            get : () => {\r\n                return this._store.summary;\r\n            },\r\n            set : (val) => {\r\n                this._store.summary = (val) ? 1 : 0;\r\n            }\r\n        })\r\n\r\n        this.options = computed({\r\n            get : () => {\r\n                return this._store.options;\r\n            },\r\n            set : (options) => {\r\n                this._store.options = options;\r\n            }\r\n        });\r\n\r\n       \r\n        if (obj) {\r\n            for (let x in obj) {\r\n                if (x == \"summary\") this.summary = (obj[x]) ? 1 : 0;\r\n                else if (x == \"validation\") continue;\r\n                else if (x == \"type\") this.type = obj[x].toLowerCase();\r\n                else this[x] = obj[x];\r\n            }\r\n\r\n            this._min = obj.validation.min;\r\n            this._max = obj.validation.max;\r\n            if (obj.validation.contains) this._contains = obj.validation.contains.split(\"|\");\r\n            if (obj.validation.notcontains) this._notcontains = obj.validation.notcontains.split(\"|\");\r\n        }\r\n    }\r\n\r\n\r\n    getOption(key) {\r\n        for(let opt of this._store.options) {\r\n            if (opt.key == key) return opt.value;\r\n        }\r\n    }\r\n\r\n    setReferenceOptions(url, params) {\r\n        this._store.options = [];\r\n        return Client.get(url, params)\r\n        .then(response => {\r\n            for (let i in response) {\r\n                let key = response[i][\"--id\"];\r\n                let vals = [];\r\n                for(let x  in response[i]) {\r\n                    if (x != \"--id\") {\r\n                        vals.push(response[i][x]);\r\n                    }\r\n                }\r\n                this._store.options.push({ key: key, value: vals.join(\" \", vals) });\r\n            }\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    setContainsAsOptions() {\r\n        let options = [];\r\n        for(let exp of this._contains) {\r\n            if (exp.indexOf(\":\") > -1) {\r\n                const pts = exp.split(\":\");\r\n                options.push({ key : pts[0], value : pts[1]});\r\n            } else {\r\n                options.push({ key : exp, value : exp});\r\n            }\r\n        }\r\n        this._store.options = options;\r\n    }\r\n\r\n    clean(val) {\r\n        if (this._type == \"checkbox\") return (val) ? 1 : 0;\r\n        else return val;\r\n    }\r\n\r\n\r\n    calcValue(value) {\r\n        if (!value) return \"\";\r\n        else return value;\r\n    }\r\n\r\n\r\n    validateSize(val) {\r\n        if (val < this._min) return Errors.MIN_VALUE;\r\n        else if (val > this._max) return Errors.MAX_VALUE;\r\n        else return Errors.OK;\r\n    }\r\n\r\n\r\n    validate(val) {\r\n        if (val === null) return;\r\n        let err;\r\n        if (isNaN(val)) {\r\n            const length = (val) ? val.length : 0;\r\n            err = this.validateSize(length);\r\n        } else {\r\n            err = this.validateSize(val);\r\n        }\r\n        if (err != Errors.OK) return err;\r\n\r\n        for(let nhas of this._notcontains) {\r\n            if (val.match(nhas)) return Errors.HAS_NOT;\r\n        }\r\n\r\n        if (this._contains.length == 0) return Errors.OK;\r\n        \r\n        for(let has of this._contains) {\r\n            if (val.match(has)) return Errors.OK;\r\n        }\r\n        return Errors.HAS;\r\n    }\r\n\r\n\r\n    trigger(val) {\r\n        for(let state of this._listeners) {\r\n            state(val);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Field } from \"./field.js\"\r\nimport { reactive } from \"vue\"\r\n\r\nexport class MetaRow {\r\n\r\n    constructor() {\r\n        this._cells = {};\r\n        this._children = [];\r\n        this._active = 0;\r\n        this._init = false;\r\n        this._store = reactive({index : null});\r\n        this._state_groups = {};\r\n      \r\n        const keys = Object.keys(this);\r\n\r\n        keys.forEach(property => {\r\n          if (property[0] == \"_\") {\r\n            Object.defineProperty(this, property.substring(1), {\r\n                get: function() { \r\n                    return this[property];\r\n                },\r\n                set: function(newValue) {\r\n                    this[property] = newValue;\r\n                }\r\n            });\r\n          } \r\n        });\r\n    }\r\n\r\n\r\n    addChild(name, child) {\r\n        this._children[name] = child;\r\n    }\r\n\r\n    addState(name, action) {\r\n        this._actions[name] = action;\r\n    }\r\n\r\n\r\n    resetSummary(arr) {\r\n\r\n        for(let i in this._cells) {\r\n            this._cells[i].summary = false;\r\n        }\r\n        \r\n        for(let i in arr) {\r\n            if (this._cells[arr[i]]) {\r\n                this._cells[arr[i]].summary = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    setStates(fields) {\r\n        for(let i in fields) {\r\n            let groups = {};\r\n            if (fields[i].states) {\r\n                for(const state of fields[i].states) {\r\n                    if (!groups[state.depends_on]) groups[state.depends_on] = [];\r\n                    groups[state.depends_on].push(state); \r\n                }\r\n            }\r\n            this._state_groups[i] = groups;\r\n        }\r\n    }\r\n\r\n    mapField(field, obj) {\r\n        this._cells[field] = new Field(field, obj);\r\n        if (this._cells[field].recursive) {\r\n            this._store.index = field;\r\n        }\r\n    }\r\n\r\n    map(fields, limited_fields = []) {\r\n        if (limited_fields.length > 0) {\r\n            for(let field of limited_fields) {\r\n                this.mapField(field, fields[field]);\r\n            }\r\n        } else {\r\n            for (let i in fields) {\r\n                this.mapField(i, fields[i]);\r\n            }\r\n        }\r\n        this.setStates(fields);\r\n    }\r\n\r\n\r\n    getCellByType(type) {\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].type == type) cells[i] = this._cells[i];\r\n        }\r\n        return cells;\r\n    }\r\n\r\n    showAll() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].summary = true;\r\n        }\r\n    }\r\n\r\n}","import { reactive, computed } from \"vue\"\r\nimport { getError } from \"./error.js\"\r\nimport { Map } from \"./map.js\"\r\n\r\nexport class DataCell {\r\n\r\n    constructor(meta) {\r\n        this._store = reactive({ meta : meta, value: null, change: null, display: null, error: 0, is_validate_on: false });\r\n\r\n\r\n        const meta_keys = Object.getOwnPropertyNames(meta);\r\n        const keys = Object.keys(this);\r\n\r\n        const _self = this;\r\n        meta_keys.forEach(property => {\r\n            if (property[0] != \"_\" && !keys.includes(property)) {\r\n                this[property] = computed({\r\n                    get: function () {\r\n                        return _self.store.meta[property];\r\n                    },\r\n                    set: function (newValue) {\r\n                        _self.store.meta[property] = newValue;\r\n                    }\r\n                })\r\n            }\r\n        });\r\n\r\n\r\n\r\n        this.error = computed({\r\n            get: () => { getError(this._store.error); },\r\n            set: val => { this._store.error = val }\r\n        });\r\n\r\n        this.showError = computed(() => {\r\n            return this._store.is_validate_on && this._store.error ? true : false;\r\n        });\r\n\r\n        if (this._store.meta.default_val) this._store.value = this._store.meta.default_val;\r\n        else if (this._store.meta.type == \"select\") this._store.value = 0;\r\n\r\n        this.val = computed({\r\n            get: () => {\r\n                return this._store.value;\r\n            },\r\n            set: (val) => {\r\n                this._store.value = this._store.meta.clean(val);\r\n                this._store.error = this._store.meta.validate(val);\r\n            }\r\n        });\r\n\r\n        this.change = computed({\r\n            get: () => {\r\n                if (this._store.change == null) return this._store.value;\r\n                else return this._store.change;\r\n            },\r\n            set: (val) => {\r\n                this._store.change = this._store.meta.clean(val);\r\n                this._store.error = this._store.meta.validate(val);\r\n                this._store.meta.trigger(val);\r\n            }\r\n        });\r\n\r\n        this.addParam = obj => {\r\n            if (this._store.value) {\r\n                const name = this.name;\r\n                console.log(\"Param is \", this.name.value);\r\n                obj[this.name.value] = this._store.value;\r\n            }\r\n        }\r\n\r\n\r\n        if (meta.type == \"time\") {\r\n\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.min;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null };\r\n                    this._store.change.min = this._store.meta.clean(val);\r\n                    this._store.error = this._store.meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.change2 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.max;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null };\r\n                    this._store.change.max = this._store.meta.clean(val);\r\n                    this._store.error = this._store.meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.filter = computed({\r\n                get: () => {\r\n                    return this._store.value;\r\n                },\r\n                set:(val) => {\r\n                    if (val) {\r\n                        this._store.value = val;\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                let cobj = {};\r\n                if (this._store.value) {\r\n                    if (this._store.value.min) cobj.min = this._store.value.min;\r\n                    if (this._store.value.max) cobj.max = this._store.value.max;\r\n                    if (Object.keys(cobj).length > 0) {\r\n                        obj[this.name.value] = cobj;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        } else if (meta.type == \"flag\") {\r\n\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (this._store.change == null) return 0;\r\n                    else if (!this._store.change) return 2;\r\n                    else return this._store.change;\r\n                },\r\n                set: (val) => {\r\n                    if (val == 0) {\r\n                        this._store.change = null;\r\n                        return;\r\n                    }\r\n                    if (val == 2) val = 0;\r\n                    this._store.change = this._store.meta.clean(val);\r\n                    this._store.error = this._store.meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.filter = computed({\r\n                get: () => {\r\n                    return this._store.value;\r\n                },\r\n                set:(val) => {\r\n                    this._store.value = val;\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value) {\r\n                    obj[this.name.value] = this._store.value;\r\n                }\r\n            }\r\n\r\n\r\n        } else if (meta.type == \"id\") {\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    let val = (this._store.change == null) ? [] : this._store.change;\r\n                    return val;\r\n                },\r\n                set: (val) => {\r\n                    if (this._store.change == null) this._store.change = [];\r\n                    if (this._store.change.includes(val)) return;\r\n                    this._store.change.push(this._store.meta.clean(val));\r\n                    this._store.error = this._store.meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.filter = computed({\r\n                get: () => {\r\n                    return this._store.value;\r\n                },\r\n                set:(val) => {\r\n                    this._store.value = val;\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value!= null) {\r\n                    obj[this.name.value] = this._store.value;\r\n                }\r\n            }\r\n\r\n            \r\n        } else if (meta.type == \"number\") {\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.min;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null }\r\n                    this._store.change.min = this._store.meta.clean(val);\r\n                    this._store.error = this._store.meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.filter = computed({\r\n                get: () => {\r\n                    return this._store.value;\r\n                },\r\n                set:(val) => {\r\n                    this._store.value = val;\r\n                }\r\n            });\r\n\r\n            this.change2 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.max;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null }\r\n                    this._store.change.max = this._store.meta.clean(val);\r\n                    this._store.error = this._store.meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value!= null) {\r\n                    obj[this.name.value] = this._store.value;\r\n                }\r\n            }\r\n\r\n        } else if (meta.type == \"string\") {\r\n\r\n            this.change = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) return \"\";\r\n                    else return this._store.change;\r\n                },\r\n                set: (val) => {\r\n                    this._store.change = this._store.meta.clean(val);\r\n                    this._store.error = this._store.meta.validate(val);\r\n                    this._store.meta.trigger(val);\r\n                }\r\n            });\r\n\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (this._store.change == null) return [];\r\n                    else return this._store.change;\r\n                },\r\n                set: (val) => {\r\n                    if (this._store.change == null) this._store.change = [];\r\n                    this._store.change.push(this._store.meta.clean(val));\r\n                    this._store.error = this._store.meta.validate(val);\r\n                }\r\n            });\r\n\r\n\r\n            this.filter = computed({\r\n                get: () => {\r\n                    return this._store.value;\r\n                },\r\n                set:(val) => {\r\n                    if (Array.isArray(val)) this._store.value = val;\r\n                    else if (val) this._store.value = [val];\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value) {\r\n                    let arr = [];\r\n                    for(let i in this._store.value) {\r\n                        if (this._store.value[i]) arr.push(\"%\" + this._store.value[i] + \"%\");\r\n                    }\r\n                    if (arr.length > 0) obj[this.name.value] = arr;\r\n                }\r\n            }\r\n\r\n        } \r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n\r\n    get meta() {\r\n        return this._store.meta;\r\n    }\r\n\r\n    set validateon(on) {\r\n        this._store.is_validate_on = on;\r\n    }\r\n\r\n    set display(display) {\r\n        this._store.display = display;\r\n    }\r\n\r\n    get display() {\r\n        if (this._store.display) return this._store.display;\r\n        else return this._store.value;\r\n    }\r\n\r\n    get store() {\r\n        return this._store;\r\n    }\r\n\r\n    resetMeta(meta) {\r\n        this._store.meta = meta;\r\n        if (meta.reference) {\r\n            let url = \"/reference/\" + Map.model + \"/\" + this.name;\r\n            let obj = {};\r\n            if (Map.state == \"primary\") obj[\"--id\"] = Map.key;\r\n            else obj[\"--parentid\"] = Map.key;\r\n            this._store.meta.setReferenceOptions(url, obj);\r\n        }\r\n    }\r\n\r\n    toString() {\r\n        return this._store.display;\r\n    }\r\n\r\n    isSummary() {\r\n        return this._store.meta.summary;\r\n    }\r\n\r\n    setReferenceOptions(url, params) {\r\n        this._store.meta.setReferenceOptions(url, params);\r\n    }\r\n\r\n    setContainsAsOptions() {\r\n        this._store.meta.setContainsAsOptions();\r\n    }\r\n\r\n    reset() {\r\n        this._store.change = null;\r\n        this._store.value = null;\r\n    }\r\n\r\n    getOption(key) {\r\n        if (this._store.meta.type == 'string') return key;\r\n        else return this._store.meta.getOption(key);\r\n    }\r\n\r\n    \r\n}\r\n","import { Field } from \"./field\";\r\n\r\nexport function createStateTrigger(name, states, cb) {\r\n\r\n    let group = [];\r\n    for(let i in states) {\r\n        let field = new Field(name, states[i]);\r\n        group.push({ depends_val : states[i].depends_val, field });\r\n    }\r\n    \r\n    return (val) => {\r\n        for(const state of group) {\r\n            if (state.depends_val == val) {\r\n                return cb(state.field);\r\n            }\r\n        }\r\n\r\n        //if we get to here, then set a default\r\n        for(const state of group) {\r\n            if (!state.depends_val) {\r\n                return cb(state.field);\r\n            }\r\n        }\r\n    }\r\n\r\n}           ","import { DataCell } from \"./datacell.js\"\r\nimport { reactive, computed } from \"vue\"\r\nimport { createStateTrigger } from \"./states.js\"\r\n\r\n\r\nexport class DataRow {\r\n\r\n    constructor(metarow) {\r\n        this._metarow = metarow;\r\n        this._cells = reactive({});\r\n        this._children = {};\r\n        this._ids = reactive({});\r\n        \r\n        \r\n\r\n\r\n        if (metarow) {\r\n            this.applyMetaRow(metarow);\r\n        }\r\n\r\n        this.cells = computed(() => {\r\n            return this._cells;\r\n        });\r\n        \r\n    }\r\n\r\n    \r\n\r\n    set children(children) {\r\n        this._children = children;\r\n    }\r\n\r\n    get children() {\r\n        return this._children;\r\n    }\r\n\r\n    get primary() {\r\n        return this._ids[\"--id\"];\r\n    }\r\n\r\n    get parent() {\r\n        return this._ids[\"--parentid\"];\r\n    }\r\n\r\n\r\n    clone() {\r\n        const data = new DataRow(this._metarow);\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            cells[i].val = this._cells[i].val;\r\n        }\r\n    \r\n        let children = {};\r\n        for(let i in data.children) {\r\n            children[i] = data.children[i].clone();\r\n        }\r\n        data.children = children;\r\n        return data;\r\n    }\r\n\r\n    \r\n    applyMetaRow(metarow) {\r\n        for(const i in metarow.cells) {\r\n            const field = metarow.cells[i];\r\n            this._cells[field.name] = new DataCell(field);\r\n        }\r\n\r\n        for(const i in metarow.children) {\r\n            this._children[i] = metarow.children[i];\r\n        }\r\n\r\n        let groups = metarow.state_groups;\r\n\r\n\r\n        for(let i in groups) {\r\n            for(let x in groups[i]) {\r\n                const _self = this;\r\n                let state = createStateTrigger(i, groups[i][x], field => {\r\n                    _self._cells[i].resetMeta(field);\r\n                });\r\n                this._cells[x].listeners.push(state);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    addChild(name, child) {\r\n        if (!this._children[name]) {\r\n            this._children[name] = [];\r\n        }\r\n        this._children[name].push(child);\r\n    }\r\n\r\n    set row(row) {\r\n        if (!row) return;\r\n\r\n        if (row[\"--id\"]) this._ids[\"--id\"] = row[\"--id\"];\r\n        if (row[\"--parentid\"]) this._ids[\"--parentid\"] = row[\"--parentid\"];\r\n\r\n        for(let field in this._cells) {\r\n            if (row.hasOwnProperty(field)) this._cells[field].val = row[field];\r\n        }\r\n\r\n        for(let child in this._children) {\r\n            this._children[child].row = row[child];\r\n        }\r\n    }\r\n\r\n\r\n    set filter(row) {\r\n        if (!row) return;\r\n\r\n        for(let field in this._cells) {\r\n            if (row.hasOwnProperty(field)) this._cells[field].filter = row[field];\r\n        }\r\n    }\r\n\r\n\r\n    getSummary() {\r\n        let str = [];\r\n        for(let i in this._cells) {\r\n            const cell = this._cells[i];\r\n            if (cell.isSummary()) {\r\n                const display = cell.display;\r\n                str.push(display);\r\n            }\r\n        }\r\n        return str.join(\" \");\r\n    }\r\n\r\n    toString() {\r\n        let str = [];\r\n        for(let i in this._cells) {\r\n            str.push(this._cells[i].display);\r\n        }   \r\n        return str.join(\" \");\r\n    }\r\n\r\n\r\n    serialize(changes_only = false) {\r\n        let data = {};\r\n        for(let i in this._cells) {\r\n            if (changes_only) {\r\n                if (this._cells[i].change != this._cells[i].val) {\r\n                    data[i] = this._cells[i].change;\r\n                }\r\n            } else {\r\n                if (this._cells[i].change != null) data[i] = this._cells[i].change;\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n\r\n    getCellByType(type) {\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].type == type) cells[i] = this._cells[i];\r\n        }\r\n        return cells;\r\n    }\r\n\r\n    clearErrors() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].error = 0;\r\n        }\r\n    }\r\n\r\n\r\n    reset() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].error = 0;\r\n            this._cells[i].change = null;\r\n        }\r\n    }\r\n\r\n    setErrors(err) {\r\n        for(let i in err) {\r\n            if (i.indexOf(\"__\") === 0) continue;\r\n            if (this._cells[i]) {\r\n                this._cells[i].error = err[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    convertToParams() {\r\n        let obj = {};\r\n        for(let i in this._cells) {\r\n            this._cells[i].addParam(obj);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    convertToAPIParams() {\r\n        let obj = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].type == \"asset\") continue;\r\n            this._cells[i].addAPIParam(obj);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    applyChangeData() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].val = this._cells[i].change;\r\n        }\r\n    }\r\n\r\n}","import { MetaRow } from \"./metarow.js\"\r\nimport { DataRow } from \"./datarow.js\"\r\nimport { Map } from \"./map.js\"\r\nimport { reactive } from \"vue\"\r\nimport client from \"./client.js\"\r\nimport { getModelSettings } from \"./route.js\" \r\n\r\n\r\nexport const RepoStore = reactive({meta : new MetaRow, data : [], indexes : {}, search : new DataRow() });\r\n\r\nexport function applySettings(settings) {\r\n    meta_settings = settings;\r\n}\r\n\r\nfunction indexData() {\r\n    RepoStore.indexes = {};\r\n    \r\n    for(const key in RepoStore.data) {\r\n        const row = RepoStore.data[key];\r\n        let ckey = row.cells[RepoStore.meta.store.index].val;\r\n        if (!RepoStore.indexes[ckey]) RepoStore.indexes[ckey] = [];\r\n        RepoStore.indexes[ckey].push(key);\r\n    }\r\n}\r\n\r\n\r\nfunction mapRepoData(response) {\r\n    RepoStore.data = [];\r\n    for (const i in response) {\r\n        let obj= new DataRow(RepoStore.meta);\r\n        obj.row = response[i];\r\n        RepoStore.data.push(obj);\r\n    }\r\n}\r\n\r\n\r\nfunction buildParams(meta_settings) {\r\n    let params = {};\r\n    if (!params) params = {};\r\n    if (Map.to) params.__to = Map.to;\r\n    if (meta_settings.to) params.__to = meta_settings.to;\r\n    if (Map.key) params[\"--parentid\"] = Map.key;\r\n    if (meta_settings.limit) params.__limit = meta_settings.limit;\r\n    if (meta_settings.fields) params.__fields = meta_settings.fields;\r\n    if (meta_settings.group) params.group = meta_settings.group;\r\n    if (Map.params._page) params.__limit = ((Map.params._page - 1) * params.__limit) + \",\" + params.__limit;\r\n    return params;\r\n}\r\n\r\nexport function resetRepo() {\r\n    RepoStore.meta = new MetaRow();\r\n    RepoStore.data = [];\r\n    RepoStore.indexes = {};\r\n    RepoStore.search = new DataRow();\r\n    RepoStore.max_pages = 0;\r\n}\r\n\r\n\r\nexport const loadRepo = async() => {\r\n    let meta_settings = getModelSettings();\r\n    \r\n    resetRepo();\r\n    let params = buildParams(meta_settings);\r\n    let url = \"/\" + Map.route + \"/\" + Map.model;\r\n    if (Map.state == \"parent\") url += \"/parent\";\r\n    return client.get(\"/route\" +url, params)\r\n    .then(response => {\r\n        RepoStore.meta.map(response.fields, meta_settings.fields);\r\n        if (meta_settings.show == 'all') {\r\n            RepoStore.meta.showAll();\r\n        }\r\n\r\n        RepoStore.search.applyMetaRow(RepoStore.meta);\r\n        RepoStore.search.filter = Map.params;\r\n        RepoStore.meta.init = true;\r\n\r\n        if (meta_settings.component) RepoStore.component = meta_settings.component;\r\n        else if (!RepoStore.meta.cells) RepoStore.component = \"\";\r\n        else RepoStore.component = (RepoStore.meta.store.index || RepoStore.meta.children.length > 0) ? \"tree\" : \"table\";\r\n    }).then(() => {\r\n        params = { ...params, ...RepoStore.search.convertToAPIParams()};\r\n        if (meta_settings.limit > 0) {\r\n            return client.get(\"/count/\" + Map.route + \"/\" + Map.model, params)\r\n            .then(response => {\r\n                RepoStore.max_pages = Math.ceil(response.count / meta_settings.limit);\r\n            })\r\n            .then(() => {\r\n                return client.get(\"/data\" + url, params);\r\n            })\r\n            .then(response => {\r\n                mapRepoData(response);\r\n                if (RepoStore.meta.store.index) indexData();\r\n                return response;\r\n            });\r\n        } else {\r\n            return client.get(\"/data\" + url, params)\r\n            .then(response => {\r\n                mapRepoData(response);\r\n                if (RepoStore.meta.store.index) indexData();\r\n                return response;\r\n            });\r\n        }\r\n    })\r\n    .catch(e => console.log(e));\r\n}\r\n","<template >\r\n    <div class=\"ptj-tree-node ptj-draggable\" :id=\"primary\" draggable=\"false\">\r\n        <div class=\"ptj-tree-node-row\">  \r\n            <div>\r\n                <a v-if=\"ischild\" data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle()\">\r\n                    <span class=\"material-icons\">subdirectory_arrow_right</span>\r\n                </a>\r\n                <a v-else data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle()\">\r\n                    <span class=\"material-icons\">keyboard_arrow_right</span>\r\n                </a>\r\n            </div>\r\n            <div v-if=\"RepoStore.meta.sortable\">\r\n                <a data-action=\"more\" class=\"button\" @click=\"prevent.stop\" @mousedown=\"setDraggable\" @mouseup=\"endDraggable\">\r\n                    <span class=\"material-icons\">drag_handle</span>\r\n                </a>\r\n            </div>\r\n            <div>{{ summary }}</div>\r\n            <ptj-button :route=\"{state:'primary', key:primary }\"><span class=\"material-icons\">arrow_forward_ios</span></ptj-button>\r\n        </div>\r\n        <ptj-tree-node v-for=\"(key, index) in children\" :row=\"key\" :ischild=\"true\"  :key=\"index\" v-show=\"store.toggle_state[primary]\" />\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, computed, onMounted } from \"vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport { RepoStore } from \"./../js/repo.js\"\r\n\r\nconst props = defineProps({\r\n    row : { \r\n        type : [String, Number],\r\n        required : true\r\n    },\r\n    draggable : Boolean,\r\n    ischild : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n});\r\n\r\nconst store = reactive({ toggle_state : {}, branch : null });\r\n\r\nfunction toggle() {\r\n    const index = store.branch.primary;\r\n    store.toggle_state[index] = (store.toggle_state[index]) ? false : true;\r\n}\r\n\r\nconst children = computed(() => {\r\n    if (!store.branch) return [];\r\n    const id = store.branch.primary;\r\n    return (RepoStore.indexes[id]) ? RepoStore.indexes[id] : [];\r\n});\r\n\r\nconst primary = computed(() => {\r\n    if (!store.branch) return 0;\r\n    return store.branch.primary;\r\n});\r\n\r\nconst summary = computed(() => {\r\n    if (!store.branch) return \"\";\r\n    return store.branch.getSummary();\r\n});\r\n\r\nonMounted(() => {\r\n    store.branch = RepoStore.data[props.row];\r\n});\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.model-tree.branch {\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  margin: 6px 0;\r\n  background-color:#111111;\r\n}\r\n\r\n.tree .ide-block {\r\n\tdisplay : none;\r\n}\r\n\r\n.dragArea {\r\n  min-height: 50px;\r\n  outline: 1px solid #777777;\r\n}\r\n\r\n\r\n</style>","<template>\r\n    <input class=\"ptj-checkbox\" type=\"checkbox\" :true-value=\"1\" :false-value=\"0\" :name=\"field.name\" v-model=\"field.change\" v-if=\"ctype=='edit'\">\r\n    <select v-else-if=\"ctype=='filter'\" :name=\"field.name\" v-model=\"field.change1\" class=\"ptj-filter-form-checkbox\">\r\n        <option :value='0'>{{ \"All\" }}</option>\r\n        <option :value='1'>{{ \"Checked\" }}</option>\r\n        <option :value='2'>{{ \"Unchecked\" }}</option>\r\n    </select>\r\n    <a v-else @click=\"submit()\"><span class=\"material-icons\">{{ icon }}</span></a>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from \"vue\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport client from \"./../js/client.js\"\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        type : String,\r\n        default : 'view'\r\n    },\r\n    id : Number\r\n});\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n\r\nfunction submit() {\r\n    let params = {};\r\n    params[\"--id\"] = props.id;\r\n    params[props.field.name] = (props.field.val == 1) ? 0 : 1;\r\n    return client.put(\"/data/\" + Map.route + \"/\" + Map.model, params)\r\n    .then(() => {\r\n        props.field.val = (props.field.val == 1) ? 0 : 1;\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n\r\nlet icon = computed(() => {\r\n    if (props.field.val == 1) {\r\n        return \"check_circle_outline\";\r\n    } else {\r\n        return \"highlight_off\"\r\n    }\r\n});\r\n</script>","<template>\r\n    <select v-if=\"ctype=='edit'\" \r\n        v-model=\"field.change\"\r\n        v-bind=\"field.atts\"\r\n        :name=\"field.name\"\r\n         @blur=\"field.validateon = true\"\r\n        >\r\n        <option value=\"0\" selected>{{ getDictionary('ptj-id-default') }}</option>\r\n        <option v-for=\"option in field.options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <ptj-multiple-select v-else-if=\"ctype=='filter'\" :field=\"field\" />\r\n  <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { computed } from \"vue\"\r\nimport PtjMultipleSelect from \"./ptj-multiple-select.vue\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        default : 'view',\r\n        type : String\r\n    }\r\n});\r\n\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n\r\nlet options = computed(() => {\r\n    return props.field.options;\r\n});\r\n\r\n\r\n\r\n</script>","<template>\r\n  <input v-if=\"ctype=='edit'\"\r\n        :name=\"field.name\" \r\n        type=\"datetime-local\" \r\n        v-model=\"field.change\" \r\n        v-bind=\"field.atts\"\r\n        @blur=\"field.validateon = true\">\r\n   <div v-else-if=\"ctype=='filter'\">\r\n      <input \r\n        type=\"datetime-local\" \r\n        :name=\"field.name + 'min'\"\r\n        v-bind=\"field.atts\"\r\n        v-model=\"field.change1\">\r\n        -\r\n        <input \r\n            type=\"datetime-local\" \r\n            :name=\"field.name + 'max'\"\r\n            v-bind=\"field.atts\"\r\n            v-model=\"field.change2\"\r\n        >\r\n   </div>\r\n   <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from \"vue\"\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        default : 'view',\r\n        type : String\r\n    }\r\n});\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n</script>\r\n","<template>\r\n   <input v-if=\"type=='edit'\" class=\"ptj-form-asset\" \r\n    ref=\"input\" @change=\"setFile\" \r\n    :name=\"field.meta.name\" \r\n    type=\"file\" >\r\n   <span v-else>{{ field.val }}   <a @click=\"download()\"><span class=\"material-icons\">download</span></a></span>\r\n   \r\n</template>\r\n\r\n<script setup>\r\nimport client from \"./../js/client.js\"\r\n\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        type : String,\r\n        default : 'view'\r\n    },\r\n    id : Number\r\n});\r\n\r\nfunction download() {\r\n    client.getAsset(\"/asset/\" + props.field.model + \"/\" + props.field.name + \"/\" + props.id)\r\n    .then(blob => {\r\n\r\n        const anchor = document.createElement(\"a\");\r\n        const url = URL.createObjectURL(blob);\r\n        anchor.href = url;\r\n        anchor.download = props.field.val;\r\n        document.body.appendChild(anchor);\r\n        anchor.click();\r\n        document.body.removeChild(anchor);\r\n        URL.revokeObjectURL(url);\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n</script>\r\n","<template>\r\n  <div class=\"ptj-table-wrapper\">\r\n    <table class=\"ptj-table\" :class=\"Map.model\">\r\n    <thead>\r\n        <tr class=\"ptj-table-header\" ref=\"tableheader\">\r\n        <th v-for=\"cell in RepoStore.meta.cells\" \r\n            v-show=\"cell.summary\" \r\n            :key=\"cell.name\" \r\n            class=\"ptj-table-header-cell\"\r\n            :class=\"cell.name\"\r\n            @click=\"orderBy(cell.name);\"\r\n        >{{ getDictionary('label', { \"model\" : cell.model, \"field\" : cell.name, def : cell.name }) }}\r\n            <span v-if=\"order.name == cell.name && order.dir == 'asc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_up</span>\r\n            <span v-if=\"order.name == cell.name && order.dir == 'desc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_down</span>\r\n        </th>\r\n        <th class=\"ptj-actions\">\r\n            <ptj-modal v-if=\"settings.disable_selectfields != true\" :location=\"false\" :relative=\"tableheader\">\r\n                <template #button>\r\n                    <span class=\"material-icons\">add</span> \r\n                </template>\r\n                <template #default>\r\n                    <ptj-selectfields ></ptj-selectfields> \r\n                </template>\r\n            </ptj-modal>\r\n        </th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"(obj, rindex) in RepoStore.data\" :key=\"rindex\" class=\"ptj-table-row\">\r\n        <td v-for=\"(field, name) in obj.cells\" :key=\"name\" v-show=\"field.summary\" class=\"ptj-table-cell\" :class=\"field.name\">\r\n          <ptj-asset v-if=\"field.type=='asset'\" :field=\"field\" :id=\"obj.primary\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" :field=\"field\" :id=\"obj.primary\" />\r\n          <ptj-id v-else-if=\"field.type=='id'\" :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.type=='time'\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" :field=\"field\"  />\r\n        </td>\r\n        <td class=\"ptj-actions\" >\r\n            <ptj-button :route=\"{state:'primary', key:obj.primary}\"><span class=\"material-icons\">arrow_forward_ios</span></ptj-button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjSelectfields from \"./ptj-selectfields.vue\"\r\nimport PtjModal from \"./ptj-modal.vue\"\r\nimport { reactive, ref } from \"vue\"\r\nimport { RepoStore } from \"./../js/repo.js\"\r\nimport { getModelSettings } from \"./../js/route.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\n\r\nlet settings = getModelSettings();\r\nlet order = reactive( { name : '', dir : ''});\r\nconst tableheader = ref(null);\r\n\r\nfunction orderBy(name) {\r\n    if (RepoStore.meta.pages > 0) {\r\n        order.dir = (!order.name != name || order.dir  == \"desc\") ? \"asc\" : \"desc\";\r\n        order.name = name;\r\n        let sort = [];\r\n        sort[order.name] = order.dir;\r\n        RepoStore.meta.sort = sort;\r\n        load();\r\n    } else {\r\n        //custom sort on the table\r\n        if (order.name != name || order.dir == \"desc\") {\r\n            RepoStore.data.sort(function(x, y) {\r\n                let xval = x.getCell(name).toVal();\r\n                let yval = y.getCell(name).toVal();\r\n                if (xval < yval) {\r\n                    return -1;\r\n                } else if (xval > yval) {\r\n                    return 1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n            order.name = name;\r\n            order.dir = \"asc\";\r\n        } else {\r\n            RepoStore.data.sort(function(x, y) {\r\n                let xval = x.getCell(name).toVal();\r\n                let yval = y.getCell(name).toVal();\r\n                if (xval < yval) {\r\n                    return 1;\r\n                } else if (xval > yval) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n            order.name = name;\r\n            order.dir = \"desc\";\r\n        }\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\ntable, thead, tbody, tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n.ptj-table-wrapper {\r\n    position : relative;\r\n}\r\n\r\n</style>","<template>\r\n    <div v-for=\"(combinations, index) in getIndexCombinations\" :key=\"index\">\r\n     <h3><span\r\n        v-for=\"(tag, index) in combinations.tags\"\r\n        :key=\"index\"\r\n        >{{ tag }}&nbsp;</span></h3>\r\n    <ul>\r\n       <li v-for=\"ckey in combinations.data\" :key=\"ckey\">\r\n         <ptj-button :route=\"route\">\r\n          {{  data[ckey].getSummary() }}\r\n         </ptj-button>\r\n       </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { computed, inject } from \"vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\ninject(\"data\");\r\ninject(\"indexes\");\r\n\r\nfunction getCombinations(tag, data, combos) {\r\n    const ncombos = [];\r\n    if (combos.length == 0) {\r\n        for(let d in data) {\r\n        ncombos.push({ tags : [ data[d].display ], data : data[d].contains});\r\n        }\r\n    } else {\r\n        for (let c of combos) {\r\n          for(let d in data) {\r\n            let tags = c.tags;\r\n            tags.push(d.display);\r\n            ncombos.push({ tags : tags, data : c.data.filter( value => data[d].contains.includes(value))});\r\n          }\r\n        }\r\n    }\r\n    return ncombos;\r\n}\r\n\r\nconst getIndexCombinations = computed(() => { \r\n    let combos = [];\r\n    for (let group in indexes) {\r\n        combos = this.getCombinations(group, indexes[group], combos);\r\n    }\r\n    return combos;\r\n});\r\n</script>\r\n\r\n","<template>\r\n   <form @submit.prevent=\"searchData\" class=\"ptj-filter-form\">\r\n      <h3>{{ getDictionary('ptj-filter-form-title')}}</h3>\r\n      <ptj-form-row v-for=\"field in RepoStore.search.cells\" :key=\"field.name\" :field=\"field\" v-show=\"field.type != 'id' || Object.keys(field.options).length > 0\">\r\n          <ptj-id v-if=\"field.type=='id'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.type=='time'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" type=\"filter\" :field=\"field\" />\r\n          <a class=\"ptj-filter-form-reset\" @click=\"field.reset()\">x</a>\r\n      </ptj-form-row>\r\n      <input type=\"submit\" :value=\"getDictionary('ptj-filter-form-btn')\" class=\"ptj-filter-form-submit\" @click=\"$emit('close');\">\r\n  </form>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport { addToHistory } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { RepoStore, loadRepo } from \"./../js/repo.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\n\r\nfunction searchData() {\r\n    RepoStore.search.applyChangeData();\r\n    Map.params = RepoStore.search.convertToParams();\r\n    addToHistory();\r\n    loadRepo();\r\n}\r\n\r\n\r\n</script>\r\n<style scoped>\r\n.error {\r\n  color : red;\r\n}\r\n\r\n</style>\r\n\r\n","<template>\r\n <div class=\"ptj-pagination\">\r\n     <a v-for=\"index in RepoStore.max_pages\" \r\n     :key=\"index\" \r\n     @click=\"changePage(index)\" \r\n     :class=\"getActiveClass(index)\">{{ index }}</a>\r\n </div>\r\n</template>\r\n<script setup>\r\nimport { addToHistory } from \"./../js/route.js\"\r\nimport { loadRepo, RepoStore } from \"./../js/repo.js\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\nfunction getActiveClass(index) {\r\n    return (index == Map.params._page ?? 1) ? \"ptj-pagination-active\" : \"\";\r\n}\r\n\r\nfunction changePage(page) {\r\n    Map.params._page = page;\r\n    addToHistory();\r\n    loadRepo();\r\n}\r\n</script>","<template>\r\n    <div class=\"ptj-progress-bar-wrapper\">\r\n        <div class=\"ptj-progress-holder\">\r\n            <div class=\"ptj-progress-bar\" :style=\"'width:' + num + 'px'\">&nbsp;</div> \r\n        </div>   \r\n        <span>{{ num }}%</span>\r\n    </div> \r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { computed } from \"vue\"\r\n\r\nconst props = defineProps({\r\n    total : Number,\r\n    progress : Number\r\n});\r\n\r\n\r\nconst num = computed(() => {\r\n    let num = Math.floor((props.progress / props.total) * 100);\r\n    return (isNaN(num)) ? 0 : num;\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n .ptj-progress-holder {\r\n     width : 100%;\r\n     min-height : 10px;\r\n     position : relative;\r\n     display : flex;\r\n     align-items: stretch;\r\n     padding : 2px;\r\n }\r\n\r\n .ptj-progress-bar {\r\n     width : 0;\r\n     height : 100%;\r\n     position : relative;\r\n     line-height : 100%;\r\n }\r\n\r\n\r\n</style>\r\n","<template>\r\n <form @submit.prevent=\"submit\" v-show=\"fstate==0\" class=\"ptj-form\" :class=\"Map.model + ' ' + Map.state\">\r\n    <div class=\"ptj-form-error\" v-show=\"globalerror\">{{ globalerror }}</div>\r\n    <ptj-form-row v-for=\"field in cdata.cells\" :key=\"field.name\" :field=\"field\">\r\n          <ptj-asset v-if=\"field.type=='asset'\" type=\"edit\"  :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" type=\"edit\"  :field=\"field\"/>\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" type=\"edit\"  :field=\"field\" />\r\n          <ptj-id v-else-if=\"field.type=='id'\" type=\"edit\"  :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.type=='time'\" type=\"edit\"   :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" type=\"edit\"  :field=\"field\" />\r\n    </ptj-form-row>\r\n    <input type=\"submit\" :value=\"getDictionary('ptj-create-form-btn')\" class=\"ptj-form-submit\">\r\n    <ptj-progress-bar v-show=\"fstate == 1\" :total=\"progress.total\" :progress=\"progress.progress\" />\r\n  </form>\r\n  \r\n</template>\r\n\r\n<script setup>\r\n\r\nimport {ref, reactive, onMounted } from \"vue\" \r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjProgressBar from \"./ptj-progress-bar.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport client from \"./../js/client.js\"\r\nimport { DataRow } from \"./../js/datarow.js\"\r\nimport { MetaRow } from \"./../js/metarow.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { loadRepo } from \"./../js/repo.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\nconst emit = defineEmits(['close']);\r\nlet globalerror = ref('');\r\n\r\nconst cdata = reactive(new DataRow());\r\n\r\n\r\nconst progress = reactive({ total : 0, progress : 0});\r\n\r\nlet fstate = 0;\r\n\r\n\r\n\r\nconst load = async() => {\r\n    return client.post(\"/route/\" + Map.route + \"/\" + Map.model)\r\n    .then(response => {\r\n        const meta = new MetaRow();\r\n        meta.map(response.fields);\r\n        cdata.applyMetaRow(meta);\r\n\r\n        let promises = [];\r\n        for(let i in meta.cells) {\r\n            if (meta.cells[i].type == 'id' && meta.cells[i].reference) {\r\n                let url = \"/reference/\" + Map.model + \"/\" + i;\r\n                promises.push(meta.cells[i].setReferenceOptions(url, {\"--parentid\":Map.key}));\r\n            }\r\n        }\r\n        return Promise.all(promises);\r\n    }).catch(e => console.log(e));\r\n}\r\n\r\n\r\nfunction submit() {\r\n\r\n    fstate = (progress.total > 0) ? 1 : 2;\r\n    cdata.clearErrors();\r\n    let key = 0;\r\n    let ndata = cdata.serialize();\r\n    if (Map.key) ndata[\"--parentid\"] = Map.key;\r\n    return client.post(\"/data/\" + Map.route + \"/\" + Map.model, ndata)\r\n    .then(response=>{\r\n        key = response[\"--id\"];\r\n        let promises = [];\r\n        let assets = cdata.getCellByType(\"asset\");\r\n        progress.total = 0;\r\n        for(let i in assets) {\r\n            const val = assets[i].val;\r\n            if (!val) continue;\r\n            ++progress.total;\r\n            const asset = new Asset();\r\n            asset.url = \"/asset/\" + Map.model + \"/\" + i + \"/\" + response[\"--id\"];\r\n            let promise = asset.saveFile(assets[i].val)\r\n            .then(() => {\r\n                ++progress.progress;\r\n            });\r\n            promises.push(promise);\r\n        }\r\n        return Promise.all(promises);\r\n    })\r\n    .then(() => {\r\n        cdata.reset();\r\n        loadRepo();\r\n        emit(\"close\");\r\n    })\r\n    .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n            console.log(err);\r\n        fstate = 0;\r\n        if (typeof err == \"string\") {\r\n            globalerror = err;\r\n        } else {\r\n            cdata.setErrors(err);\r\n        }\r\n    });\r\n}\r\n\r\nonMounted(async () => {\r\n    await load();\r\n});\r\n\r\n</script>\r\n","<template>\r\n  <div :class=\"[Map.model, Map.state]\">\r\n    <ptj-modal>\r\n        <template #button>\r\n            {{ getDictionary('ptj-repo-post') }}\r\n        </template>\r\n        <template #default=\"createScope\">\r\n            <ptj-create-form @close=\"createScope.toggleShow\" />\r\n        </template>\r\n    </ptj-modal>\r\n    <ptj-modal v-if=\"settings.disable_filter != true\">\r\n        <template #button>\r\n            {{ getDictionary('ptj-repo-search') }} <span class=\"material-icons\">search</span>\r\n        </template>\r\n        <template #default=\"filterScope\">\r\n            <ptj-filter-form @close=\"filterScope.toggleShow\" />\r\n        </template>\r\n    </ptj-modal>\r\n    <ptj-tree v-if=\"RepoStore.component=='tree'\" />\r\n    <ptj-list v-else-if=\"RepoStore.component=='list'\" />\r\n    <ptj-table v-else-if=\"RepoStore.component=='table'\" />\r\n    <ptj-pagination v-if=\"RepoStore.max_pages > 0\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { ref, onMounted, onBeforeUnmount } from \"vue\"\r\nimport PtjTree from \"./ptj-tree.vue\"\r\nimport PtjTable from \"./ptj-table.vue\"\r\nimport PtjList from \"./ptj-list.vue\"\r\nimport PtjFilterForm from \"./ptj-filter-form.vue\"\r\nimport PtjSelectfields from \"./ptj-selectfields.vue\"\r\nimport PtjPagination from \"./ptj-pagination.vue\"\r\nimport PtjModal from \"./ptj-modal.vue\"\r\nimport PtjCreateForm from \"./ptj-create-form.vue\"\r\nimport { RepoStore, loadRepo, resetRepo } from \"./../js/repo.js\"\r\nimport { getModelSettings } from \"./../js/route.js\" \r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\n\r\nlet settings = getModelSettings();\r\n\r\n\r\n\r\n\r\nonMounted(async () => {\r\n    await loadRepo();\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n    resetRepo();\r\n});\r\n\r\n</script>\r\n<script>\r\n\r\n</script>\r\n\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n</style>","<template>\r\n    <p>{{ title }}</p>\r\n    <input type=\"text\" :placeholder=\"check_str\" @keyup=\"checkStatus\" v-model=\"delval\">\r\n    <button :disabled=\"disabled\" @click=\"del\">{{ btn }}</button>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport client from \"./../js/client.js\"\r\nimport { ref, computed } from \"vue\";\r\nimport { redirect } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\nconst props = defineProps({\r\n    check_str : {\r\n        type : String,\r\n        default : \"delete\"\r\n    },\r\n    parentid : {\r\n        default : 0\r\n    }\r\n});\r\n\r\nconst emits = defineEmits(['close']);\r\n\r\nlet delval = ref(\"\");\r\nlet disabled = ref(true);\r\nlet title = computed(() => {\r\n    return getDictionary(\"ptj-delete-title\",  { val : props.check_str});\r\n});\r\n\r\nlet btn = computed(() => {\r\n    return getDictionary(\"ptj-delete-btn\");\r\n});\r\n\r\nfunction checkStatus() {\r\n    disabled.value = (delval.value == props.check_str) ? false : true;\r\n}\r\n\r\nfunction del() {\r\n    client.delete(\"/data/\" + Map.route + \"/\" + Map.model, {\"--id\":Map.key})\r\n    .then(res => {\r\n        Map.state = \"parent\";\r\n        Map.key = props.parentid.val;\r\n        redirect();\r\n    })\r\n    .catch(e => console.log(e));\r\n}\r\n    \r\n</script>\r\n","<template>\r\n    <a v-if=\"RouteStore.route.perms.includes('put')\" @click=\"toggleState\" class=\"ptj-edit-toggle\">{{ next_state }}</a>\r\n    <ptj-modal v-if=\"RouteStore.route.perms.includes('delete')\" cls=\"ptj-del-modal\">\r\n        <template #button>\r\n            {{ getDictionary('ptj-primary-delete') }}\r\n        </template>\r\n        <template #default=\"delScope\">\r\n            <ptj-delete :parentid=\"store.data.parent\" @close=\"delScope.toggleShow\" />\r\n        </template>\r\n    </ptj-modal>\r\n    <div class=\"ptj-primary\" :class=\"Map.model\">\r\n        <ptj-form-row v-for=\"field in store.data.cells\" :key=\"field.name\" :field=\"field\"> \r\n          <ptj-asset v-if=\"field.type=='asset'\" :type=\"store.type\" :field=\"field\" :id=\"store.data.primary\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" :type=\"store.type\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" :type=\"store.type\" :field=\"field\" :id=\"store.data.primary\" />\r\n          <ptj-id v-else-if=\"field.type=='id'\" :type=\"store.type\" :field=\"field\"  />\r\n          <ptj-time v-else-if=\"field.type=='time'\" :type=\"store.type\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" :type=\"store.type\" :field=\"field\"  />\r\n        </ptj-form-row>\r\n        <input v-if=\"store.type =='edit'\" type=\"submit\" :value=\"getDictionary('ptj-primary-put-btn')\" class=\"ptj-form-submit\" @click=\"submit\">\r\n    </div>\r\n    <div class=\"ptj-children\">\r\n        <ptj-button v-for=\"action in RouteStore.route.children\" :key=\"action\" :route=\"{ model : action, state : 'parent', key : Map.key}\">\r\n            {{ action }}\r\n        </ptj-button>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport client from \"./../js/client.js\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport { DataRow } from \"./../js/datarow.js\"\r\nimport { reactive, computed, onMounted, onBeforeUnmount } from \"vue\"\r\nimport PtjDelete from \"./ptj-delete.vue\"\r\nimport PtjModal from \"./ptj-modal.vue\"\r\nimport PtjForm from \"./ptj-create-form.vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport { MetaRow } from \"./../js/metarow.js\"\r\nimport {RouteStore, getModelSettings } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n  \r\n\r\n\r\nconst store = reactive({ data : new DataRow(), fstate : 0,  type : 'view', show_def : false, progress : { total : 0, progress : 0} });\r\n\r\n\r\n\r\nfunction toggleState() {\r\n    store.type = (store.type == \"view\") ? \"edit\" : \"view\";\r\n}\r\n\r\nlet next_state = computed(() => {\r\n    return (store.type == \"edit\") ? \"view\" : \"edit\";\r\n});\r\n\r\n\r\n\r\nfunction buildParams(meta_settings) {\r\n    let params = {};\r\n    if (Map.to) params.__to = Map.to;\r\n    if (Map.key) {\r\n        if (Map.key == \"first\") params.__limit = 1;\r\n        else params[\"--id\"] = Map.key;\r\n    }\r\n    if (meta_settings.fields) params.__fields = meta_settings.fields;\r\n    return params;\r\n}\r\n\r\n\r\nfunction reset() {\r\n    store.data = new DataRow();\r\n    store.fstate = 0;\r\n    store.type = \"view\";\r\n    store.show_def = false;\r\n    store.progress = { total : 0, progress : 0};\r\n}\r\n\r\nconst load = async() => {\r\n    let meta_settings = getModelSettings();\r\n    let params = buildParams(meta_settings);\r\n   \r\n    return client.get(\"/route/\" + Map.route + \"/\" + Map.model + \"/primary\", params)\r\n    .then(response => {\r\n        const meta = new MetaRow();\r\n        meta.map(response.fields, meta_settings.fields ?? []);\r\n        store.data.applyMetaRow(meta);\r\n    }).then(() => {\r\n        return client.get(\"/data/\" + Map.route + \"/\" + Map.model + \"/primary\", params);\r\n    }).then(response => {\r\n        store.data.row = response;\r\n        //set the change values as well for each row\r\n        for(let i in store.data.cells) {\r\n            store.data.cells[i].change = store.data.cells[i].val;\r\n        }\r\n    }).then(response => {\r\n        for(let i in store.data.cells) {\r\n            if (store.data.cells[i].type == \"id\" && store.data.cells[i].reference) {\r\n                let url = \"/reference/\" + Map.model + \"/\" + i;\r\n                store.data.cells[i].setReferenceOptions(url, {\"--id\" : Map.key});\r\n            }\r\n        }\r\n    }).catch(e => console.log(e));\r\n\r\n}\r\n\r\n\r\nfunction submit() {\r\n\r\n    store.fstate = (store.progress.total > 0) ? 1 : 2;\r\n    store.data.clearErrors();\r\n    let key = 0;\r\n    let ndata = store.data.serialize(true);\r\n    if (Object.keys(ndata).length == 0) {\r\n        toggleState();\r\n        return;\r\n    }\r\n    ndata[\"--id\"] = Map.key;\r\n    return client.put(\"/data/\" + Map.route + \"/\" + Map.model, ndata)\r\n    .then(response=>{\r\n        let promises = [];\r\n        let assets = store.data.getCellByType(\"asset\");\r\n        store.progress.total = 0;\r\n        for(let i in assets) {\r\n            const val = assets[i].val;\r\n            if (!val) continue;\r\n            ++store.progress.total;\r\n            const asset = new Asset();\r\n            asset.url = \"/asset/\" + Map.model + \"/\" + i + \"/\" + response[\"--id\"];\r\n            let promise = asset.saveFile(assets[i].val)\r\n            .then(() => {\r\n                ++store.progress.progress;\r\n            });\r\n            promises.push(promise);\r\n        }\r\n        return Promise.all(promises);\r\n    })\r\n    .then(() => {\r\n        for(let i in store.data.cells) {\r\n            store.data.cells[i].val = store.data.cells[i].change;\r\n        }\r\n    })\r\n    .then(() => {\r\n        toggleState();\r\n    })\r\n    .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n        store.fstate = 0;\r\n        if (typeof err == \"string\") {\r\n            globalerror = err;\r\n        } else {\r\n            store.data.setErrors(err);\r\n        }\r\n    });\r\n}\r\n\r\nonMounted(async () => {\r\n await load();\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n    reset();\r\n});\r\n\r\n</script>","<template>\r\n <div class=\"ptj-account-handler\">\r\n    <form @submit.prevent=\"submit\" v-show=\"store.state=='login'\" class=\"ptj-login\">\r\n        <div class=\"ptj-form-error\" v-show=\"store.globalerror\">{{ store.globalerror }}</div>\r\n        <ptj-form-row v-for=\"field in store.login_data.cells\" :key=\"field.meta.name\" :field=\"field\">\r\n          <ptj-string type=\"edit\" :field=\"field\" />\r\n        </ptj-form-row>\r\n        <input type=\"submit\" :value=\"getDictionary('ptj-account-handler-btn-login')\" class=\"ptj-form-submit\">\r\n        <a v-if=\"RouteStore.route.perms.includes('post')\" @click=\"toggleState()\">Register</a>\r\n    </form>\r\n    <form  @submit.prevent=\"submit\" v-show=\"store.state=='create'\" class=\"ptj-register\">\r\n        <div class=\"ptj-form-error\" v-show=\"store.globalerror\">{{ store.globalerror }}</div>\r\n        <ptj-form-row v-for=\"field in store.register_data.cells\" :key=\"field.meta.name\" :field=\"field\">\r\n          <ptj-number v-if=\"field.meta.type=='number'\" type=\"edit\" :field=\"field\"/>\r\n          <ptj-flag v-else-if=\"field.meta.type=='flag'\" type=\"edit\" :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.meta.type=='time'\" type=\"edit\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.meta.type=='string'\" type=\"edit\" :field=\"field\" />\r\n        </ptj-form-row>\r\n        <input type=\"submit\" :value=\"getDictionary('ptj-account-handler-btn-create')\" class=\"ptj-form-submit\">\r\n    </form>\r\n </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport { refresh } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { reactive } from 'vue'\r\nimport { DataRow } from './../js/datarow.js';\r\nimport { MetaRow } from \"./../js/metarow.js\"\r\nimport client from \"./../js/client.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\nimport {RouteStore } from \"./../js/route.js\"\r\n\r\nconst props = defineProps({\r\n    actions : []\r\n});\r\n\r\n\r\nconst store = reactive({\r\n    state : 'login',\r\n    active : true,\r\n    login_data : new DataRow(),\r\n    register_data : new DataRow(),\r\n    globalerror : ''\r\n});\r\n\r\nfunction toggleState() {\r\n    store.state = (store.state == 'login') ? 'create' : 'login';\r\n}\r\n\r\n//load our modules\r\n\r\nclient.post(\"/route/\" + Map.route + \"/\" + Map.model)\r\n.then(response => {\r\n    let meta = new MetaRow();\r\n    meta.map(response.fields);\r\n    store.register_data.applyMetaRow(meta);\r\n});\r\n\r\nclient.post(\"/route/\" +  Map.route + \"/\" + Map.model + \"/login\")\r\n.then(response => {\r\n    let meta = new MetaRow();\r\n    meta.map(response.fields);\r\n    store.login_data.applyMetaRow(meta)\r\n});\r\n\r\n\r\nfunction submit() {\r\n    store.active = false;\r\n    store.globalerror = \"\";\r\n    if (store.state == \"login\") {\r\n        return client.post(\"/data/\" +  Map.route + \"/\" + Map.model + \"/login\", store.login_data.serialize(\"login\"))\r\n        .then(response => {\r\n            refresh();\r\n        })\r\n        .catch(e => {\r\n            store.globalerror = \"Incorrect username / password\";\r\n        })\r\n    } else {\r\n        return client.post(\"/data/\" + Map.route + \"/\" +  Map.model, store.register_data.serialize(\"post\"))\r\n        .then(response => {\r\n            refresh();\r\n        })\r\n        .catch(e => {\r\n            store.register_data.applyErrors(e);\r\n        });\r\n    }\r\n} \r\n</script>\r\n\r\n\r\n","<template>\r\n    <ptj-slug-trail />\r\n    <Suspense>\r\n        <template #default>\r\n            <div :class=\"[Map.model, Map.state]\">\r\n            <h1>{{ RouteStore.title }}</h1>\r\n            <component v-if=\"component\" :is=\"component\" />\r\n            </div>\r\n        </template>\r\n        <template #fallback>\r\n            <div>Loading ...</div>\r\n        </template>\r\n    </Suspense>\r\n</template>\r\n<script setup>\r\n\r\nimport { computed, onMounted } from \"vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjSlugTrail from \"./ptj-slug-trail.vue\"\r\nimport { RouteStore, loadRoute, loadSlugTrail } from \"./../js/route.js\"\r\nimport PtjRepo from \"./ptj-repo.vue\"\r\nimport PtjPrimary from \"./ptj-primary.vue\"\r\nimport PtjAccountHandler from \"./ptj-account-handler.vue\"\r\n\r\n\r\nconst component = computed(() => {\r\n    if (!RouteStore.component) return null;\r\n    else if (RouteStore.component == \"ptj-primary\") return PtjPrimary;\r\n    else if (RouteStore.component == \"ptj-repo\") return PtjRepo;\r\n    else if (RouteStore.component == \"ptj-account-handler\") return PtjAccountHandler;\r\n});\r\n\r\n\r\n\r\n\r\nonMounted(() => {\r\n    loadSlugTrail();\r\n    return loadRoute();\r\n});\r\n\r\n</script>","let settings = {};\r\nimport client from \"./client.js\"\r\nimport { Map } from \"./map.js\"\r\nimport { initUser } from \"./user.js\"\r\nimport { initSettings} from \"./route.js\"\r\n\r\n\r\nexport function PtjRun(settings = {}) {\r\n    if (!settings) settings = {};\r\n    if (!settings.client) {\r\n        throw \"Must set client settings\";\r\n    }\r\n\r\n    if (!settings.client.url) {\r\n        throw(\"No URL defined for client\");\r\n    }\r\n\r\n    client.initSettings(settings.client);\r\n\r\n    if (settings.map) {\r\n        Map.initSettings(settings.map);\r\n    }\r\n\r\n    initSettings(settings.models);\r\n\r\n    let role = (settings.user && settings.user.role) ? settings.user.role : \"\";\r\n    return initUser(role);\r\n}\r\n","import PTJUser from \"./presstojam/src/components/ptj-user.vue\"\r\nimport PTJRoute from \"./presstojam/src/components/ptj-router.vue\"\r\nimport { PtjRun } from \"./presstojam/src/js/controller.js\"\r\nimport Client from \"./presstojam/src/js/client.js\"\r\nimport { createApp } from \"vue\"\r\nimport { Map } from \"./presstojam/src/js/map.js\"\r\nimport { loadNav } from \"./presstojam/src/js/user.js\"\r\n \r\nexport function runApp(mount, user_settings) {\r\n    PtjRun(user_settings)\r\n    .then(() => {\r\n        return loadNav()\r\n    }).then(() => {\r\n        const app = createApp(PTJUser);\r\n        app.mount(mount);\r\n        return app;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n\r\nexport function runRoute(mount, user_settings) {\r\n    PtjRun(user_settings)\r\n    .then(() => {\r\n        const app = createApp(PTJRoute);\r\n        app.mount(mount);\r\n        return app;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n\r\n\r\nexport function getClient(settings) {\r\n\r\n    if (!settings.client) {\r\n        throw \"Must set client settings\";\r\n    }\r\n\r\n    if (!settings.client.url) {\r\n        throw(\"No URL defined for client\");\r\n    }\r\n\r\n    Client.initSettings(settings.client);\r\n    return Client;\r\n}\r\n\r\n"],"names":["active","ref","toggleShow","value","relstyle","computed","props","relative","obj","el","left","top","width","offsetWidth","height","offsetHeight","wrapper","classList","contains","offsetLeft","offsetTop","parentNode","getOffsetToWrapper","disabled","getClass","location","styleInject","css","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","main_url","custom_headers","initSettings","settings","url","name","run","method","params","body","headers","Headers","set","i","fetch","mode","cache","credentials","then","response","ok","json","get","data","URLSearchParams","Array","isArray","append","JSON","stringify","indexOf","toString","this","getprimary","post","put","patch","getAsset","blob","delete","Map","constructor","_route","_model","_state","_key","_to","_params","_base","_default","Object","keys","forEach","property","defineProperty","substring","newValue","action_map","id","model","state","to","reset","route","key","convertToURL","pts","x","push","join","param_str","base","convertFromURL","url_obj","URL","window","href","pathname","replace","parts","split","length","_self","searchParams","pop","isNaN","parseInt","Error","getAll","default","apply","model_settings","onpopstate","runRoute","RouteStore","reactive","component","title","parent","slug","sort","getModelSettings","loadRoute","children","perms","client","catch","e","console","log","loadSlugTrail","refresh","reload","redirect","addToHistory","url_str","protocol","host","history","pushState","custom_val","selectCustom","field","change1","change","filter","item","onMounted","reference","setReferenceOptions","show_list","display","symbol","toggleList","select","target","getAttribute","dictionary","getDictionary","vals","str","exp","models","fields","def","val","ctype","immutable","tag","enums","regEx","RegExp","test","isEnum","setContainsAsOptions","encrypted","html","max","atts","readonly","placeholder","User","init","login","user","NavStore","cats","routes","logout","Client","checkLoginStatus","is_expired","setTimeout","initUser","role","loadNav","cat","route_name","getDefault","Errors","Field","_name","_type","_atts","_confirm","_reference","_label","_store","summary","options","_default_val","_immutable","_encrypted","_min","_max","_contains","_notcontains","_recursive","_listeners","toLowerCase","validation","min","notcontains","getOption","opt","clean","calcValue","validateSize","validate","err","nhas","match","has","trigger","MetaRow","_cells","_children","_active","_init","index","_state_groups","addChild","child","addState","action","_actions","resetSummary","arr","setStates","groups","states","depends_on","mapField","recursive","map","limited_fields","getCellByType","cells","showAll","DataCell","meta","error","is_validate_on","meta_keys","getOwnPropertyNames","includes","store","showError","default_val","addParam","change2","addAPIParam","cobj","validateon","on","resetMeta","isSummary","createStateTrigger","cb","group","depends_val","DataRow","metarow","_metarow","_ids","applyMetaRow","primary","clone","state_groups","listeners","row","hasOwnProperty","getSummary","cell","serialize","changes_only","clearErrors","setErrors","convertToParams","convertToAPIParams","applyChangeData","RepoStore","indexes","search","indexData","ckey","mapRepoData","resetRepo","max_pages","loadRepo","async","meta_settings","__to","limit","__limit","__fields","_page","buildParams","show","Math","ceil","count","toggle_state","branch","toggle","icon","anchor","createObjectURL","download","click","removeChild","revokeObjectURL","order","dir","tableheader","pages","load","y","xval","getCell","toVal","yval","inject","getIndexCombinations","combos","getCombinations","searchData","getActiveClass","page","num","floor","progress","total","globalerror","cdata","fstate","submit","ndata","promises","assets","asset","Asset","promise","saveFile","Promise","all","emit","onBeforeUnmount","delval","check_str","btn","checkStatus","del","res","parentid","show_def","toggleState","next_state","login_data","register_data","applyErrors","PtjPrimary","PtjRepo","PtjAccountHandler","PtjRun","runApp","mount","user_settings","app","createApp","PTJUser","PTJRoute","getClient"],"mappings":"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"}