{"version":3,"file":"ptj.esm.js","sources":["../presstojam/src/js/settings.js","../presstojam/src/js/client.js","../presstojam/src/js/dictionary.js","../presstojam/src/js/route.js","../presstojam/src/js/map.js","../presstojam/src/components/ptj-button.vue","../presstojam/src/components/ptj-multiple-input.vue","../node_modules/style-inject/dist/style-inject.es.js","../presstojam/src/components/ptj-multiple-select.vue","../presstojam/src/components/ptj-string.vue","../presstojam/src/js/user.js","../presstojam/src/components/ptj-slug-trail.vue","../presstojam/src/js/dragndrop.js","../presstojam/src/js/error.js","../presstojam/src/js/field.js","../presstojam/src/js/metarow.js","../presstojam/src/js/datacell.js","../presstojam/src/js/datarow.js","../presstojam/src/js/repo.js","../presstojam/src/components/ptj-tree-node.vue","../presstojam/src/components/ptj-tree.vue","../presstojam/src/components/ptj-flag.vue","../presstojam/src/components/ptj-id.vue","../presstojam/src/components/ptj-time.vue","../presstojam/src/components/ptj-table.vue","../presstojam/src/components/ptj-list.vue","../presstojam/src/components/ptj-widget.vue","../presstojam/src/components/ptj-filter-form.vue","../presstojam/src/components/ptj-pagination.vue","../presstojam/src/components/ptj-progress-bar.vue","../presstojam/src/components/ptj-create-form.vue","../presstojam/src/components/ptj-repo.vue","../presstojam/src/components/ptj-delete.vue","../presstojam/src/components/ptj-primary.vue","../presstojam/src/components/ptj-account-handler.vue","../presstojam/src/components/ptj-router.vue","../presstojam/src/components/ptj-user.vue","../import.js"],"sourcesContent":["let settings = {};\r\n\r\nfunction regSettings(isettings, type = null) {\r\n    if (!type) settings = isettings;\r\n    else settings[type] = isettings;\r\n}\r\n\r\n\r\nfunction getSettings(type) {\r\n    return settings[type];\r\n} \r\n\r\n\r\nfunction getModelSettings(model, state) {\r\n    if (settings.models && settings.models[model] && settings.models[model][state]) {\r\n        return settings.models[model][state];\r\n    }\r\n    return {};\r\n}\r\n\r\nexport default {\r\n    regSettings,\r\n    getSettings,\r\n    getModelSettings\r\n}","import Settings from \"./settings.js\"\r\n\r\nlet custom_headers  = {};\r\nlet main_url;\r\n\r\nexport default {\r\n\r\n    initSettings() {\r\n        const settings = Settings.getSettings(\"client\");\r\n        if (!settings.url) {\r\n            throw(\"No URL defined for client\");\r\n        }\r\n        main_url = settings.url;\r\n\r\n        if (settings.custom_headers) {\r\n            for(let name in settings.custom_headers) {\r\n                custom_headers[name] = settings.custom_headers[name];\r\n            }\r\n        }\r\n    },\r\n\r\n    run(url, headers) {\r\n\r\n        if (!main_url) {\r\n            this.initSettings();\r\n        }\r\n        \r\n        headers.mode = 'cors';\r\n        headers.cache = 'no-cache';\r\n        headers.credentials = 'include';\r\n        headers['Content-Type'] = 'application/json';\r\n        headers.headers = custom_headers;\r\n\r\n        const _self = this;\r\n\r\n        return fetch(main_url + url, headers)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw response;\r\n            }\r\n        });\r\n    }, \r\n    get(url, data) {\r\n        if (data) {\r\n            const params = new URLSearchParams();\r\n            for(let i in data) {\r\n                if (Array.isArray(data[i]) || (typeof data[i] == 'object' && data[i] !== null)) {\r\n                   params.append(i, JSON.stringify(data[i]));\r\n                } else params.append(i, data[i]);\r\n            }\r\n\r\n            if (url.indexOf(\"?\") == -1) url += \"?\";\r\n            else url += \"&\";\r\n            url += params.toString();\r\n        }\r\n        let headers = {};\r\n        headers.method = 'GET';\r\n        return  this.run(url, headers);\r\n    },\r\n\r\n    getprimary(url, data) {\r\n        return this.get(url, data);\r\n    },\r\n\r\n    post(url, data) {\r\n        //call our fetch response and return\r\n        let headers = {};\r\n        headers.method = 'POST';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    },\r\n\r\n    put(url, data) {\r\n        let headers = {};\r\n        headers.method = 'PUT';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    },\r\n\r\n    patch(url, data) {\r\n        let headers = {};\r\n        headers.method = 'PATCH';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    },\r\n\r\n    delete(url, data) {\r\n        let headers = {};\r\n        headers.method = 'DELETE';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    }\r\n}\r\n","let dictionary = {};\r\n\r\nexport function setDictionary(dict) {\r\n    dictionary = dict;\r\n}\r\n\r\nexport function getModelDictionary(cat, key, def) {\r\n    if (dictionary[cat] && dictionary[cat][key]) {\r\n        return dictionary[cat][key];\r\n    } else {\r\n        return def;\r\n    }\r\n}\r\n\r\n\r\nexport function getFieldDictionary(field, key, def) {\r\n    if (!dictionary.fields[field]) return def;\r\n    const dfield = dictionary.fields[field];\r\n    if (dfield[key]) return dfield[key];\r\n    else return def;\r\n}","import { reactive } from \"vue\"\r\nimport client from \"./client.js\"\r\nimport Settings from \"./settings.js\"\r\nimport { MapModel } from \"./map.js\"\r\nimport { setDictionary } from \"./dictionary.js\"\r\n\r\nwindow.onpopstate = function() {\r\n    Map.convertFromURL();\r\n    runRoute();\r\n}\r\n\r\nexport const RouteStore = reactive({ \r\n    cats : {}, \r\n    routes : [], \r\n    component : '', \r\n    title : '',\r\n    name : '',\r\n    route : { \"children\" : [], parent : null, \"perms\" : []}, \r\n});\r\n\r\nexport const Map = new MapModel();\r\n\r\nfunction setComponent() {\r\n    if (Map.state == \"get\" || Map.state == \"parent\") {\r\n        RouteStore.component = \"ptj-repo\";\r\n    } else if (Map.state == \"primary\") {\r\n        RouteStore.component = \"ptj-primary\";\r\n    } else if (Map.state == \"login\") {\r\n        RouteStore.component = \"ptj-account-handler\";\r\n    }\r\n}\r\n\r\n\r\nexport function init() {\r\n    let role = \"\";\r\n    const settings = Settings.getSettings(\"mapper\");\r\n    if (settings) {\r\n        Map.base = \"/\" + settings.base.replace(/^\\/+|\\/+$/g, '');\r\n        if (settings.role) {\r\n            role = settings.role;\r\n        }\r\n    }\r\n\r\n    Map.convertFromURL();\r\n    return Promise.resolve();\r\n}\r\n\r\nfunction getDefault() {\r\n    for(let cat in RouteStore.cats) {\r\n        for(let route of RouteStore.cats[cat]) {\r\n            if (route.default) {\r\n                return route;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction load(response) {\r\n    RouteStore.cats = {};\r\n    RouteStore.routes = [];\r\n    RouteStore.route = { \"children\" : [], parent : null, \"perms\" : []};\r\n    RouteStore.model = null;\r\n    return client.get(\"/nav/site-map\")\r\n    .then(response => {\r\n        for(let cat in response) {\r\n            for(let route_name in response[cat]) {\r\n                const route = { model : route_name, state : response[cat][route_name].state };\r\n                if (response[cat][route_name].default) route.default = true;\r\n                route.route = route_name;\r\n                RouteStore.routes.push(route);\r\n\r\n                if (!RouteStore.cats[cat]) RouteStore.cats[cat] = [];\r\n                RouteStore.cats[cat].push(route);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\nfunction loadRoute() {\r\n    return client.get(\"/nav/route-points/\" + Map.route + \"/\" + Map.model)\r\n    .then(response => {   \r\n        RouteStore.route.children = response.children;\r\n        RouteStore.route.perms = response.perms;\r\n        RouteStore.route.parent = response.parent;\r\n        RouteStore.title = response.title;\r\n        RouteStore.name = response.name;\r\n        setDictionary(response.dictionary);\r\n    })\r\n    .catch(e => console.log(e));\r\n}\r\n\r\n\r\n\r\n\r\nexport function refresh() {\r\n    location.href = Map.base;\r\n}\r\n\r\nexport function redirect() {\r\n    addToHistory();\r\n    runRoute();\r\n}\r\n\r\nexport function addToHistory() {\r\n    const url_str = window.location.protocol + \"//\" + window.location.host +  Map.convertToURL();\r\n    const url = new URL(url_str);\r\n    window.history.pushState({'name' : url.pathname}, document.title, url);\r\n}\r\n\r\nexport function runRoute() {\r\n    let promises = [];\r\n    if (!Map.model) {\r\n        promises.push(\r\n            load()\r\n            .then(() => {\r\n                Map.apply(getDefault());\r\n                return loadRoute();\r\n            })\r\n        );\r\n    } else if (Map.hasChange(\"route\")) {\r\n      promises.push(load());\r\n      promises.push(loadRoute());\r\n    } else if (Map.hasChange(\"model\")) {\r\n        promises.push(loadRoute());\r\n    }\r\n\r\n    return Promise.all(promises)\r\n    .then(() => {\r\n        if (!Map.model) {\r\n            \r\n        }\r\n        setComponent();\r\n    })\r\n    .catch(e => console.log(e));\r\n}\r\n","import { computed, reactive } from \"vue\"\r\n\r\nexport class MapModel {\r\n\r\n    constructor() {\r\n        this._route = '';\r\n        this._model = '';\r\n        this._state = '';\r\n        this._key = 0;\r\n        this._to = '';\r\n        this._params = {};\r\n        this._settings = {};\r\n        this._base = \"/\";\r\n        this._default = false;\r\n        this._changes = {};\r\n\r\n        const keys = Object.keys(this);\r\n\r\n        keys.forEach(property => {\r\n          if (property[0] == \"_\") {\r\n            Object.defineProperty(this, property.substring(1), {\r\n                get: function() { \r\n                    return this[property];\r\n                },\r\n                set: function(newValue) {\r\n                    this._changes[property.substring(1)] = this[property];\r\n                    this[property] = newValue;\r\n                }\r\n            });\r\n          } \r\n        });\r\n\r\n\r\n        this.action_map = {\r\n            'post' : '-create',\r\n            'put' : '-update',\r\n            'delete' : '-delete',\r\n            'login' : '-login',\r\n            'logout' : '-logout',\r\n            'primary' : '-primary',\r\n            'parent' : '-parent',\r\n            'get' : ''\r\n        };\r\n    }\r\n\r\n    get id() {\r\n        return this.model + \"-\" + this.state + \"-\" + this.to;\r\n    }\r\n\r\n    hasChange(key) {\r\n        return this._changes.hasOwnProperty(key);\r\n    }\r\n\r\n    reset() {\r\n        this.route = '';\r\n        this.model = '';\r\n        this.state = '';\r\n        this.key = 0;\r\n        this.to = '';\r\n        this.params = {};\r\n        this.settings = {};\r\n        this._changes = {};\r\n    }\r\n\r\n    resetChanges() {\r\n        this._changes = {};\r\n    }\r\n\r\n\r\n    convertToURL() {\r\n        let url = this._base + this.route + \"/\" + this.model + this.action_map[this.state];\r\n        if (this.key) url += \"-\" + this.key;\r\n        if (this.to) url += \"-to-\" + this.to;\r\n\r\n        let param_str = [];\r\n        for(const i in this.params) {\r\n            if (typeof this.params[i] == 'Array' || typeof this.params[i] == 'Object') {\r\n                param_str.push(i + \"=\" + JSON.stringify(this.params[i]));\r\n            } else {\r\n                param_str.push(i + \"=\" + this.params[i]);\r\n            }\r\n        }\r\n\r\n        if (param_str.length > 0) url += \"?\" + param_str.join(\"&\");\r\n\r\n        return url;\r\n    }\r\n    \r\n    convertFromURL(url_obj) {\r\n        if (!url_obj) url_obj = new URL(window.location.href);\r\n        let url = url_obj.pathname.replace(this.base, \"\");\r\n        url = url.replace(/^\\/+|\\/+$/g, '');\r\n\r\n        if (!url) return;\r\n\r\n\r\n        let parts = url.split(\"/\");\r\n        this.route = parts[0];\r\n        url = parts[1];\r\n\r\n        const _self = this;\r\n        url_obj.searchParams.forEach(function(value, key) {\r\n            _self.params[key] = (value.indexOf(\",\") > -1) ? value.split(\",\") : value;\r\n        });\r\n\r\n        parts = url.split(\"-to-\");\r\n        if (parts.length > 1) {\r\n            this.to = parts[1];\r\n            url = parts[0];\r\n        }\r\n\r\n       \r\n        parts = url.split(\"-\");\r\n        let key = parts[parts.length - 1];\r\n        if (key == \"first\") {\r\n            this.key = key;\r\n            parts.pop();\r\n        } else if (!isNaN(key)) {\r\n            this.key = key;\r\n            parts.pop();\r\n        }\r\n            \r\n        if (parts.length == 0) {\r\n            throw new Error(\"Can't convert this url string: \" + url);\r\n        }\r\n    \r\n        this.state = \"get\";\r\n        for(let i in this.action_map) {\r\n            if (this.action_map[i] == \"-\" + parts[parts.length - 1]) {\r\n                this.state = i\r\n                parts.pop();\r\n                break;\r\n            }\r\n        }\r\n        this.model = parts.join(\"-\");\r\n    }\r\n\r\n    getAll() {\r\n        return {\r\n            route : this.route,\r\n            model : this.model,\r\n            state : this.state,\r\n            key : this.key,\r\n            to : this.to,\r\n            params : this.params,\r\n            base : this.base,\r\n            default : this.default\r\n        };\r\n    }\r\n\r\n    apply(route) {\r\n        for(let i in route) {\r\n            this[i] = route[i];\r\n        }\r\n    }\r\n}\r\n\r\n","<template>\r\n  <a class=\"ptj-button\" :key=\"route\" @click=\"run\">\r\n    <slot />\r\n  </a> \r\n</template>\r\n\r\n<script setup>\r\n\r\n\r\nimport { redirect, Map } from \"./../js/route.js\"\r\n\r\nconst props = defineProps({\r\n    route : Object\r\n});\r\n\r\n\r\nfunction run() {\r\n    for(let i in props.route) {\r\n        Map[i] = props.route[i];\r\n    }\r\n    redirect();\r\n}\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n    <div class=\"ptj-multiple-select\">\r\n        <div class=\"ptj-multiple-select-display\">\r\n            <div class=\"ptj-multiple-select-values\">\r\n                <div class=\"ptj-multiple-select-val\" v-for=\"val in field.change1\" :key=\"val\">\r\n                    {{ val }}\r\n                    <a class=\"ptj-multiple-select-val-remove\" @click=\"remove(val)\"><span class=\"material-icons\">close</span></a>\r\n                </div>\r\n            </div>\r\n            <input type=\"text\" v-model=\"custom_val\" />\r\n            <a @click=\"selectCustom\">add</a>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script setup>\r\n\r\nimport { ref } from \"vue\"\r\n\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n});\r\n\r\nconst custom_val = ref(\"\");\r\n\r\nfunction remove(key) {\r\n    props.field.change = props.field.change.filter(function(item) {\r\n        return item !== key\r\n    });\r\n}\r\n\r\nfunction selectCustom() {\r\n    props.field.change1 = custom_val.value;\r\n    custom_val.value = \"\";\r\n}\r\n\r\n\r\n</script>\r\n<style scoped>\r\n.ptj-multiple-select-val {\r\n    display : inline-block;\r\n    border : 1px solid green;\r\n    margin-left : 2px;\r\n    margin-right : 2px;\r\n    padding : 2px;\r\n    background-color : green;\r\n}\r\n\r\n\r\n.ptj-multiple-select-val-remove {\r\n    color : red;\r\n}\r\n\r\n\r\n.ptj-multiple-select-display {\r\n    position :relative;\r\n    background-color : #fff;\r\n    border : 1px solid #cdcdcd;\r\n    min-height : 35px;\r\n\r\n}\r\n\r\n</style>","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","<template>\r\n    <div class=\"ptj-multiple-select\">\r\n        <div class=\"ptj-multiple-select-display\">\r\n            <div class=\"ptj-multiple-select-values\">\r\n                <div class=\"ptj-multiple-select-val\" v-for=\"val in field.change\" :key=\"val\">\r\n                    {{ field.getOption(val) }}\r\n                    <a class=\"ptj-multiple-select-val-remove\" @click=\"remove(val)\"><span class=\"material-icons\">close</span></a>\r\n                </div>\r\n            </div>\r\n            <a class=\"ptj-multiple-select-arrow\" @click=\"toggleList\">\r\n            <span class=\"material-icons\">{{ show_list.symbol }}</span>\r\n            </a>\r\n        </div>\r\n        <ul class=\"ptj-multiple-select-options\" v-show=\"show_list.display\" @click=\"select\">\r\n            <li v-for=\"option in field.options\" :key=\"option.key\" :data-key=\"option.key\">{{ option.value }}</li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n<script setup>\r\n\r\nimport { reactive, onMounted } from \"vue\"\r\nimport { Map } from \"./../js/route.js\"\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n});\r\n\r\nonMounted(() => {\r\n    if (props.field.reference) {\r\n        let url = \"/reference/\" + Map.model + \"/\" + props.field.name;\r\n        props.field.setReferenceOptions(url, {\"--parentid\":Map.key});\r\n    }\r\n});\r\n\r\n\r\nconst show_list = reactive({\r\n    display : false,\r\n    symbol : 'keyboard_arrow_down'\r\n});\r\n\r\n\r\nfunction toggleList() {\r\n    if (show_list.display) {\r\n        show_list.display = false;\r\n        show_list.symbol = 'keyboard_arrow_down';\r\n    } else {\r\n        show_list.display = true;\r\n        show_list.symbol = 'keyboard_arrow_up';\r\n    }\r\n}\r\n\r\n\r\nfunction remove(key) {\r\n    props.field.change = props.field.change.filter(function(item) {\r\n        return item !== key\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction select(e) {\r\n    props.field.change1 = e.target.getAttribute(\"data-key\");\r\n    toggleList();\r\n}\r\n</script>\r\n<style scoped>\r\n.ptj-multiple-select-val {\r\n    display : inline-block;\r\n    border : 1px solid green;\r\n    margin-left : 2px;\r\n    margin-right : 2px;\r\n    padding : 2px;\r\n    background-color : green;\r\n}\r\n\r\n\r\n.ptj-multiple-select-val-remove {\r\n    color : red;\r\n}\r\n\r\n.ptj-multiple-select-arrow {\r\n    position :absolute;\r\n    right : 2px;\r\n    top : 3px;\r\n}\r\n\r\n.ptj-multiple-select-display {\r\n    position :relative;\r\n    background-color : #fff;\r\n    border : 1px solid #cdcdcd;\r\n    min-height : 35px;\r\n\r\n}\r\n\r\n.ptj-multiple-select-options li {\r\n    list-style: none;\r\n    cursor: pointer;\r\n    margin-top : 2px;\r\n    border : 1px solid #cdcdcd;\r\n    background-color : #fff;\r\n}\r\n\r\n.ptj-multiple-select-options li:hover {\r\n    background-color : #f9f9fb;\r\n    transition : background-color .2s ease-out,border .2s ease-out;\r\n}\r\n</style>","<template>\r\n   <textarea v-if=\"tag=='textarea' && ctype=='edit'\"\r\n        v-bind=\"atts\" \r\n        :name=\"field.name\" \r\n        v-model=\"field.change\"></textarea>\r\n   <div v-else-if=\"tag=='textarea' && ctype=='view'\">{{ field.val }}</div>\r\n   <ptj-multiple-select v-else-if=\"tag=='select' && ctype == 'filter'\" :field=\"field\" />\r\n  <select v-else-if=\"tag=='select' && ctype=='edit'\" \r\n        v-model=\"field.change\"\r\n        :name=\"field.name\"\r\n        v-bind=\"atts\"\r\n         @blur=\"field.validateon = true\"\r\n        >\r\n        <option value=\"\" selected disabled>Select Option</option>\r\n        <option v-for=\"option in options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <input v-else-if=\"ctype=='edit'\" v-bind=\"atts\"\r\n        :name=\"field.name\"\r\n        v-model=\"field.change\" \r\n        @blur=\"field.validateon = true\" />\r\n   <ptj-multiple-input :field=\"field\" v-else-if=\"ctype=='filter'\"/>\r\n  <span v-else-if=\"ctype=='view' && field.reference\">\r\n    <ptj-button :route=\"{model : field.reference, key : field.val, state:'primary' }\">{{ field.val }}</ptj-button>\r\n  </span>\r\n  <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n<script setup>\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjMultipleInput from \"./ptj-multiple-input.vue\"\r\nimport PtjMultipleSelect from \"./ptj-multiple-select.vue\"\r\n\r\nimport { computed } from \"vue\"\r\nconst props = defineProps({\r\n    field : {\r\n        type : Object,\r\n        required : true\r\n    },\r\n    type : {\r\n        type : String,\r\n        default : 'view'\r\n    }\r\n});\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n\r\nfunction isEnum(contains) {\r\n    if (contains.length == 0) return null;\r\n    let enums=[];\r\n    const regEx = new RegExp(/^[a-zA-Z]+[a-zA-Z0-9._]+$/);\r\n    for(let exp of contains) {\r\n        if (!exp) continue;\r\n        if (regEx.test(exp)) {\r\n            enums.push(exp);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    return enums;\r\n}\r\n\r\nconst tag = computed(() => {\r\nif (isEnum(props.field.contains)) {\r\n    return \"select\";\r\n} else if (props.field.encrypted) {\r\n    return \"input\";\r\n} else if (props.field.html || props.field.max > 300) {\r\n    return \"textarea\";\r\n} else {\r\n    return \"input\";\r\n}\r\n});\r\n\r\nconst options = computed(() => {\r\nlet options = [];\r\nfor(let exp of props.field.contains) {\r\n    options.push({ key : exp, value : exp});\r\n}\r\nreturn options;\r\n});\r\n\r\nconst atts = computed(() => {\r\nlet atts = {};\r\nif (props.field.encrypted) {\r\n    atts.type = \"password\";\r\n}\r\n\r\nif (props.field.atts.readonly) {\r\n    atts.readonly = true;\r\n}\r\n\r\nif (props.field.atts.placeholder) {\r\n    atts.placeholder = field.meta.placeholder;\r\n}\r\n\r\nif (props.field.atts.html) {\r\n    atts[\"data-html\"] = 1;\r\n}\r\nreturn atts;\r\n});\r\n\r\n\r\n</script>\r\n","import { reactive } from \"vue\"\r\nimport { refresh } from \"./route.js\"\r\nimport Client from \"./client.js\"\r\n\r\nexport const User = reactive({init : false, login : false, user : \"public\" });\r\n\r\nexport function logout() {\r\n    Client.post(\"/core/logout\")\r\n    .then(() => {\r\n        refresh();\r\n    });\r\n}\r\n\r\n\r\nconst user_check = 600000;\r\n\r\nexport function checkLoginStatus() {\r\n    Client.get(\"/core/check-user\")\r\n    .then(response => {\r\n        if (response.is_expired) {\r\n            return Client.put(\"/core/switch-tokens\")\r\n            .then(() => {\r\n                checkLoginStatus();\r\n            });\r\n        }\r\n        if (!User.init) {\r\n            User.user = response.user;\r\n            User.role = response.role;\r\n            User.init = true;\r\n            /*if (user.user != \"public\") {\r\n                return Client.post(\"/route/\" + user.user + \"/\" + user.user + \"/login\")\r\n                .then(response => {\r\n                    let meta = new MetaRow();\r\n                    meta.map(response.fields);\r\n                    register_data.applyMetaRow(meta);\r\n                });\r\n            }*/\r\n        }\r\n    }).then(response => {\r\n        if (User.user != \"public\") setTimeout(checkLoginStatus, user_check);\r\n    }).catch(e => {\r\n        User.login = true;\r\n    });\r\n}\r\n\r\n","<template>\r\n    <div class=\"ptj-slug-trail\">\r\n        <ptj-button v-for=\"trail in trails\" :key=\"trail.id\" :route=\"trail.route\">{{ trail.value }}</ptj-button>\r\n    </div>\r\n</template>\r\n<script setup>\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport { ref, onMounted } from \"vue\"\r\nimport client from \"./../js/client.js\"\r\nimport { Map } from \"./../js/route.js\"\r\n\r\nconst trails = ref([]);\r\n\r\nconst init = async() => {\r\n    trails.value.splice(0);\r\n    return client.get(\"/slug/\" + Map.route + \"/\" + Map.model + \"/\" + Map.key)\r\n    .then(response => {\r\n        for(let i in response) {\r\n            let values = [];\r\n            for(let x in response[[i]]) {\r\n                if (x == \"--id\") {\r\n                    continue;\r\n                }\r\n                values.push(response[i][x]);\r\n            }\r\n            trails.value.push({\r\n                id : response[i][\"--parentid\"],\r\n                model : response[i].model\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nonMounted(async () => {\r\n   // await init();\r\n});\r\n\r\n</script>","class PTJDragNDrop {\r\n\r\n    constructor(props = {}) {\r\n        this._handle = props.handle;\r\n        this._drop_target = props.drop_target;\r\n        this._drag_target = props.drag_target;\r\n        this._call_back = props.callback;\r\n        this._x = 0;\r\n        this._y = 0;\r\n        this._offset_x = 0;\r\n        this._offset_y = 0;\r\n        this._judder = (props.judder) ? props.judder : 5;\r\n        this._drag_node;\r\n        this._drop_node;\r\n        this._tree = props.tree;\r\n    }\r\n\r\n    isJudder(x, y) {\r\n        const dx = x - this._x;\r\n        const dy = y - this._y;\r\n      \r\n        if (dx < -5 || dx > 5) return false;\r\n        else if (dy < -5 || dy > 5) return false;\r\n        else return true;\r\n    }\r\n\r\n    getDirection(x, y) {\r\n        const dir_x = (x == this._x) ? 0 : (x > this._x) ? 1 : -1;\r\n        const dir_y = (y == this._y) ? 0 : (y > this._y) ? 1 : -1;\r\n      \r\n        return { x : dir_x, y : dir_y };\r\n    }\r\n\r\n    offset(elem) {\r\n        var rect = elem.getBoundingClientRect();\r\n        var win = elem.ownerDocument.defaultView;\r\n\r\n        return {\r\n            top: rect.top + win.pageYOffset,\r\n            left: rect.left + win.pageXOffset\r\n        };\r\n    }\r\n\r\n    insertAfter() {\r\n        let drag_id = this._drag_node.getAttribute(\"id\");\r\n        let drop_id = this._drop_node.getAttribute(\"id\");\r\n\r\n        let circular = 0;\r\n        let sort = 0;\r\n        if (this._drop_node.nextElementSibling) {\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drop_id) {\r\n                    circular = node.circular;\r\n                    sort = node.sort;\r\n                    break;\r\n                } \r\n            }\r\n\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drag_id) {\r\n                    node.circular = circular;\r\n                    node.sort = sort + 1;\r\n                } else if (node.circular == circular && node.sort > sort) {\r\n                    ++node.sort;\r\n                }\r\n            }\r\n        } else {\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drag_id) {\r\n                    node.circular = circular;\r\n                    node.sort = 0;\r\n                } \r\n            }\r\n        }\r\n    }\r\n\r\n    insertBefore() {\r\n        let drag_id = this._drag_node.getAttribute(\"id\");\r\n        let drop_id = this._drop_node.getAttribute(\"id\");\r\n\r\n        let circular = 0;\r\n        let sort = 0;\r\n        for(let i in this._tree) {\r\n            let node = this._tree[i];\r\n            if (node.id == drop_id) {\r\n                circular = node.circular;\r\n                sort = node.sort;\r\n                ++node.sort;\r\n                break;\r\n            } \r\n        }\r\n\r\n        for(let i in this._tree) {\r\n            let node = this._tree[i];\r\n            if (node.id == drag_id) {\r\n                node.circular = circular;\r\n                node.sort = sort;\r\n            } else if (node.circular == circular && node.sort > sort) {\r\n                ++node.sort;\r\n            }\r\n        }\r\n    }\r\n\r\n    dragStart(ev) {\r\n        const targ = ev.target.closest('[id]');\r\n        this._drag_node = targ;\r\n        const { top, left } = this.offset(targ);\r\n\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n\r\n        this._x = ev.clientX;\r\n        this._y = ev.clientY;\r\n    \r\n        this._offset_x = ev.clientX - left;\r\n        this._offset_y = ev.clientY - top;\r\n    }\r\n\r\n    isDroppable(ev) {\r\n        let cont = ev.target.closest(this._drop_target);\r\n        return (cont) ? true : false;\r\n    }\r\n\r\n    dragEnter(ev) {\r\n        if (!this.isDroppable(ev)) return true;\r\n        ev.preventDefault();\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n\r\n        this._drop_node = ev.target.closest(this._drag_target);\r\n\r\n        if (!this._drop_node || this._drop_node.getAttribute(\"id\") == this._drag_node.getAttribute(\"id\")) {\r\n            return;\r\n        }\r\n\r\n        const dir = this.getDirection(ev.clientX, ev.clientY);\r\n\r\n        if (dir.y == 1) {\r\n            this.insertAfter();\r\n        } else if (dir.y == -1) {\r\n            this.insertBefore();\r\n        }\r\n        this._x = ev.clientX;\r\n        this._y = ev.clientY;\r\n    }\r\n\r\n    dragOver(ev) {\r\n        if (!this.isDroppable(ev)) return true;\r\n        ev.preventDefault();\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n    }\r\n\r\n\r\n    dragEnd() {\r\n        if (this._drag_node) this._drag_node.setAttribute(\"draggable\", false);\r\n        this._drag_node = null;\r\n    }\r\n\r\n    drop(ev) {\r\n        if (!this._drop_node) return true;\r\n        ev.preventDefault();\r\n        if (this._call_back) this._call_back(this._tree);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction initDD(props) {\r\n    let drag = new PTJDragNDrop(props);\r\n    let handles = document.querySelectorAll(props.handle);\r\n    handles.forEach(el => el.addAttribute(\"draggable\", true));\r\n\r\n    if (props.handle) {\r\n\r\n        let handles = document.querySelectorAll(props.handle);\r\n\r\n        handles.forEach(el => {\r\n            el.addEventListener(\"mousedown\", e => {\r\n                let cont = e.target.closest(props.drag_target);\r\n                cont.addAttribute(\"draggable\", true);\r\n            });            \r\n        });\r\n    }\r\n\r\n    props.main.addEventListener(\"dragstart\", e => drag.dragStart(e));\r\n    props.main.addEventListener(\"dragenter\", e => drag.dragEnter(e));\r\n    props.main.addEventListener(\"dragover\", e => drag.dragOver(e));\r\n    props.main.addEventListener(\"drop\", e => drag.drop(e));\r\n    props.main.addEventListener(\"dragend\", e => drag.dragEnd(e));\r\n}\r\n\r\nexport default {\r\n    initDD\r\n}","const error_invalid_map = {\r\n            1 : \"too small\",\r\n            2 : \"too large\",\r\n            3 : \"contains incorrect characters\",\r\n            4 : \"doesn't contain required characters\",\r\n            5 : \"not unique\"\r\n}\r\n\r\nexport function getError(code) {\r\n    return error_invalid_map[code];\r\n}\r\n\r\nexport const Errors = {\r\n    OK : 0,\r\n    MIN_VALUE : 1,\r\n    MAX_VALUE : 2,\r\n    HAS : 3,\r\n    HAS_NOT : 4\r\n}\r\n","\r\nimport { Errors } from \"./error.js\"\r\nimport { reactive, computed } from \"vue\"\r\nimport Client from \"./client.js\"\r\n\r\n\r\nexport class Field {\r\n\r\n    constructor(name, obj = null) {\r\n        this._name = name;\r\n        this._type = \"\";\r\n        this._atts={}\r\n        this._confirm = false;\r\n        this._reference = \"\";\r\n        this._label = \"\";\r\n        this._store = reactive({ summary : 0, options : []});\r\n        this._default_val = null;\r\n        this._immutable = false;\r\n        this._encrypted = false;\r\n        this._min = null;\r\n        this._max = null;\r\n        this._contains = [];\r\n        this._notcontains = [];\r\n        this._recursive = false;\r\n        this._error = {\r\n            'OK' : 0,\r\n            'MIN_VALUE' : 1,\r\n            'MAX_VALUE' : 2,\r\n            'HAS' : 3,\r\n            'HAS_NOT' : 4\r\n        }\r\n\r\n        const keys = Object.keys(this);\r\n       \r\n        keys.forEach(property => {\r\n          if (property != \"_store\" && property[0] == \"_\") {\r\n            Object.defineProperty(this, property.substring(1), {\r\n                get: function() { \r\n                   return this[property];\r\n                },\r\n                set: function(newValue) {\r\n                    if (property == \"_type\") this._type = newValue.toLowerCase();\r\n                    else this[property] = newValue;\r\n                }\r\n            })\r\n          }\r\n        });\r\n      \r\n      \r\n        this.summary = computed({\r\n            get : () => {\r\n                return this._store.summary;\r\n            },\r\n            set : (val) => {\r\n                this._store.summary = (val) ? 1 : 0;\r\n            }\r\n        })\r\n\r\n        this.options = computed({\r\n            get : () => {\r\n                return this._store.options;\r\n            },\r\n            set : (options) => {\r\n                this._store.options = options;\r\n            }\r\n        });\r\n\r\n       \r\n        if (obj) {\r\n            for (let x in obj) {\r\n                if (x == \"summary\") this.summary = (obj[x]) ? 1 : 0;\r\n                else if (x == \"validation\") continue;\r\n                else if (x == \"type\") this.type = obj[x].toLowerCase();\r\n                else this[\"_\" + x] = obj[x];\r\n            }\r\n\r\n            this._min = obj.validation.min;\r\n            this._max = obj.validation.max;\r\n            if (obj.validation.contains) this._contains = obj.validation.contains.split(\"|\");\r\n            if (obj.validation.notcontains) this._notcontains = obj.validation.notcontains.split(\"|\");\r\n        }\r\n    }\r\n\r\n\r\n    getOption(key) {\r\n        for(let opt of this._store.options) {\r\n            if (opt.key == key) return opt.value;\r\n        }\r\n    }\r\n\r\n    setReferenceOptions(url, params) {\r\n        this._store.options = [];\r\n        return Client.get(url, params)\r\n        .then(response => {\r\n            for (let i in response) {\r\n                let key = response[i][\"--id\"];\r\n                let vals = [];\r\n                for(let x  in response[i]) {\r\n                    if (x != \"--id\") {\r\n                        vals.push(response[i][x]);\r\n                    }\r\n                }\r\n                this._store.options.push({ key: key, value: vals.join(\" \", vals) });\r\n            }\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    clean(val) {\r\n        if (this._type == \"checkbox\") return (val) ? 1 : 0;\r\n        else return val;\r\n    }\r\n\r\n\r\n    calcValue(value) {\r\n        if (!value) return \"\";\r\n        else return value;\r\n    }\r\n\r\n\r\n    validateSize(val) {\r\n        if (val < this._min) return Errors.MIN_VALUE;\r\n        else if (val > this._max) return Errors.MAX_VALUE;\r\n        else return Errors.OK;\r\n    }\r\n\r\n\r\n    validate(val) {\r\n        if (val === null) return;\r\n        let err;\r\n        if (isNaN(val)) {\r\n            const length = (val) ? val.length : 0;\r\n            err = this.validateSize(length);\r\n        } else {\r\n            err = this.validateSize(val);\r\n        }\r\n        if (err != Errors.OK) return err;\r\n\r\n        for(let nhas of this._notcontains) {\r\n            if (val.match(nhas)) return Errors.HAS_NOT;\r\n        }\r\n\r\n        if (this._contains.length == 0) return Errors.OK;\r\n        \r\n        for(let has of this._contains) {\r\n            if (val.match(has)) return Errors.OK;\r\n        }\r\n        return Errors.HAS;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Field } from \"./field.js\"\r\nimport { Asset } from \"./asset.js\"\r\nimport { reactive } from \"vue\"\r\n\r\nexport class MetaRow {\r\n\r\n    constructor() {\r\n        this._cells = {};\r\n        this._children = {};\r\n        this._states = {};\r\n        this._limit = 0;\r\n        this._page = 0;\r\n        this._sort = {};\r\n        this._groups = [];\r\n        this._active = 0;\r\n        this._max_pages = 0;\r\n        this._count = 0;\r\n        this._limited_fields = [];\r\n        this._init = false;\r\n        this._store = reactive({index : null});\r\n      \r\n        const keys = Object.keys(this);\r\n\r\n        keys.forEach(property => {\r\n          if (property[0] == \"_\") {\r\n            Object.defineProperty(this, property.substring(1), {\r\n                get: function() { \r\n                    return this[property];\r\n                },\r\n                set: function(newValue) {\r\n                    this[property] = newValue;\r\n                }\r\n            });\r\n          } \r\n        });\r\n    }\r\n\r\n\r\n    addChild(name, child) {\r\n        this._children[name] = child;\r\n    }\r\n\r\n    addState(name, action) {\r\n        this._actions[name] = action;\r\n    }\r\n\r\n\r\n    convertToParams() {\r\n        let obj = {};\r\n        if (this._limit) obj._limit = this._limit;\r\n        if (this._page) obj._page = this._page;\r\n        if (this._limited_fields.length > 0) obj._fields = this._limited_fields;\r\n        if (Object.keys(this._sort).length > 0) obj._sort = this._sort;\r\n        return obj;\r\n    }\r\n\r\n    resetSummary(arr) {\r\n\r\n        for(let i in this._cells) {\r\n            this._cells[i].summary = false;\r\n        }\r\n        \r\n        for(let i in arr) {\r\n            if (this._cells[arr[i]]) {\r\n                this._cells[arr[i]].summary = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    mapField(field, obj) {\r\n        this._cells[field] = new Field(field, obj);\r\n        if (this._cells[field].recursive) this._store.index = field;\r\n    }\r\n\r\n    map(fields, custom_fields = []) {\r\n        if (custom_fields.length > 0) {\r\n            for(let field of custom_fields) {\r\n                this.mapField(field, fields[field]);\r\n            }\r\n        } else {\r\n            for (let i in fields) {\r\n                this.mapField(i, fields[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    getCellByType(type) {\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].type == type) cells[i] = this._cells[i];\r\n        }\r\n        return cells;\r\n    }\r\n\r\n\r\n    applyMap(map) {\r\n        if (map.key == \"first\") this._limit = 1;\r\n        else if (map.key) this._key = map.key;\r\n\r\n        if (map.param_str) {\r\n            const obj = JSON.parse(map.param_str);\r\n            if (obj._limit) this._limit = obj._limit;\r\n            if (obj._fields) this._cells = obj._fields;\r\n            if (obj.hasOwnProperty(\"_page\")) this._page = obj._page;\r\n            if (obj.hasOwnProperty(\"_sort\")) this._sort = obj._sort;\r\n            for(const i in this._cells) {\r\n                if (obj.hasOwnProperty(i)) this._cells[i].setVal(obj[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    applySettings(settings) {\r\n        \r\n        if (settings.groups) {\r\n           this._groups = settings.groups;\r\n        }\r\n     \r\n        if (settings.limit) {\r\n            this._limit = settings.limit;\r\n        }\r\n    }\r\n}","import { reactive, computed } from \"vue\"\r\nimport { getError } from \"./error.js\"\r\n\r\nexport class DataCell {\r\n\r\n    constructor(meta) {\r\n        this._meta = meta;\r\n        this._store = reactive({ value: null, change: null, display: null, error: 0, is_validate_on: false });\r\n\r\n\r\n        const meta_keys = Object.getOwnPropertyNames(this._meta);\r\n        const keys = Object.keys(this);\r\n\r\n        meta_keys.forEach(property => {\r\n            if (property[0] != \"_\" && !keys.includes(property)) {\r\n                Object.defineProperty(this, property, {\r\n                    get: function () {\r\n                        return this._meta[property];\r\n                    },\r\n                    set: function (newValue) {\r\n                        this._meta[property] = newValue;\r\n                    }\r\n                })\r\n            }\r\n        });\r\n\r\n\r\n        this.error = computed({\r\n            get: () => { getError(this._store.error); },\r\n            set: val => { this._store.error = val }\r\n        });\r\n\r\n        this.showError = computed(() => {\r\n            return this._store.is_validate_on && this._store.error ? true : false;\r\n        });\r\n\r\n        if (this._meta.default_val) this._store.value = this._meta.default_val;\r\n        else if (this._meta.type == \"select\") this._store.value = 0;\r\n\r\n        this.val = computed({\r\n            get: () => {\r\n                return this._store.value;\r\n            },\r\n            set: (val) => {\r\n                this._store.value = this._meta.clean(val);\r\n                this._store.error = this._meta.validate(val);\r\n            }\r\n        });\r\n\r\n        this.change = computed({\r\n            get: () => {\r\n                if (this._store.change == null) return this._store.value;\r\n                else return this._store.change;\r\n            },\r\n            set: (val) => {\r\n                this._store.change = this._meta.clean(val);\r\n                this._store.error = this._meta.validate(val);\r\n            }\r\n        });\r\n\r\n        this.addParam = obj => {\r\n            if (this._store.value!== null) {\r\n                obj[this.name] = this._store.value;\r\n            }\r\n        }\r\n\r\n        if (this.type == \"time\") {\r\n\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.min;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null };\r\n                    this._store.change.min = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.change2 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.max;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null };\r\n                    this._store.change.max = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value!= null) {\r\n                    obj[this.name] = this._store.value;\r\n                }\r\n            }\r\n\r\n        } else if (this.type == \"flag\") {\r\n\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (this._store.change == null) return 0;\r\n                    else if (!this._store.change) return 2;\r\n                    else return this._store.change;\r\n                },\r\n                set: (val) => {\r\n                    if (val == 0) {\r\n                        this._store.change = null;\r\n                        return;\r\n                    }\r\n                    if (val == 2) val = 0;\r\n                    this._store.change = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value!= null) {\r\n                    obj[this.name] = this._store.value;\r\n                }\r\n            }\r\n\r\n        } else if (this.type == \"id\") {\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    let val = (this._store.change == null) ? [] : this._store.change;\r\n                    return val;\r\n                },\r\n                set: (val) => {\r\n                    if (this._store.change == null) this._store.change = [];\r\n                    if (this._store.change.includes(val)) return;\r\n                    this._store.change.push(this._meta.clean(val));\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value!= null) {\r\n                    obj[this.name] = this._store.value;\r\n                }\r\n            }\r\n\r\n            \r\n        } else if (this.type == \"number\") {\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.min;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null }\r\n                    this._store.change.min = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.change2 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.max;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null }\r\n                    this._store.change.max = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value!= null) {\r\n                    obj[this.name] = this._store.value;\r\n                }\r\n            }\r\n\r\n        } else if (this.type == \"string\") {\r\n\r\n            this.change = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) return \"\";\r\n                    else return this._store.change;\r\n                },\r\n                set: (val) => {\r\n                    this._store.change = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (this._store.change == null) return [];\r\n                    else return this._store.change;\r\n                },\r\n                set: (val) => {\r\n                    if (this._store.change == null) this._store.change = [];\r\n                    this._store.change.push(this._meta.clean(val));\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value!= null) {\r\n                    obj[this.name] = [];\r\n                    for(let i in this._store.value) {\r\n                        obj[this.name].push(\"%\" + this._store.value[i] + \"%\");\r\n                    }\r\n                }\r\n            }\r\n\r\n        } \r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n\r\n    get meta() {\r\n        return this._meta;\r\n    }\r\n\r\n    set validateon(on) {\r\n        this._store.is_validate_on = on;\r\n    }\r\n\r\n    set display(display) {\r\n        this._store.display = display;\r\n    }\r\n\r\n    get display() {\r\n        if (this._store.display) return this._store.display;\r\n        else return this._store.value;\r\n    }\r\n\r\n    get store() {\r\n        return this._store;\r\n    }\r\n\r\n    toString() {\r\n        return this._store.display;\r\n    }\r\n\r\n    isSummary() {\r\n        return this._meta.summary;\r\n    }\r\n\r\n    setReferenceOptions(url, params) {\r\n        this._meta.setReferenceOptions(url, params);\r\n    }\r\n\r\n    reset() {\r\n        this._store.change = null;\r\n    }\r\n\r\n    getOption(key) {\r\n        if (this._meta.type == 'string') return key;\r\n        else return this._meta.getOption(key);\r\n    }\r\n}\r\n","import { DataCell } from \"./datacell.js\"\r\nimport { reactive, computed, ref } from \"vue\"\r\n\r\n\r\nexport class DataRow {\r\n\r\n    constructor(metarow) {\r\n        this._metarow = metarow;\r\n        this._cells = reactive({});\r\n        this._children = {};\r\n        \r\n        \r\n\r\n\r\n        if (metarow) {\r\n            this.applyMetaRow(metarow);\r\n        }\r\n\r\n        this.cells = computed(() => {\r\n            return this._cells;\r\n        });\r\n        \r\n    }\r\n\r\n    \r\n\r\n    set children(children) {\r\n        this._children = children;\r\n    }\r\n\r\n    get children() {\r\n        return this._children;\r\n    }\r\n\r\n    get primary() {\r\n        return this._cells[\"--id\"];\r\n    }\r\n\r\n    get parent() {\r\n        return this._cells[\"--parentid\"];\r\n    }\r\n\r\n\r\n    clone() {\r\n        const data = new DataRow(this._metarow);\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            cells[i].val = this._cells[i].val;\r\n        }\r\n    \r\n        let children = {};\r\n        for(let i in data.children) {\r\n            children[i] = data.children[i].clone();\r\n        }\r\n        data.children = children;\r\n        return data;\r\n    }\r\n\r\n    \r\n    applyMetaRow(metarow) {\r\n        for(const i in metarow.cells) {\r\n            const field = metarow.cells[i];\r\n            this._cells[field.name] = new DataCell(field);\r\n        }\r\n\r\n        for(const i in metarow.children) {\r\n            this._children[i] = metarow.children[i];\r\n        }\r\n    }\r\n\r\n\r\n    addChild(name, child) {\r\n        if (!this._children[name]) {\r\n            this._children[name] = [];\r\n        }\r\n        this._children[name].push(child);\r\n    }\r\n\r\n    set row(row) {\r\n        if (!row) return;\r\n\r\n        for(let field in this._cells) {\r\n            if (row.hasOwnProperty(field)) this._cells[field].val = row[field];\r\n        }\r\n\r\n        for(let child in this._children) {\r\n            this._children[child].row = row[child];\r\n        }\r\n    }\r\n\r\n\r\n    getSummary() {\r\n        let str = [];\r\n        for(let i in this._cells) {\r\n            const cell = this._cells[i];\r\n            if (cell.isSummary()) {\r\n                const display = cell.display;\r\n                str.push(display);\r\n            }\r\n        }\r\n        return str.join(\" \");\r\n    }\r\n\r\n    toString() {\r\n        let str = [];\r\n        for(let i in this._cells) {\r\n            str.push(this._cells[i].display);\r\n        }   \r\n        return str.join(\" \");\r\n    }\r\n\r\n\r\n    serialize(changes_only = false) {\r\n        let data = {};\r\n        for(let i in this._cells) {\r\n            if (changes_only) {\r\n                if (this._cells[i].change != this._cells[i].val) {\r\n                    data[i] = this._cells[i].change;\r\n                }\r\n            } else {\r\n                if (this._cells[i].change != null) data[i] = this._cells[i].change;\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n\r\n    getCellByType(type) {\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].type == type) cells[i] = this._cells[i];\r\n        }\r\n        return cells;\r\n    }\r\n\r\n    clearErrors() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].error = 0;\r\n        }\r\n    }\r\n\r\n\r\n    reset() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].error = 0;\r\n            this._cells[i].change = null;\r\n        }\r\n    }\r\n\r\n    setErrors(err) {\r\n        for(let i in err) {\r\n            if (i.indexOf(\"__\") === 0) continue;\r\n            if (this._cells[i]) {\r\n                this._cells[i].error = err[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    convertToParams() {\r\n        let obj = {};\r\n        for(let i in this._cells) {\r\n            this._cells[i].addParam(obj);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    convertToAPIParams() {\r\n        let obj = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].type == \"asset\") continue;\r\n            this._cells[i].addAPIParam(obj);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    applyChangeData() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].val = this._cells[i].change;\r\n        }\r\n    }\r\n\r\n}","import Settings from \"./settings.js\"\r\nimport { MetaRow } from \"./metarow.js\"\r\nimport { DataRow } from \"./datarow.js\"\r\nimport { Map } from \"./route.js\"\r\nimport { reactive } from \"vue\"\r\nimport client from \"./client.js\"\r\n\r\nconst settings = Settings.getModelSettings(Map.model, Map.state);\r\nexport const RepoStore = reactive({meta : new MetaRow, data : [], indexes : {}, search : new DataRow() });\r\n\r\nif (settings.fields) RepoStore.meta.limited_fields = settings.fields;\r\n\r\nfunction mapSearchData() {\r\n\r\n}\r\n\r\nfunction indexData() {\r\n    RepoStore.indexes = {};\r\n    \r\n    for(const key in RepoStore.data) {\r\n        const row = RepoStore.data[key];\r\n        let ckey = row.cells[RepoStore.meta.store.index].val;\r\n        if (!RepoStore.indexes[ckey]) RepoStore.indexes[ckey] = [];\r\n        RepoStore.indexes[ckey].push(key);\r\n    }\r\n}\r\n\r\n\r\nfunction mapRepoData(response) {\r\n    RepoStore.data = [];\r\n    for (const i in response) {\r\n        let obj= new DataRow(RepoStore.meta);\r\n        obj.row = response[i];\r\n        RepoStore.data.push(obj);\r\n    }\r\n}\r\n\r\n\r\nexport const loadRepo = async() => {\r\n    let params = { ...RepoStore.meta.convertToParams(), ...RepoStore.search.convertToParams() };\r\n    RepoStore.meta = new MetaRow();\r\n    RepoStore.data = [];\r\n    RepoStore.indexes = {};\r\n    RepoStore.search = new DataRow();\r\n    if (!params) params = {};\r\n    if (Map.to) params.__to = Map.to;\r\n    if (Map.key) params[\"--parentid\"] = Map.key;\r\n    if (settings.fields) params.__fields = settings.fields;\r\n    let url = \"/\" + Map.route + \"/\" + Map.model;\r\n    if (Map.state == \"parent\") url += \"/parent\";\r\n    return client.get(\"/route\" +url, params)\r\n    .then(response => {\r\n        RepoStore.meta.map(response.fields, settings.fields);\r\n        RepoStore.meta.applyMap(Map);\r\n        RepoStore.meta.applyMap(settings);\r\n        RepoStore.search.applyMetaRow(RepoStore.meta);\r\n        RepoStore.search.row = Map.params;\r\n        RepoStore.meta.init = true;\r\n    }).then(() => {\r\n        params = { ...params, ...RepoStore.search.convertToAPIParams()};\r\n        if (RepoStore.meta.limit > 0) {\r\n            return client.get(\"/data\" + url + \"/count\", params)\r\n            .then(response => {\r\n                RepoStore.meta.count = response.count;\r\n                RepoStore.meta.max_pages = Math.ceil(response.count / RepoStore.meta.limit);\r\n            })\r\n            .then(() => {\r\n                return client.get(\"/data\" + url, params);\r\n            })\r\n            .then(response => {\r\n                mapRepoData(response);\r\n                if (RepoStore.meta.store.index) indexData();\r\n                return response;\r\n            });\r\n        } else {\r\n            return client.get(\"/data\" + url, params)\r\n            .then(response => {\r\n                mapRepoData(response);\r\n                if (RepoStore.meta.store.index) indexData();\r\n                return response;\r\n            });\r\n        }\r\n    })\r\n    .catch(e => console.log(e));\r\n}\r\n","<template >\r\n    <div class=\"ptj-tree-node ptj-draggable\" :id=\"primary\" draggable=\"false\">\r\n        <div class=\"ptj-tree-node-row\">  \r\n            <div>\r\n                <a v-if=\"ischild\" data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle()\">\r\n                    <span class=\"material-icons\">subdirectory_arrow_right</span>\r\n                </a>\r\n                <a v-else data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle()\">\r\n                    <span class=\"material-icons\">keyboard_arrow_right</span>\r\n                </a>\r\n            </div>\r\n            <div v-if=\"RepoStore.meta.sortable\">\r\n                <a data-action=\"more\" class=\"button\" @click=\"prevent.stop\" @mousedown=\"setDraggable\" @mouseup=\"endDraggable\">\r\n                    <span class=\"material-icons\">drag_handle</span>\r\n                </a>\r\n            </div>\r\n            <div>{{ summary }}</div>\r\n            <ptj-button :route=\"{state:'primary', key:primary }\"><span class=\"material-icons\">arrow_forward_ios</span></ptj-button>\r\n        </div>\r\n        <ptj-tree-node v-for=\"(key, index) in children\" :row=\"key\" :ischild=\"true\"  :key=\"index\" v-show=\"store.toggle_state[primary]\" />\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, computed, onMounted } from \"vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport { RepoStore } from \"./../js/repo.js\"\r\n\r\nconst props = defineProps({\r\n    row : { \r\n        type : [String, Number],\r\n        required : true\r\n    },\r\n    draggable : Boolean,\r\n    ischild : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n});\r\n\r\nconst store = reactive({ toggle_state : {}, branch : null });\r\n\r\nfunction toggle() {\r\n    const index = store.branch.primary.val;\r\n    store.toggle_state[index] = (store.toggle_state[index]) ? false : true;\r\n}\r\n\r\nconst children = computed(() => {\r\n    if (!store.branch) return [];\r\n    const id = store.branch.primary.val;\r\n    return (RepoStore.indexes[id]) ? RepoStore.indexes[id] : [];\r\n});\r\n\r\nconst primary = computed(() => {\r\n    if (!store.branch) return 0;\r\n    return store.branch.primary.val;\r\n});\r\n\r\nconst summary = computed(() => {\r\n    if (!store.branch) return \"\";\r\n    return store.branch.getSummary();\r\n});\r\n\r\nonMounted(() => {\r\n    store.branch = RepoStore.data[props.row];\r\n});\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.model-tree.branch {\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  margin: 6px 0;\r\n  background-color:#111111;\r\n}\r\n\r\n.tree .ide-block {\r\n\tdisplay : none;\r\n}\r\n\r\n.dragArea {\r\n  min-height: 50px;\r\n  outline: 1px solid #777777;\r\n}\r\n\r\n\r\n</style>","<template >\r\n  <div class=\"ptj-tree ptj-drop-target'\" ref=\"treeroot\">\r\n    <ptj-tree-node v-for=\"(key, index) in RepoStore.indexes['0']\" :key=\"index\" :row=\"key\"  />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted } from 'vue'\r\nimport PTJDragDrop from \"./../js/dragndrop.js\"\r\nimport PtjTreeNode from \"./ptj-tree-node.vue\"\r\nimport { RepoStore } from \"./../js/repo.js\"\r\n\r\n\r\nonMounted(() => {\r\n    if (RepoStore.meta.sortable) {\r\n        PTJDragDrop.initDD({\r\n            handle : '.ptj-drag-handle',\r\n            drag_target : '.ptj-draggable',\r\n            drop_target : '.ptj-drop-target',\r\n            callback : saveSort\r\n        });\r\n    }\r\n});\r\n\r\n\r\nfunction saveSort() {\r\n\r\n}\r\n\r\n</script>\r\n","<template>\r\n    <input class=\"ptj-checkbox\" type=\"checkbox\" :true-value=\"1\" :false-value=\"0\" :name=\"field.name\" v-model=\"field.change\" v-if=\"ctype=='edit'\">\r\n    <select v-else-if=\"ctype=='filter'\" :name=\"field.name\" v-model=\"field.change1\" class=\"ptj-filter-form-checkbox\">\r\n        <option :value='0'>{{ \"All\" }}</option>\r\n        <option :value='1'>{{ \"Checked\" }}</option>\r\n        <option :value='2'>{{ \"Unchecked\" }}</option>\r\n    </select>\r\n    <a v-else @click=\"submit()\"><span class=\"material-icons\">{{ icon }}</span></a>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from \"vue\"\r\nimport { Map } from \"./../js/route.js\"\r\nimport client from \"./../js/client.js\"\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        type : String,\r\n        default : 'view'\r\n    }\r\n});\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n\r\nfunction submit() {\r\n    let params = {};\r\n    params[\"--id\"] = Map.key;\r\n    params[props.field.name] = (props.field.val == 1) ? 0 : 1;\r\n    if (Map.key) params[\"--id\"] = Map.key;\r\n    return client.put(\"/data/\" + Map.route + \"/\" + Map.model, params)\r\n    .then(() => {\r\n        props.field.val = (props.field.val == 1) ? 0 : 1;\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n\r\nlet icon = computed(() => {\r\n    if (props.field.val == 1) {\r\n        return \"check_circle_outline\";\r\n    } else {\r\n        return \"highlight_off\"\r\n    }\r\n});\r\n</script>","<template>\r\n    <select v-if=\"ctype=='edit'\" \r\n        v-model=\"field.change\"\r\n        v-bind=\"field.atts\"\r\n        :name=\"field.name\"\r\n         @blur=\"field.validateon = true\"\r\n        >\r\n        <option value=\"0\" selected>Select Option</option>\r\n        <option v-for=\"option in field.options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <ptj-multiple-select v-else-if=\"ctype=='filter'\" :field=\"field\" />\r\n  <span v-else>{{ field.getOption(field.val) }}</span>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { computed } from \"vue\"\r\nimport PtjMultipleSelect from \"./ptj-multiple-select.vue\"\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        default : 'view',\r\n        type : String\r\n    }\r\n});\r\n\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n\r\nlet options = computed(() => {\r\n    return props.field.options;\r\n});\r\n\r\n\r\n\r\n</script>","<template>\r\n  <input v-if=\"ctype=='edit'\"\r\n        :name=\"field.name\" \r\n        type=\"datetime-local\" \r\n        v-model=\"field.change\" \r\n        v-bind=\"field.atts\"\r\n        @blur=\"field.validateon = true\">\r\n   <div v-else-if=\"ctype=='filter'\">\r\n      <input \r\n        type=\"datetime-local\" \r\n        :name=\"field.name + 'min'\"\r\n        v-bind=\"field.atts\"\r\n        v-model=\"field.change1\">\r\n        -\r\n        <input \r\n            type=\"datetime-local\" \r\n            :name=\"field.name + 'max'\"\r\n            v-bind=\"field.atts\"\r\n            v-model=\"field.change2\"\r\n        >\r\n   </div>\r\n   <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from \"vue\"\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        default : 'view',\r\n        type : String\r\n    }\r\n});\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n</script>\r\n","<template>\r\n    <table class=\"ptj-table\" :class=\"Map.model\">\r\n    <thead>\r\n        <tr class=\"ptj-table-header\">\r\n        <th v-for=\"cell in RepoStore.meta.cells\" \r\n            v-show=\"cell.summary\" \r\n            :key=\"cell.name\" \r\n            class=\"ptj-table-header-cell\"\r\n            :class=\"cell.name\"\r\n            @click=\"orderBy(cell.name);\"\r\n        >{{ cell.label }}\r\n            <span v-if=\"order.name == cell.name && order.dir == 'asc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_up</span>\r\n            <span v-if=\"order.name == cell.name && order.dir == 'desc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_down</span>\r\n        </th>\r\n        <th class=\"ptj-actions\">&nbsp;</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"(obj, rindex) in RepoStore.data\" :key=\"rindex\" class=\"ptj-table-row\">\r\n        <td v-for=\"(field, name) in obj.cells\" :key=\"name\" v-show=\"field.summary\" class=\"ptj-table-cell\" :class=\"field.meta.name\">\r\n          <ptj-asset v-if=\"field.type=='asset'\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" :field=\"field\" />\r\n          <ptj-id v-else-if=\"field.type=='id'\" :field=\"field\"  />\r\n          <ptj-time v-else-if=\"field.type=='time'\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" :field=\"field\"  />\r\n        </td>\r\n        <td class=\"ptj-actions\" >\r\n            <ptj-button :route=\"{state:'primary', key:obj.cells['--id'].val}\"><span class=\"material-icons\">arrow_forward_ios</span></ptj-button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport { reactive } from \"vue\"\r\nimport { RepoStore } from \"./../js/repo.js\"\r\n\r\n\r\n\r\nlet order = reactive( { name : '', dir : ''});\r\n\r\nfunction orderBy(name) {\r\n    if (RepoStore.meta.pages > 0) {\r\n        order.dir = (!order.name != name || order.dir  == \"desc\") ? \"asc\" : \"desc\";\r\n        order.name = name;\r\n        let sort = [];\r\n        sort[order.name] = order.dir;\r\n        RepoStore.meta.sort = sort;\r\n        load();\r\n    } else {\r\n        //custom sort on the table\r\n        if (order.name != name || order.dir == \"desc\") {\r\n            RepoStore.data.sort(function(x, y) {\r\n                let xval = x.getCell(name).toVal();\r\n                let yval = y.getCell(name).toVal();\r\n                if (xval < yval) {\r\n                    return -1;\r\n                } else if (xval > yval) {\r\n                    return 1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n            order.name = name;\r\n            order.dir = \"asc\";\r\n        } else {\r\n            RepoStore.data.sort(function(x, y) {\r\n                let xval = x.getCell(name).toVal();\r\n                let yval = y.getCell(name).toVal();\r\n                if (xval < yval) {\r\n                    return 1;\r\n                } else if (xval > yval) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n            order.name = name;\r\n            order.dir = \"desc\";\r\n        }\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n</style>","<template>\r\n    <div v-for=\"(combinations, index) in getIndexCombinations\" :key=\"index\">\r\n     <h3><span\r\n        v-for=\"(tag, index) in combinations.tags\"\r\n        :key=\"index\"\r\n        >{{ tag }}&nbsp;</span></h3>\r\n    <ul>\r\n       <li v-for=\"ckey in combinations.data\" :key=\"ckey\">\r\n         <ptj-button :route=\"route\">\r\n          {{  data[ckey].getSummary() }}\r\n         </ptj-button>\r\n       </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { computed, inject } from \"vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\ninject(\"data\");\r\ninject(\"indexes\");\r\n\r\nfunction getCombinations(tag, data, combos) {\r\n    const ncombos = [];\r\n    if (combos.length == 0) {\r\n        for(let d in data) {\r\n        ncombos.push({ tags : [ data[d].display ], data : data[d].contains});\r\n        }\r\n    } else {\r\n        for (let c of combos) {\r\n          for(let d in data) {\r\n            let tags = c.tags;\r\n            tags.push(d.display);\r\n            ncombos.push({ tags : tags, data : c.data.filter( value => data[d].contains.includes(value))});\r\n          }\r\n        }\r\n    }\r\n    return ncombos;\r\n}\r\n\r\nconst getIndexCombinations = computed(() => { \r\n    let combos = [];\r\n    for (let group in indexes) {\r\n        combos = this.getCombinations(group, indexes[group], combos);\r\n    }\r\n    return combos;\r\n});\r\n</script>\r\n\r\n","<template>\r\n    <div class=\"ptj-widget-window\">\r\n        <div class=\"ptj-widget-window-header\">\r\n            <h1 class=\"ptj-widget-window-title\">{{ title }}\r\n            <a class=\"ptj-widget-window-toggle\" @click=\"toggleWidget\"><span class=\"material-icons\">more_horiz</span></a>\r\n            </h1>\r\n        </div>\r\n        <div class=\"ptj-widget-window-body\" v-show=\"show\">\r\n            <slot :toggleWidget=\"toggleWidget\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { ref } from \"vue\"\r\n\r\ndefineProps({\r\n    title : String,\r\n    active : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n});\r\n\r\nlet show = ref(false);\r\n\r\nfunction toggleWidget() {\r\n    show.value = (show.value) ? false : true;\r\n}\r\n\r\n</script>","<template>\r\n <ptj-widget title=\"search\" v-slot=\"slotScope\">\r\n   <form @submit.prevent=\"searchData\" class=\"ptj-filter-form\">\r\n      <ptj-form-row v-for=\"field in RepoStore.search.cells\" :key=\"field.name\" :field=\"field\" v-show=\"field.type != 'id' || Object.keys(field.options).length > 0\">\r\n          <ptj-id v-if=\"field.type=='id'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.type=='time'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" type=\"filter\" :field=\"field\" />\r\n          <a @click=\"field.reset()\">x</a>\r\n      </ptj-form-row>\r\n      <input type=\"submit\" value=\"Submit\" class=\"ptj-filter-form-submit\" @click=\"slotScope.toggleWidget\">\r\n  </form>\r\n </ptj-widget>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjWidget from \"./ptj-widget.vue\"\r\nimport { Map, addToHistory } from \"./../js/route.js\"\r\nimport { RepoStore, loadRepo } from \"./../js/repo.js\"\r\n\r\n\r\nfunction searchData() {\r\n    RepoStore.search.applyChangeData();\r\n    Map.params = RepoStore.search.convertToParams();\r\n    addToHistory();\r\n    loadRepo();\r\n}\r\n\r\n\r\n</script>\r\n<style scoped>\r\n.error {\r\n  color : red;\r\n}\r\n\r\n</style>\r\n\r\n","<template>\r\n <div class=\"ptj-pagination\">\r\n     <a v-for=\"index in data_template.max_pages\" :key=\"index\" @click=\"$emit('setPage', index - 1)\" :class=\"getActiveClass(index)\">{{ index }}</a>\r\n </div>\r\n</template>\r\n<script setup>\r\n\r\nconst props = defineProps({\r\n    data_template : Object\r\n});\r\n\r\nfunction getActiveClass(index) {\r\n    return (index - 1 == props.data_template.page) ? \"ptj-pagination-active\" : \"\";\r\n}\r\n</script>","<template>\r\n    <div class=\"ptj-progress-bar-wrapper\">\r\n        <div class=\"ptj-progress-holder\">\r\n            <div class=\"ptj-progress-bar\" :style=\"'width:' + num + 'px'\">&nbsp;</div> \r\n        </div>   \r\n        <span>{{ num }}%</span>\r\n    </div> \r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { computed } from \"vue\"\r\n\r\nconst props = defineProps({\r\n    total : Number,\r\n    progress : Number\r\n});\r\n\r\n\r\nconst num = computed(() => {\r\n    let num = Math.floor((props.progress / props.total) * 100);\r\n    return (isNaN(num)) ? 0 : num;\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n .ptj-progress-holder {\r\n     width : 100%;\r\n     min-height : 10px;\r\n     position : relative;\r\n     display : flex;\r\n     align-items: stretch;\r\n     padding : 2px;\r\n }\r\n\r\n .ptj-progress-bar {\r\n     width : 0;\r\n     height : 100%;\r\n     position : relative;\r\n     line-height : 100%;\r\n }\r\n\r\n\r\n</style>\r\n","<template>\r\n <form @submit.prevent=\"submit\" v-show=\"fstate==0\" class=\"ptj-form\" :class=\"Map.model + ' ' + Map.state\">\r\n    <div class=\"ptj-form-error\" v-show=\"globalerror\">{{ globalerror }}</div>\r\n    <ptj-form-row v-for=\"field in cdata.cells\" :key=\"field.name\" :field=\"field\">\r\n          <ptj-asset v-if=\"field.type=='asset'\" type=\"edit\"  :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" type=\"edit\"  :field=\"field\"/>\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" type=\"edit\"  :field=\"field\" />\r\n          <ptj-id v-else-if=\"field.type=='id'\" type=\"edit\"  :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.type=='time'\" type=\"edit\"   :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" type=\"edit\"  :field=\"field\" />\r\n    </ptj-form-row>\r\n    <input type=\"submit\" value=\"Submit\" class=\"ptj-form-submit\">\r\n    <ptj-progress-bar v-show=\"fstate == 1\" :total=\"progress.total\" :progress=\"progress.progress\" />\r\n  </form>\r\n  \r\n</template>\r\n\r\n<script setup>\r\n\r\nimport {ref, reactive, onMounted } from \"vue\" \r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjProgressBar from \"./ptj-progress-bar.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport Settings from \"./../js/settings.js\"\r\nimport client from \"./../js/client.js\"\r\nimport { DataRow } from \"./../js/datarow.js\"\r\nimport { MetaRow } from \"./../js/metarow.js\"\r\nimport { Map } from \"./../js/route.js\"\r\nimport { loadRepo } from \"./../js/repo.js\"\r\n\r\nconst emit = defineEmits(['close']);\r\nlet globalerror = ref('');\r\nconst settings = Settings.getModelSettings(Map.model, Map.state);\r\n\r\nconst cdata = reactive(new DataRow());\r\n\r\n\r\nconst progress = reactive({ total : 0, progress : 0});\r\n\r\nlet fstate = 0;\r\n\r\n\r\n\r\nconst load = async() => {\r\n    return client.post(\"/route/\" + Map.route + \"/\" + Map.model)\r\n    .then(response => {\r\n        const meta = new MetaRow();\r\n        meta.map(response.fields);\r\n        cdata.applyMetaRow(meta);\r\n\r\n        let promises = [];\r\n        for(let i in meta.cells) {\r\n            if (meta.cells[i].type == 'id' && meta.cells[i].reference) {\r\n                let url = \"/reference/\" + Map.model + \"/\" + i;\r\n                promises.push(meta.cells[i].setReferenceOptions(url, {\"--parentid\":Map.key}));\r\n            }\r\n        }\r\n        return Promise.all(promises);\r\n    }).catch(e => console.log(e));\r\n}\r\n\r\n\r\nfunction submit() {\r\n\r\n    fstate = (progress.total > 0) ? 1 : 2;\r\n    cdata.clearErrors();\r\n    let key = 0;\r\n    let ndata = cdata.serialize();\r\n    if (Map.key) ndata[\"--parentid\"] = Map.key;\r\n    return client.post(\"/data/\" + Map.route + \"/\" + Map.model, ndata)\r\n    .then(response=>{\r\n        key = response[\"--id\"];\r\n        let promises = [];\r\n        let assets = cdata.getCellByType(\"asset\");\r\n        progress.total = 0;\r\n        for(let i in assets) {\r\n            const val = assets[i].val;\r\n            if (!val) continue;\r\n            ++progress.total;\r\n            const asset = new Asset();\r\n            asset.url = \"/asset/\" + Map.model + \"/\" + i + \"/\" + response[\"--id\"];\r\n            let promise = asset.saveFile(assets[i].val)\r\n            .then(() => {\r\n                ++progress.progress;\r\n            });\r\n            promises.push(promise);\r\n        }\r\n        return Promise.all(promises);\r\n    })\r\n    .then(() => {\r\n        cdata.reset();\r\n        loadRepo();\r\n        emit(\"close\");\r\n    })\r\n    .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n            console.log(err);\r\n        fstate = 0;\r\n        if (typeof err == \"string\") {\r\n            globalerror = err;\r\n        } else {\r\n            cdata.setErrors(err);\r\n        }\r\n    });\r\n}\r\n\r\nonMounted(async () => {\r\n    await load();\r\n});\r\n\r\n</script>\r\n","<template>\r\n  <div :class=\"[Map.model, Map.state]\">\r\n    <button @click=\"toggleCreate()\">Create</button>\r\n    <ptj-modal :active=\"show_create\" @close=\"toggleCreate()\">\r\n        <ptj-create-form @close=\"toggleCreate()\" />\r\n    </ptj-modal>\r\n    <ptj-filter-form  v-if=\"settings.disable_filter != true\"/>\r\n    <ptj-selectfields v-if=\"settings.disable_selectfields != true\" />\r\n    <ptj-tree v-if=\"component=='tree'\" />\r\n    <ptj-list v-else-if=\"component=='list'\" />\r\n    <ptj-table v-else-if=\"component=='table'\" />\r\n    <ptj-pagination v-if=\"RepoStore.meta.limit > 0\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { ref, computed, onMounted } from \"vue\"\r\nimport PtjTree from \"./ptj-tree.vue\"\r\nimport PtjTable from \"./ptj-table.vue\"\r\nimport PtjList from \"./ptj-list.vue\"\r\nimport PtjFilterForm from \"./ptj-filter-form.vue\"\r\nimport PtjSelectfields from \"./ptj-selectfields.vue\"\r\nimport PtjPagination from \"./ptj-pagination.vue\"\r\nimport Settings from \"./../js/settings.js\"\r\nimport PtjModal from \"./ptj-modal.vue\"\r\nimport PtjCreateForm from \"./ptj-create-form.vue\"\r\nimport { RepoStore, loadRepo } from \"./../js/repo.js\"\r\n\r\n\r\nconst settings = Settings.getModelSettings(Map.model, Map.state);\r\nconst show_create = ref(false);\r\n\r\nconst component = computed(() => {\r\n    if (settings.component) return settings.component;\r\n    else if (!RepoStore.meta.cells) return \"\";\r\n    else return (RepoStore.meta.store.index || RepoStore.meta.children.length > 0) ? \"tree\" : \"table\";\r\n});\r\n\r\nfunction toggleCreate() {\r\n    show_create.value = (show_create.value) ? false : true;\r\n}\r\n\r\n\r\nonMounted(async () => {\r\n    await loadRepo();\r\n});\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n</style>","<template>\r\n    <p>Are you sure you want to permanently delete this record? Type {{ check_str }} in the box below to continue.</p>\r\n    <input type=\"text\" :placeholder=\"check_str\" @keyup=\"checkStatus\" v-model=\"delval\">\r\n    <button :disabled=\"disabled\" @click=\"del\">Delete</button>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport client from \"./../js/client.js\"\r\nimport { ref } from \"vue\";\r\nimport { Map, redirect } from \"./../js/route.js\"\r\n\r\nconst props = defineProps({\r\n    check_str : {\r\n        type : String,\r\n        default : \"delete\"\r\n    },\r\n    parentid : {\r\n        default : 0\r\n    }\r\n});\r\n\r\nconst emits = defineEmits(['close']);\r\n\r\nlet delval = ref(\"\");\r\nlet disabled = ref(true);\r\n\r\nfunction checkStatus() {\r\n    disabled.value = (delval.value == props.check_str) ? false : true;\r\n}\r\n\r\nfunction del() {\r\n    client.delete(\"/data/\" + Map.route + \"/\" + Map.model, {\"--id\":Map.key})\r\n    .then(res => {\r\n        Map.state = \"parent\";\r\n        Map.key = props.parentid.val;\r\n        redirect();\r\n    })\r\n    .catch(e => console.log(e));\r\n}\r\n    \r\n</script>\r\n","<template>\r\n    <button v-if=\"RouteStore.route.perms.includes('put')\" @click=\"toggleState\">{{ next_state }}</button>\r\n    <button v-if=\"RouteStore.route.perms.includes('delete')\" @click=\"toggleDel\">Delete</button>\r\n    <ptj-modal :active=\"show_del\" @close=\"toggleDel()\">\r\n        <ptj-delete :parentid=\"store.data.parent\" @close=\"toggleDel()\" />\r\n    </ptj-modal>\r\n    <div class=\"ptj-primary\" :class=\"Map.model\">\r\n        <ptj-form-row v-for=\"field in store.data.cells\" :key=\"field.name\" :field=\"field\"> \r\n          <ptj-asset v-if=\"field.meta.type=='asset'\" :type=\"store.type\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.meta.type=='number'\" :type=\"store.type\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.meta.type=='flag'\" :type=\"store.type\" :field=\"field\" />\r\n          <ptj-id v-else-if=\"field.meta.type=='id'\" :type=\"store.type\" :field=\"field\"  />\r\n          <ptj-time v-else-if=\"field.meta.type=='time'\" :type=\"store.type\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.meta.type=='string'\" :type=\"store.type\" :field=\"field\"  />\r\n        </ptj-form-row>\r\n        <input v-if=\"store.type =='edit'\" type=\"submit\" value=\"Submit\" class=\"ptj-form-submit\" @click=\"submit\">\r\n    </div>\r\n    <div class=\"ptj-children\">\r\n        <ptj-button v-for=\"action in RouteStore.route.children\" :key=\"action\" :route=\"{ model : action, state : 'parent'}\">\r\n            {{ action }}\r\n        </ptj-button>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport client from \"./../js/client.js\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport { DataRow } from \"./../js/datarow.js\"\r\nimport Settings from \"./../js/settings.js\"\r\nimport { reactive, ref, computed, onMounted } from \"vue\"\r\nimport PtjDelete from \"./ptj-delete.vue\"\r\nimport PtjModal from \"./ptj-modal.vue\"\r\nimport PtjForm from \"./ptj-create-form.vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport { MetaRow } from \"./../js/metarow.js\"\r\nimport { Map, RouteStore } from \"./../js/route.js\"\r\n  \r\n\r\nconst settings = Settings.getModelSettings(Map.model, Map.state);\r\n\r\n\r\nconst store = reactive({ data : new DataRow(), fstate : 0,  type : 'view', show_def : false, progress : { total : 0, progress : 0} });\r\n\r\nlet show_del = ref(false);\r\n\r\n\r\n\r\nfunction toggleState() {\r\n    store.type = (store.type == \"view\") ? \"edit\" : \"view\";\r\n}\r\n\r\nlet next_state = computed(() => {\r\n    return (store.type == \"edit\") ? \"view\" : \"edit\";\r\n});\r\n\r\nfunction toggleDel() {\r\n    show_del.value = (show_del.value) ? false : true;\r\n}\r\n\r\n\r\n\r\nconst load = async() => {\r\n    let params = {};\r\n    if (Map.to) params.__to = Map.to;\r\n    if (Map.key) params[\"--id\"] = Map.key;\r\n    if (settings.fields) params.__fields = settings.fields;\r\n    return client.get(\"/route/\" + Map.route + \"/\" + Map.model + \"/primary\", params)\r\n    .then(response => {\r\n        const meta = new MetaRow();\r\n        meta.map(response.fields, settings.fields);\r\n        store.data.applyMetaRow(meta);\r\n    }).then(() => {\r\n        return client.get(\"/data/\" + Map.route + \"/\" + Map.model + \"/primary\", params);\r\n    }).then(response => {\r\n        store.data.row = response;\r\n        //set the change values as well for each row\r\n        for(let i in store.data.cells) {\r\n            store.data.cells[i].change = store.data.cells[i].val;\r\n        }\r\n    }).then(response => {\r\n        for(let i in store.data.cells) {\r\n            if (store.data.cells[i].type == \"id\" && store.data.cells[i].reference) {\r\n                let url = \"/reference/\" + Map.model + \"/\" + i;\r\n                store.data.cells[i].setReferenceOptions(url, {\"--id\" : Map.key});\r\n            }\r\n        }\r\n    }).catch(e => console.log(e));\r\n\r\n}\r\n\r\n\r\nfunction submit() {\r\n\r\n    store.fstate = (store.progress.total > 0) ? 1 : 2;\r\n    store.data.clearErrors();\r\n    let key = 0;\r\n    let ndata = store.data.serialize(true);\r\n    if (Object.keys(ndata).length == 0) {\r\n        toggleState();\r\n        return;\r\n    }\r\n    ndata[\"--id\"] = Map.key;\r\n    return client.put(\"/data/\" + Map.route + \"/\" + Map.model, ndata)\r\n    .then(response=>{\r\n        let promises = [];\r\n        let assets = store.data.getCellByType(\"asset\");\r\n        store.progress.total = 0;\r\n        for(let i in assets) {\r\n            const val = assets[i].val;\r\n            if (!val) continue;\r\n            ++store.progress.total;\r\n            const asset = new Asset();\r\n            asset.url = \"/asset/\" + Map.model + \"/\" + i + \"/\" + response[\"--id\"];\r\n            let promise = asset.saveFile(assets[i].val)\r\n            .then(() => {\r\n                ++store.progress.progress;\r\n            });\r\n            promises.push(promise);\r\n        }\r\n        return Promise.all(promises);\r\n    })\r\n    .then(() => {\r\n        for(let i in store.data.cells) {\r\n            store.data.cells[i].val = store.data.cells[i].change;\r\n        }\r\n    })\r\n    .then(() => {\r\n        toggleState();\r\n    })\r\n    .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n        store.fstate = 0;\r\n        if (typeof err == \"string\") {\r\n            globalerror = err;\r\n        } else {\r\n            store.data.setErrors(err);\r\n        }\r\n    });\r\n}\r\n\r\nonMounted(async () => {\r\n await load();\r\n});\r\n\r\n</script>","<template>\r\n <div class=\"ptj-account-handler\">\r\n    <form @submit.prevent=\"submit\" v-show=\"store.state=='login'\" class=\"ptj-login\">\r\n        <div class=\"ptj-form-error\" v-show=\"store.globalerror\">{{ store.globalerror }}</div>\r\n        <ptj-form-row v-for=\"field in store.login_data.cells\" :key=\"field.meta.name\" :field=\"field\">\r\n          <ptj-string type=\"edit\" :field=\"field\" />\r\n        </ptj-form-row>\r\n        <input type=\"submit\" value=\"Submit\" class=\"ptj-form-submit\">\r\n    </form>\r\n    <form  @submit.prevent=\"submit\" v-show=\"store.state=='create'\" class=\"ptj-register\">\r\n        <div class=\"ptj-form-error\" v-show=\"store.globalerror\">{{ store.globalerror }}</div>\r\n        <ptj-form-row v-for=\"field in store.register_data.cells\" :key=\"field.meta.name\" :field=\"field\">\r\n          <ptj-number v-if=\"field.meta.type=='number'\" type=\"edit\" :field=\"field\"/>\r\n          <ptj-flag v-else-if=\"field.meta.type=='flag'\" type=\"edit\" :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.meta.type=='time'\" type=\"edit\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.meta.type=='string'\" type=\"edit\" :field=\"field\" />\r\n        </ptj-form-row>\r\n        <input type=\"submit\" value=\"Submit\" class=\"ptj-form-submit\">\r\n    </form>\r\n </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport { Map, refresh } from \"./../js/route.js\"\r\n\r\n\r\nimport { reactive } from 'vue'\r\nimport { DataRow } from './../js/datarow.js';\r\nimport { MetaRow } from \"./../js/metarow.js\"\r\nimport client from \"./../js/client.js\"\r\n\r\nconst props = defineProps({\r\n    actions : []\r\n});\r\n\r\n\r\nconst store = reactive({\r\n    state : 'login',\r\n    active : true,\r\n    login_data : new DataRow(),\r\n    register_data : new DataRow(),\r\n    globalerror : ''\r\n});\r\n\r\n//load our modules\r\n\r\nclient.post(\"/route/\" + Map.route + \"/\" + Map.model)\r\n.then(response => {\r\n    let meta = new MetaRow();\r\n    meta.map(response.fields);\r\n    store.register_data.applyMetaRow(meta);\r\n});\r\n\r\nclient.post(\"/route/\" +  Map.route + \"/\" + Map.model + \"/login\")\r\n.then(response => {\r\n    let meta = new MetaRow();\r\n    meta.map(response.fields);\r\n    store.login_data.applyMetaRow(meta)\r\n});\r\n\r\n\r\nfunction submit() {\r\n    store.active = false;\r\n    store.globalerror = \"\";\r\n    if (store.state == \"login\") {\r\n        return client.post(\"/data/\" +  Map.route + \"/\" + Map.model + \"/login\", store.login_data.serialize(\"login\"))\r\n        .then(response => {\r\n            refresh();\r\n        })\r\n        .catch(e => {\r\n            store.globalerror = \"Incorrect username / password\";\r\n        })\r\n    } else {\r\n        return client.post(\"/data/\" + Map.route + \"/\" +  Map.model, store.register_data.serialize(\"post\"))\r\n        .then(response => {\r\n            refresh();\r\n        })\r\n        .catch(e => {\r\n            store.register_data.applyErrors(e);\r\n        });\r\n    }\r\n} \r\n</script>\r\n\r\n\r\n","<template>\r\n    <div class=\"ptj-nav\">\r\n        <div v-for=\"(routes, title) in RouteStore.cats\" :key=\"title\">\r\n            <span v-if=\"routes.length > 1\">{{ title }}</span>\r\n            <ptj-button v-for=\"(route) in routes\" :route=\"{ 'route' : route.route, 'model' : route.model, 'state':route.state, 'key' : 0}\" :key=\"route.route\">{{ route.route }}</ptj-button>\r\n        </div>\r\n    </div>\r\n    <ptj-slug-trail />\r\n    <Suspense>\r\n        <template #default>\r\n            <div :class=\"[Map.model, Map.state]\">\r\n            <ptj-button v-if=\"RouteStore.back\" :route=\"RouteStore.back\"><span class=\"material-icons\">back</span></ptj-button>\r\n            <h1>{{ RouteStore.title }}</h1>\r\n            <component v-if=\"component\" :is=\"component\" />\r\n            </div>\r\n        </template>\r\n        <template #fallback>\r\n            <div>Loading ...</div>\r\n        </template>\r\n    </Suspense>\r\n</template>\r\n<script setup>\r\n\r\nimport { computed, onMounted } from \"vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjSlugTrail from \"./ptj-slug-trail.vue\"\r\nimport { init, RouteStore, runRoute } from \"./../js/route.js\"\r\nimport PtjRepo from \"./ptj-repo.vue\"\r\nimport PtjPrimary from \"./ptj-primary.vue\"\r\nimport PtjAccountHandler from \"./ptj-account-handler.vue\"\r\n\r\n\r\nconst component = computed(() => {\r\n    if (!RouteStore.component) return null;\r\n    else if (RouteStore.component == \"ptj-primary\") return PtjPrimary;\r\n    else if (RouteStore.component == \"ptj-repo\") return PtjRepo;\r\n    else if (RouteStore.component == \"ptj-account-handler\") return PtjAccountHandler;\r\n});\r\n\r\n\r\n\r\n\r\nonMounted(() => {\r\n    init()\r\n    .then(() => {\r\n        return runRoute();\r\n    });\r\n});\r\n\r\n</script>","<template>\r\n    <Teleport to=\"#ptj-accountdetails\">\r\n    <a v-if=\"User.user != 'public'\" class=\"ptj-account-details-logout\" @click=\"logout\">Logout</a>\r\n    </Teleport>\r\n    <ptj-router />\r\n    <ptj-modal :active=\"User.login\">\r\n        \r\n    </ptj-modal>\r\n</template>\r\n<script setup>\r\n\r\nimport PtjModal from \"./ptj-modal.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport { User, checkLoginStatus, logout } from \"./../js/user.js\"\r\nimport PtjRouter from \"./ptj-router.vue\"\r\n\r\n\r\ncheckLoginStatus();\r\n\r\n/*\r\n<form @submit.prevent=\"submit\" class=\"ptj-login\">\r\n            <ptj-form-row v-for=\"field in login_data.cells\" :key=\"field.meta.name\" :field=\"field\">\r\n                <ptj-string type=\"edit\" :field=\"field\" />\r\n            </ptj-form-row>\r\n            <input type=\"submit\" value=\"Login\" class=\"ptj-form-submit\" @click=\"submit\">\r\n        </form>\r\n*/\r\n\r\n</script>","import PTJUser from \"./presstojam/src/components/ptj-user.vue\"\r\nimport Settings from \"./presstojam/src/js/settings.js\"\r\nimport Client from \"./presstojam/src/js/client.js\"\r\nimport { createApp } from \"vue\"\r\n\r\nfunction runApp(mount, user_settings) {\r\n    Settings.regSettings(user_settings);\r\n    const app = createApp(PTJUser);\r\n    app.mount(mount);\r\n    return app;\r\n}\r\n\r\n\r\nfunction getClient(user_settings) {\r\n    Settings.regSettings(user_settings);\r\n    return Client;\r\n}\r\n\r\n\r\n\r\nexport default { \r\n    runApp,\r\n    getClient\r\n}\r\n\r\n\r\n"],"names":["settings","regSettings","isettings","type","getSettings","getModelSettings","model","state","models","main_url","custom_headers","initSettings","Settings","url","name","run","headers","mode","cache","credentials","fetch","then","response","ok","json","get","data","params","URLSearchParams","i","Array","isArray","append","JSON","stringify","indexOf","toString","this","getprimary","post","body","put","patch","delete","dictionary","getFieldDictionary","field","key","def","fields","dfield","window","onpopstate","Map","convertFromURL","runRoute","RouteStore","reactive","cats","routes","component","title","route","parent","constructor","_route","_model","_state","_key","_to","_params","_settings","_base","_default","_changes","Object","keys","forEach","property","defineProperty","substring","set","newValue","action_map","id","to","hasChange","hasOwnProperty","reset","resetChanges","convertToURL","param_str","push","length","join","url_obj","URL","location","href","pathname","replace","base","parts","split","_self","searchParams","value","pop","isNaN","Error","getAll","default","apply","load","client","cat","route_name","loadRoute","dict","children","perms","catch","e","console","log","refresh","redirect","addToHistory","url_str","protocol","host","history","pushState","document","promises","getDefault","Promise","all","props","custom_val","ref","selectCustom","change1","change","filter","item","styleInject","css","insertAt","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","onMounted","reference","setReferenceOptions","show_list","display","symbol","toggleList","select","target","getAttribute","ctype","computed","immutable","tag","contains","enums","regEx","RegExp","exp","test","isEnum","encrypted","html","max","options","atts","readonly","placeholder","meta","User","init","login","user","logout","Client","checkLoginStatus","is_expired","role","setTimeout","trails","async","PTJDragNDrop","_handle","handle","_drop_target","drop_target","_drag_target","drag_target","_call_back","callback","_x","_y","_offset_x","_offset_y","_judder","judder","_drag_node","_drop_node","_tree","tree","isJudder","x","y","dx","dy","getDirection","offset","elem","rect","getBoundingClientRect","win","ownerDocument","defaultView","top","pageYOffset","left","pageXOffset","insertAfter","drag_id","drop_id","circular","sort","nextElementSibling","node","dragStart","ev","targ","closest","dataTransfer","dropEffect","clientX","clientY","isDroppable","dragEnter","preventDefault","dir","dragOver","dragEnd","setAttribute","drop","initDD","drag","querySelectorAll","el","addAttribute","addEventListener","main","Errors","Field","obj","_name","_type","_atts","_confirm","_reference","_label","_store","summary","_default_val","_immutable","_encrypted","_min","_max","_contains","_notcontains","_recursive","_error","toLowerCase","val","validation","min","notcontains","getOption","opt","vals","clean","calcValue","validateSize","validate","err","nhas","match","has","MetaRow","_cells","_children","_states","_limit","_page","_sort","_groups","_active","_max_pages","_count","_limited_fields","_init","index","addChild","child","addState","action","_actions","convertToParams","_fields","resetSummary","arr","mapField","recursive","map","custom_fields","getCellByType","cells","applyMap","parse","setVal","applySettings","groups","limit","DataCell","_meta","error","is_validate_on","meta_keys","getOwnPropertyNames","includes","showError","default_val","addParam","change2","addAPIParam","validateon","on","store","isSummary","DataRow","metarow","_metarow","applyMetaRow","primary","clone","row","getSummary","str","cell","serialize","changes_only","clearErrors","setErrors","convertToAPIParams","applyChangeData","RepoStore","indexes","search","indexData","ckey","mapRepoData","limited_fields","loadRepo","__to","__fields","count","max_pages","Math","ceil","toggle_state","branch","toggle","saveSort","sortable","PTJDragDrop","icon","order","pages","xval","getCell","toVal","yval","inject","getIndexCombinations","combos","group","getCombinations","show","toggleWidget","searchData","getActiveClass","data_template","page","num","floor","progress","total","globalerror","cdata","fstate","submit","ndata","assets","asset","Asset","promise","saveFile","emit","show_create","toggleCreate","delval","disabled","checkStatus","check_str","del","res","parentid","show_def","show_del","toggleState","next_state","toggleDel","active","login_data","register_data","applyErrors","PtjPrimary","PtjRepo","PtjAccountHandler","resolve","runApp","mount","user_settings","app","createApp","PTJUser","getClient"],"mappings":"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"}