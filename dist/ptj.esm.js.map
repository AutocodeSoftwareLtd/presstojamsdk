{"version":3,"file":"ptj.esm.js","sources":["../presstojam/src/js/client.js","../presstojam/src/js/validator.js","../presstojam/src/js/error.js","../presstojam/src/js/field.js","../presstojam/src/js/asset.js","../presstojam/src/js/model.js","../presstojam/src/js/params.js","../presstojam/src/js/ctrlmap.js","../presstojam/src/js/router.js","../presstojam/src/js/controller.js","../presstojam/src/js/classinjection.js","../presstojam/src/components/ptj-error.vue","../node_modules/style-inject/dist/style-inject.es.js","../presstojam/src/components/ptj-error.vue?vue&type=template&id=c05300a8&lang.js","../presstojam/src/components/ptj-form-input.vue","../presstojam/src/components/ptj-form-input.vue?vue&type=template&id=64b3afe6&lang.js","../presstojam/src/components/ptj-form-confirm.vue","../presstojam/src/components/ptj-form-confirm.vue?vue&type=template&id=62754d43&lang.js","../presstojam/src/components/ptj-form-select.vue","../presstojam/src/components/ptj-form-select.vue?vue&type=template&id=34644c49&lang.js","../presstojam/src/components/ptj-form-radio.vue","../presstojam/src/components/ptj-form-radio.vue?vue&type=template&id=2e1363be&lang.js","../presstojam/src/components/ptj-form-checkbox.vue","../presstojam/src/components/ptj-form-checkbox.vue?vue&type=template&id=0f4b9e50&lang.js","../presstojam/src/components/ptj-form-textarea.vue","../presstojam/src/components/ptj-form-textarea.vue?vue&type=template&id=0aa8b372&lang.js","../presstojam/src/components/ptj-form-asset.vue","../presstojam/src/components/ptj-form-asset.vue?vue&type=template&id=93648f9a&lang.js","../presstojam/src/components/ptj-progress-bar.vue","../presstojam/src/components/ptj-progress-bar.vue?vue&type=template&id=460b10ff&lang.js","../presstojam/src/components/ptj-form.vue","../presstojam/src/components/ptj-form.vue?vue&type=template&id=523d6cd0&lang.js","../presstojam/src/components/ptj-nav.vue","../presstojam/src/components/ptj-nav.vue?vue&type=template&id=262eb772&lang.js","../presstojam/src/components/ptj-filter-form-time.vue","../presstojam/src/components/ptj-filter-form-time.vue?vue&type=template&id=697f55ad&lang.js","../presstojam/src/components/ptj-filter-form-checkbox.vue","../presstojam/src/components/ptj-filter-form-checkbox.vue?vue&type=template&id=0743e0ba&lang.js","../presstojam/src/components/ptj-widget-window.vue","../presstojam/src/components/ptj-widget-window.vue?vue&type=template&id=da476e86&lang.js","../presstojam/src/components/ptj-filter-form.vue","../presstojam/src/components/ptj-filter-form.vue?vue&type=template&id=71ada21d&lang.js","../presstojam/src/components/ptj-pagination.vue","../presstojam/src/components/ptj-pagination.vue?vue&type=template&id=43dcd5a6&lang.js","../presstojam/src/components/ptj-selectfields.vue","../presstojam/src/components/ptj-selectfields.vue?vue&type=template&id=89ff5b7e&lang.js","../presstojam/src/components/ptj-repo-header.vue","../presstojam/src/components/ptj-repo-header.vue?vue&type=template&id=ba19bc28&lang.js","../presstojam/src/components/ptj-tree-node.vue","../presstojam/src/components/ptj-tree-node.vue?vue&type=template&id=1dcaa9f5&lang.js","../presstojam/src/js/dragndrop.js","../presstojam/src/components/ptj-tree.vue","../presstojam/src/components/ptj-tree.vue?vue&type=template&id=eebe52ac&lang.js","../presstojam/src/components/ptj-table.vue","../presstojam/src/components/ptj-table.vue?vue&type=template&id=15ab9672&lang.js","../presstojam/src/components/ptj-repo.vue","../presstojam/src/components/ptj-repo.vue?vue&type=template&id=1c7fb47e&lang.js","../presstojam/src/components/ptj-breadcrumbs.vue","../presstojam/src/components/ptj-breadcrumbs.vue?vue&type=template&id=f4193d18&lang.js","../presstojam/src/components/ptj-single-item.vue","../presstojam/src/components/ptj-single-item.vue?vue&type=template&id=4f4c821c&lang.js","../presstojam/src/components/ptj-accounthandler.vue","../presstojam/src/components/ptj-accounthandler.vue?vue&type=template&id=fdfae9ee&lang.js","../presstojam/src/components/ptj-card.vue","../presstojam/src/components/ptj-card.vue?vue&type=template&id=3583d51c&lang.js","../presstojam/src/components/ptj-tabs.vue","../presstojam/src/components/ptj-tabs.vue?vue&type=template&id=00fda68a&lang.js","../presstojam/src/components/ptj-account-details.vue","../presstojam/src/components/ptj-account-details.vue?vue&type=template&id=c7cf5774&lang.js","../presstojam/src/components/ptj-root.vue","../presstojam/src/components/ptj-root.vue?vue&type=template&id=2c0fa1ee&lang.js","../import.js"],"sourcesContent":["let custom_headers  = {};\r\nlet main_url;\r\nlet status_handlers = {};\r\nlet debug = true;\r\nlet last_status;\r\nlet last_ok;\r\n\r\nexport default {\r\n\r\n    regCustomHeader(name, value) {\r\n        custom_headers[name] = value;\r\n    },\r\n\r\n    regStatusHandler(status, handler) {\r\n        status_handlers[status] = handler;\r\n    },\r\n\r\n    setURL(url) {\r\n        main_url = url;\r\n    },\r\n    regDebug(is_debug) {\r\n        debug = is_debug;\r\n    },\r\n\r\n    run(url, headers) {\r\n        \r\n        headers.mode = 'cors';\r\n        headers.cache = 'no-cache';\r\n        headers.credentials = 'include';\r\n        headers['Content-Type'] = 'application/json';\r\n        headers.headers = custom_headers;\r\n\r\n        const _self = this;\r\n\r\n        return fetch(main_url + url, headers)\r\n        .then(response => {\r\n            last_status = response.status;\r\n            last_ok = response.ok;\r\n            if (status_handlers[response.status]) {\r\n                status_handlers[response.status](response);\r\n            } else if (response.status == 401) {\r\n                return response.status;\r\n            } else {\r\n                return response.json();\r\n            }\r\n        })\r\n        .then(val => {\r\n            if (!last_ok) throw val;\r\n\r\n            if (last_status == 401) {\r\n                let omethod = headers.method;\r\n                headers.method = 'PUT';\r\n                return fetch(main_url + \"/core-switch-tokens\", headers)\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        headers.method = omethod;\r\n                        return fetch(main_url + url, headers)\r\n                        .then(response=> {\r\n                            if (response.status == 401) {\r\n                                throw new Error(\"Issue with refresh token\");\r\n                            } else if (response.ok) {\r\n                                return response.json();\r\n                            } else {\r\n                              //  profile.updateUser(\"public\", 0);\r\n                              //  throw Error(\"Logged out\");\r\n                            }\r\n                        });\r\n                    } else {\r\n                       // profile.updateUser(\"public\", 0);\r\n                       // throw Error(\"Logged out\");\r\n                    }\r\n                });\r\n            } else return val;\r\n        })\r\n        .catch(err => {\r\n            if (debug) console.log(err);\r\n            throw err;\r\n        });\r\n    }, \r\n    setDebug(data) {\r\n        if (!data) {\r\n            data = {\"__debug\" : true}\r\n        } else {\r\n            data[\"__debug\"] = true;\r\n        }\r\n        return data;\r\n    },\r\n    get(url, data) {\r\n        if (debug) data = this.setDebug(data);\r\n        if (data) {\r\n            const params = new URLSearchParams();\r\n            let graph = {};\r\n            for(let i in data) {\r\n                if (Array.isArray(data[i]) || (typeof data[i] == 'object' && data[i] !== null)) graph[i] = data[i];\r\n                else params.append(i, data[i]);\r\n            }\r\n\r\n            if (graph) {\r\n                params.append(\"graph\", JSON.stringify(graph));\r\n            }\r\n            if (url.indexOf(\"?\") == -1) url += \"?\";\r\n            else url += \"&\";\r\n            url += params.toString();\r\n        }\r\n        let headers = {};\r\n        headers.method = 'GET';\r\n        return  this.run(url, headers);\r\n    },\r\n\r\n    getprimary(url, data) {\r\n        return this.get(url, data);\r\n    },\r\n\r\n    post(url, data) {\r\n        //call our fetch response and return\r\n        if (debug) data = this.setDebug(data);\r\n        let headers = {};\r\n        headers.method = 'POST';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    },\r\n\r\n    put(url, data) {\r\n        if (debug) data = this.setDebug(data);\r\n        let headers = {};\r\n        headers.method = 'PUT';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    },\r\n\r\n    patch(url, data) {\r\n        if (debug) data = this.setDebug(data);\r\n        let headers = {};\r\n        headers.method = 'PATCH';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    },\r\n\r\n    delete(url, data) {\r\n        if (debug) data = this.setDebug(data);\r\n        let headers = {};\r\n        headers.method = 'DELETE';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    }\r\n}\r\n","export class Validator {\r\n\r\n    constructor() {\r\n        this._min;\r\n        this._max;\r\n        this._has = [];\r\n        this._has_not = [];\r\n        this._errors = {\r\n            'OK' : 0,\r\n            'MIN_VALUE' : 1,\r\n            'MAX_VALUE' : 2,\r\n            'HAS' : 3,\r\n            'HAS_NOT' : 4\r\n        }\r\n    }\r\n\r\n    set min(min) {\r\n        this._min = min;\r\n    }\r\n\r\n    set max(max) {\r\n        this._max = max;\r\n    }\r\n\r\n    set has(has) {\r\n        this._has.push(has);\r\n    }\r\n\r\n    set nothas(nhas) {\r\n        this._has_not.push(nhas);\r\n    }\r\n\r\n\r\n    validateSize(val) {\r\n        if (val < this._min) return this._errors.MIN_VALUE;\r\n        else if (val > this._max) return this._errors.MAX_VALUE;\r\n        else return this._errors.OK;\r\n    }\r\n\r\n\r\n    validate(val) {\r\n        let err;\r\n        if (isNaN(val)) {\r\n            const length = (val) ? val.length : 0;\r\n            err = this.validateSize(length);\r\n        } else {\r\n            err = this.validateSize(val);\r\n        }\r\n        if (err != this._errors.OK) return err;\r\n\r\n        for(let nhas of this._has_not) {\r\n            if (val.match(nhas)) return this._errors.HAS_NOT;\r\n        }\r\n\r\n        if (this._has.length == 0) return this._errors.OK;\r\n        \r\n        for(let has of this._has) {\r\n            if (val.match(this._has)) return this._errors.OK;\r\n        }\r\n        return this._errors.HAS;\r\n    }\r\n\r\n}","const error_invalid_map = {\r\n            1 : \"too small\",\r\n            2 : \"too large\",\r\n            3 : \"contains incorrect characters\",\r\n            4 : \"doesn't contain required characters\",\r\n            5 : \"not unique\"\r\n}\r\n\r\nfunction getError(code) {\r\n    return error_invalid_map[code];\r\n}\r\n\r\nexport default {\r\n    getError\r\n}","import { Validator } from \"./validator.js\"\r\nimport Errors from \"./error.js\"\r\nimport { reactive, computed, ref } from \"vue\"\r\nimport Client from \"./client.js\"\r\n\r\nexport class Field  {\r\n\r\n    constructor(name, obj = null) {\r\n        this._name = name;\r\n        this._type;\r\n        this._is_primary = false;\r\n        this._is_parent = false;\r\n        this._valid = 1;\r\n        this._atts={}\r\n        this._confirm = false;\r\n        this._readonly = false;\r\n        this._placeholder = \"\";\r\n        this._conditions;\r\n        this._link;\r\n        this._reference;\r\n        this._error = 0;\r\n        this._label = \"\";\r\n        this.on = ref(true);\r\n        this._summary = false;\r\n        this._default = null;\r\n        this._validator = new Validator();\r\n        this._value = ref(null);\r\n        this._multiple;\r\n        this._is_validate_on = false;\r\n        this._options = reactive([]);\r\n        this._asset = null;\r\n\r\n        this.val = computed({ \r\n            get : () =>  {\r\n                return this.clean(this._value.value);\r\n            },\r\n            set : (val) => {\r\n                this._value.value = val;\r\n                this._error = this.validate(val);\r\n            }     \r\n        });\r\n\r\n       \r\n        if (obj) {\r\n            for (let x in obj) {\r\n                if (x == \"field\" || x == \"validator\") continue;\r\n                this[x] = obj[x];\r\n            }\r\n\r\n            if (obj.field) {\r\n                for(let x in obj.field) {\r\n                    this[x] = obj.field[x];\r\n                }\r\n            }\r\n\r\n            if (obj.validation) {\r\n                for(let x in obj.validation) {\r\n                    this._validator[x] = obj.validation[x];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    set confirm(confirm) {\r\n        this._confirm = confirm;\r\n    }\r\n\r\n    set readonly(readonly) {\r\n        this._readonly = readonly;\r\n    }\r\n\r\n    set placeholder(placeholder) {\r\n        this._placeholder = placeholder;\r\n    }\r\n\r\n    set atts(atts) {\r\n        this._atts = atts;\r\n    }\r\n\r\n    set default(def) {\r\n        this._default = def;\r\n    }\r\n\r\n    set asset(asset) {\r\n        this._asset = asset;\r\n    }\r\n\r\n\r\n    set conditions(conditions) {\r\n        this._conditions = conditions;\r\n    }\r\n\r\n    set link(link) {\r\n        this._link = link;\r\n    }\r\n\r\n    set name(name) {\r\n        this._name = name;\r\n    }\r\n\r\n    set type(type) {\r\n        this._type = type;\r\n    }\r\n\r\n    set multiple(mult) {\r\n        this._multiple = mult;\r\n    }\r\n\r\n    set is_primary(val) {\r\n        this._is_primary = val;\r\n    }\r\n\r\n    set is_parent(val) {\r\n        this._is_parent = val;\r\n    }\r\n\r\n    set reference(ref) {\r\n        this._reference = ref;\r\n    }\r\n\r\n    set error(err) {\r\n        this._error = err;\r\n    }\r\n\r\n    set label(label) {\r\n        this._label = label;\r\n    }\r\n\r\n    set summary(summary) {\r\n        this._summary = summary;\r\n    }\r\n\r\n    set validateon(on) {\r\n        this._is_validate_on = on;\r\n    }\r\n\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    get options() {\r\n        return this._options;\r\n    }\r\n\r\n    get isprimary() {\r\n        return this._is_primary;\r\n    }\r\n\r\n    get required() {\r\n        return (this._min > 0) ? true : false;\r\n    }\r\n\r\n    get summary() {\r\n        return this._summary;\r\n    }\r\n\r\n    get readonly() {\r\n        return this._readonly;\r\n    }\r\n\r\n    get placeholder() {\r\n        return this._placeholder;\r\n    }\r\n\r\n    get default() {\r\n        return this._default;\r\n    }\r\n\r\n    get atts() {\r\n        return this._atts;\r\n    }\r\n\r\n    get conditions() {\r\n        return this._conditions;\r\n    }\r\n\r\n    get link() {\r\n        return this._link;\r\n    }\r\n\r\n    get isparent() {\r\n        return this._is_parent\r\n    }\r\n\r\n    get multiple() {\r\n        return this._multiple;\r\n    }\r\n    \r\n    get confirm() {\r\n        return this._confirm;\r\n    }\r\n\r\n    get reference() {\r\n        return this._reference;\r\n    }\r\n\r\n    get error() {\r\n        if (!this._error) return \"\";\r\n        else if (isNaN(this._error)) return this._error;\r\n        else return Errors.getError(this._error);\r\n    }\r\n\r\n    get showError() {\r\n        return (this._is_validate_on && this._error) ? true : false;\r\n    }\r\n\r\n    get label() {\r\n        return this._label;\r\n    }\r\n\r\n\r\n    saveAsset(id) {\r\n        if (this._asset) {\r\n            let file = this.val;\r\n            if (file) return this._asset.saveFile(this.val, id);\r\n        } \r\n        return Promise.resolve();\r\n    }\r\n\r\n\r\n    setOptions(params) {\r\n        this._options.length = 0;\r\n        if (this._reference) {\r\n            Client.get(this._reference, params)\r\n                .then(response => {\r\n                    for (let i in response.__data) {\r\n                        if (i.indexOf(\"__\") === 0) continue;\r\n                        this._options.push({ key: response.__data[i].id, value: response.__data[i].value });\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                });\r\n        } else {\r\n            try {\r\n                for (let opt of this._atts.options) {\r\n                    this._options.push({ key: opt, value: opt });\r\n                }\r\n            } catch (e) {\r\n                console.log(\"options not set for \", this._name);\r\n            }\r\n        }\r\n    }\r\n\r\n    clean(val) {\r\n        return (this._type == \"checkbox\") ? Boolean(val) : val;\r\n    }\r\n\r\n    validate(value) {\r\n        return this._validator.validate(value);\r\n    }\r\n\r\n    exp() {\r\n        return {\r\n            name : this._name,\r\n            type : this._type,\r\n            atts : this._atts\r\n        }\r\n    }\r\n\r\n    calcValue(value) {\r\n        if (!value) return \"\";\r\n        else return value;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","\r\nimport Client from \"./client.js\"\r\n\r\nexport class Asset {\r\n\r\n    constructor() {\r\n      this._size = 0;\r\n      this._blob = null;\r\n      this._uploaded = false;\r\n      this._chunk_size = 0;\r\n      this._url;\r\n      this._key = 0;\r\n      this._key_field;\r\n    }\r\n\r\n    set chunk_size(chunk) {\r\n      this._chunk_size = chunk;\r\n    }\r\n\r\n    set blob(blob) {\r\n      this._blob = blob;\r\n    }\r\n\r\n    set url(url) {\r\n        this._url = url;\r\n    }\r\n\r\n    set key(key) {\r\n        this._key = key;\r\n    }\r\n\r\n    set keyfield(field) {\r\n        this._key_field = field;\r\n    }\r\n\r\n    get blob() {\r\n      return this._blob;\r\n    }\r\n\r\n    get size() {\r\n      return this._size;\r\n    }\r\n\r\n    get uploaded() {\r\n      return this._uploaded;\r\n    }\r\n\r\n    get chunk_size() {\r\n      return this._chunk_size;\r\n    }\r\n\r\n\r\n    get url() {\r\n        return this._url;\r\n    }\r\n\r\n\r\n    getChunk(index) {\r\n      const start = (this._chunk_size == 0) ? 0 : index * this._chunk_size;\r\n      let end = (this._chunk_size == 0) ? this._size : (index + 1) * this._chunk_size;\r\n      if (end > this._size) end = this._size;\r\n      const view = new DataView(this._blob, start, end - start);\r\n      let buffer = [];\r\n      for(let i = 0, n=view.byteLength; i<n; ++i) {\r\n        buffer.push(view.getInt8(i));\r\n      }\r\n      return buffer.join('');\r\n    }\r\n\r\n\r\n    loadFile(id) {\r\n        let data = {};\r\n        data[this._key_field] = id;\r\n        return Client.get(this._url, data)\r\n        .catch(e => {\r\n            alert(e);\r\n        });\r\n    }\r\n\r\n    delFile(id) {\r\n        let data = {};\r\n        data[this._key_field] = id;\r\n        return Client.delete(this._url, data)\r\n        .catch(e => {\r\n            alert(e);\r\n        });\r\n    }\r\n\r\n    saveFile(file, id) {\r\n        //this needs to be a promise\r\n        this._size = file.size;\r\n        return new Promise(( resolve, reject) => {\r\n          const fr = new FileReader();\r\n          let _self = this;\r\n          fr.onload = function(e) {\r\n            _self.blob = e.target.result;\r\n            resolve(fr.result);\r\n          }\r\n          fr.onerror = reject;\r\n          fr.readAsArrayBuffer(file);  \r\n        })\r\n        .then(() => {\r\n          let promises = [];\r\n          //else, do we have any assets?\r\n          let chunks = (this.chunk_size == 0) ? 1 : Math.ceil(this.size / this.chunk_size);\r\n          for(let i=0; i<chunks; ++i) {\r\n              const data = {};\r\n              data.__chunk = i;\r\n              data.__blob = this.getChunk(i);\r\n              data.id = id;\r\n              promises.push(Client.put(this._url, data));\r\n          }\r\n          return Promise.all(promises);\r\n        });\r\n      }\r\n\r\n}","import client from \"./client.js\"\r\nimport { Field } from \"./field.js\"\r\nimport { reactive } from \"vue\"\r\nimport { Asset } from \"./asset.js\"\r\n\r\n\r\nexport class Model {\r\n    constructor() {\r\n        this._name;\r\n        this._states = {};\r\n        this._default_state;\r\n     \r\n        this._primary_key;\r\n        this._parent_key;\r\n        this._circular;\r\n        this._children = [];\r\n        this._active_children = [];\r\n        this._key_states = { parent_key : null, primary_key : null };\r\n        this._settings = {};\r\n        this._active_state;\r\n        this._change_intention;\r\n    \r\n        this.store = reactive({\r\n            fields : {},\r\n            parent_models : [],\r\n            label : '',\r\n            title : '',\r\n            data : [],\r\n            component : '',\r\n            rawcomponent : '',\r\n            actions : [],\r\n            next : null,\r\n            index : '',\r\n            primarykeyname : '',\r\n            parentkeyname : '',\r\n            circular : '',\r\n            model :  this._name,\r\n            siblings : [],\r\n            children : [],\r\n            stage : 0,\r\n            groups : []\r\n        });\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    get currentstate() {\r\n        return (this._active_state) ? this._active_state : this._default_state;\r\n    }\r\n\r\n\r\n    get children() {\r\n        return this._children;\r\n    }\r\n\r\n    get siblings() {\r\n        if (this._siblings.length > 1) return this._siblings;\r\n        else return [];\r\n    }\r\n\r\n    set state(state) {\r\n        this._active_state = (state) ? state : this._default_state;\r\n        this._change_intention = null;\r\n        this.loadState();\r\n    }\r\n\r\n    set groups(groups) {\r\n        this.store.groups = groups;\r\n    }\r\n\r\n    get key() {\r\n        if (this._active_state == \"post\" || this._active_state == \"get\") {\r\n            return this._key_states.parent_key;\r\n        } else {\r\n            return this._key_states.primary_key;\r\n        }\r\n    }\r\n\r\n    set to(to) {\r\n        this._to = to;\r\n    }\r\n\r\n    set key(key) {\r\n        if (this._active_state == \"get\" || this._active_state == \"post\") {\r\n            this._key_states.parent_key = key;\r\n        } else {\r\n            this._key_states.primary_key = key;\r\n        }\r\n\r\n        if (this._active_state == \"post\" || this._active_state == \"put\") {\r\n            for(let name in this.store.fields) {\r\n                if (this.store.fields[name].on && this.store.fields[name].type == \"select\") {\r\n                    this.store.fields[name].setOptions(this.params);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    set stage(stage) {\r\n        this.store.stage = stage;\r\n    }\r\n\r\n    set name(name) {\r\n        this._name = name;\r\n    }\r\n\r\n    injectCustomSettings(settings) {\r\n        for(let i in settings) {\r\n            if (this[i]) this[i] = settings[i];\r\n            else if (this.store[i]) this.store[i] = settings[i];\r\n        }\r\n        this._settings = settings;\r\n    }\r\n\r\n \r\n    get loadurl() {\r\n        let url = \"/\" + this._name;\r\n        if (this._active_state == \"getprimary\" ||  this._active_state == \"put\") url += \"-primary\";\r\n        return url;\r\n    }\r\n\r\n    get saveurl() {\r\n        let url = \"/\" + this._name;\r\n        return url;\r\n    }\r\n\r\n    get params() {\r\n        let params = {};\r\n        if (this._active_state == \"get\" || this._active_state == \"post\") {\r\n            if (this._key_states.parent_key) {\r\n                params[this._parent_key] = this._key_states.parent_key;\r\n            }\r\n        } else if (this._active_state == \"put\" || this._active_state == \"getprimary\" || this._active_state == \"delete\") {\r\n            params[this._primary_key] = this._key_states.primary_key;\r\n        }\r\n        if (this._to) params.__to = this._to;\r\n        return params;\r\n    }\r\n\r\n    get classes() {\r\n        return this._name.replace(\"_\", \"-\") + \" \" + this._state;\r\n    }\r\n\r\n    get to() {\r\n        return this._to;\r\n    }\r\n\r\n    get state() {\r\n        return this._active_state;\r\n    }\r\n\r\n    get parentkey() {\r\n        return this._parent_key;\r\n    }\r\n\r\n    get primarykey() {\r\n        return this._primary_key;\r\n    }\r\n\r\n    get index() {\r\n        return this._name + \"-\" + this._active_state;\r\n    }\r\n\r\n    get stage() {\r\n        return this.store.stage;\r\n    }\r\n\r\n    get change_intention() {\r\n        return this._change_intention;\r\n    }\r\n\r\n    get map() {\r\n        return {\r\n            model : this._name,\r\n            key : this.key,\r\n            state : this._active_state,\r\n            to : this._to,\r\n            stage : this._stage\r\n        }\r\n    }\r\n\r\n    buildIntention(state, key = null) {\r\n        if (!key) key = this._key;\r\n        this._change_intention = {state : state, key : key, intent : 0};\r\n        if (this._settings.intentions && this._settings.intentions.state) {\r\n            for(let i in this._settings.intentions.state) {\r\n                this._change_intention[i] = this._settings.intentions.state[i];\r\n            }\r\n        }\r\n        //now set any extra values\r\n\r\n    }\r\n\r\n    init() {\r\n        this._init = true;\r\n        let url = \"/route-\" + this._name;\r\n        let data = {};\r\n        if (this._to) data.__to = this._to;\r\n        return client.get(url, data)\r\n        .then(response => {\r\n            if (response.__status != \"SUCCESS\") {\r\n                throw new Error(response);\r\n            }\r\n\r\n            this.mapResponse(response);\r\n           \r\n            //build parent states\r\n            this._parent_models = [];\r\n            let par = response.to;\r\n            while(par) {\r\n                let pmodel = new Model();\r\n                pmodel.mapResponse(par);\r\n                pmodel.state = \"getprimary\";\r\n                this.store.parent_models.push(pmodel);\r\n                par = par.to;\r\n            }\r\n            this._parent_models = this._parent_models.reverse();\r\n            return response;\r\n        });\r\n    }\r\n\r\n    mapResponse(response) {\r\n        this._name = response.model;\r\n        this.store.model = this._name;\r\n        this._primary_key = response.primarykey;\r\n        this._parent_key = response.parentkey;\r\n        this._children = response.children;\r\n        this.store.children = [];\r\n        for(let child of response.children) {\r\n            this.store.children.push({ r : () => {\r\n                this.buildIntention(\"get\", this._key_states.primary_key);\r\n                this._change_intention.model = child.name;\r\n                this._change_intention.to = this._name;\r\n            }, n : child.label });\r\n        }\r\n\r\n        this.store.siblings = [];\r\n        for(let sibling of response.siblings) {\r\n            this.store.siblings.push({ r : () => {\r\n                this.buildIntention(\"get\", this._key_states.parent_key);\r\n                this._change_intention.model = sibling.name;\r\n            }, n : sibling.label });\r\n        }\r\n\r\n        this._circular = response.circular;\r\n\r\n        this.store.primarykeyname = response.primarykey;\r\n        this.store.parentkeyname = response.parentkey;\r\n        this.store.circular = response.circular;\r\n\r\n        //build parent states\r\n        this.store.fields = {};\r\n        for (let i in response.fields) {\r\n            this.store.fields[i] = new Field(i, response.fields[i]);\r\n            if (this.store.fields[i].type == \"asset\") {\r\n                let asset = new Asset();\r\n                asset.url = this._name + \"-\" + i;\r\n                asset.keyfield = this.store.primarykeyname; \r\n                this.store.fields[i].asset = asset;\r\n            } \r\n        }\r\n\r\n        this._states = response.states;\r\n        this._default_state = response.default_state;\r\n\r\n        this._parent_models = [];\r\n        let par = response.to;\r\n        while(par) {\r\n            let pmodel = new Model({ model : par.model, key : 0 });\r\n            pmodel.mapResponse(par);\r\n            pmodel.state = \"getprimary\";\r\n            this.store.parent_models.push(pmodel);\r\n            par = par.to;\r\n        }\r\n        this._parent_models = this._parent_models.reverse();\r\n    }\r\n\r\n\r\n    load() {\r\n        this.store.data = [];\r\n        for(let field in this.store.fields) {\r\n            this.store.fields[field].val = null;\r\n        }\r\n        if (this._active_state == \"get\") {\r\n            return client.get(this.loadurl, this.params)\r\n            .then(response => {\r\n                if (response.__status != \"SUCCESS\") throw new Error(response);\r\n                this.mapRepoData(response);\r\n            })\r\n            .then(() => {\r\n                if (this.store.parent_models.length > 0) {\r\n                    let parent = this.store.parent_models[0];\r\n                    parent.key = this.key;\r\n                    parent.to = this._to;\r\n                    return client.get(parent.loadurl, parent.params)\r\n                    .then(response => {\r\n                        if (response.__status != \"SUCCESS\") throw new Error(response);\r\n                        let parent = this.store.parent_models[this.store.parent_models.length - 1];\r\n                        parent.mapData(response);\r\n                        for(let i =0, n=this.store.parent_models.length - 1; i<n; ++i) {\r\n                            let parent = this.store.parent_models[i];\r\n                            parent.mapData(response[parent.name]);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n        } else if (this._active_state == \"getprimary\" || this._active_state == \"put\") {\r\n            return client.get(this.loadurl, this.params)\r\n            .then(response => {\r\n                if (response.__status != \"SUCCESS\") throw new Error(response);\r\n                \r\n                    this.mapData(response);\r\n\r\n                    for(let parent in this.store.parent_models) {\r\n                        if (response[parent.name]) {\r\n                                //need to set the field data for this\r\n                            parent.mapData(response[parent.name]);\r\n                        }\r\n                    }\r\n            });\r\n        } else if (this._active_state == \"post\" && this.store.parent_models.length > 0) {\r\n            let parent = this.store.parent_models[0];\r\n            parent.keymanager = this._key_states.parent_key;\r\n            parent.to = this._to;\r\n            return client.get(parent.loadurl, parent.params)\r\n            .then(response => {\r\n                if (response.__status != \"SUCCESS\") throw new Error(response);\r\n                let parent = this.store.parent_models[this.store.parent_models.length - 1];\r\n                parent.mapData(response);\r\n                for(let i =0, n=this.store.parent_models.length - 1; i<n; ++i) {\r\n                    let parent = this.store.parent_models[i];\r\n                    parent.mapData(response[parent.name]);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n        } else {\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n\r\n    rLoadObj(data) {\r\n        let obj={};\r\n        for(const field in this.store.fields) {\r\n            obj[field] =  data[field];\r\n        }\r\n        if (this._circular && data[this._name]) {\r\n            if (data[this._name]) {\r\n                obj[this._name] = [];\r\n                for(const i in data[this._name]) {\r\n                    obj[this._name].push(this.rLoadObj(data[this._name][i]));\r\n                }\r\n            }\r\n        }\r\n\r\n        for(const i in this._active_children) {\r\n            const name = this._active_children[i];\r\n            if (data[name]) {\r\n                obj[name] = [];\r\n                for(const x in data[name]) {\r\n                    obj[name].push(this.rLoadObj(data[name][x]));\r\n                }\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    mapRepoData(response) {\r\n        this.store.data = [];\r\n        for (const i in response.__data) {\r\n            const data = this.rLoadObj(response.__data[i]);\r\n            this.store.data.push(data);\r\n        }\r\n    }\r\n\r\n    mapData(data) {\r\n        for(const i in this.store.fields) {\r\n            this.store.fields[i].val = (data[i]) ? data[i] : null;\r\n        }\r\n    }\r\n\r\n    buildlink = (state) => {\r\n        return () => {\r\n            this.buildIntention(state);\r\n        }\r\n    }\r\n\r\n\r\n    loadState() {\r\n        this.store.actions = [];\r\n        this.store.component = \"\";\r\n        this.store.rawcomponent = \"\";\r\n        this.store.data = [];\r\n        this.store.title = this._states[this._active_state].title;\r\n        this.store.label = this._states[this._active_state].label;\r\n        this.store.action = this._active_state;\r\n        this.store.method = this.store.action;\r\n        this.store.submiturl = this.saveurl;\r\n        this.store.primarykey = () => {\r\n            return this._key_states.primary_key;\r\n        }\r\n\r\n        this.store.addKeys = () => {};\r\n        this.store.resolveKeys = () => {};\r\n\r\n        for(let i in this.store.fields) {\r\n            this.store.fields[i].on = false;\r\n        }\r\n    \r\n        let states = {\r\n            'get': () => {\r\n                this.store.actions = [];\r\n                if (this._states.post) {\r\n                    this.store.actions.push({ r: this.buildlink(\"post\"), n: this._states.get.actions.post });\r\n                }\r\n                this.store.rawcomponent = (this._circular || this._active_children.length > 0) ? \"ptj-tree\" : \"ptj-table\";\r\n                /*\r\n                if (this._states.getprimary) {\r\n                    actions.getprimary = { r : this.buildlink(\"getprimary\", params), n : this._states.getprimary.label };\r\n                } else {\r\n                    if (this._states.put) {\r\n                        actions.push({ r : this.buildlink(\"put\", params), n : this._states.put.label });\r\n                    }\r\n                    if (this._states.delete) {\r\n                        actions.push({ r : this.buildlink(\"delete\", params), n : this._states.delete.label });\r\n                    }\r\n                }\r\n                */\r\n               this.store.component = \"ptj-repo\";\r\n               this.store.index = this._name + \"-get\";\r\n               this.store.reload = () => { this.load(); };\r\n\r\n               this.store.next = (key) => {\r\n                    if (this._states.getprimary) {\r\n                        this.buildIntention(\"getprimary\", key);\r\n                    } else if (this._states.put) {\r\n                        this.buildIntention(\"put\", key);\r\n                    }\r\n                    this.store.active_repo = [];\r\n                }\r\n\r\n                this.store.addKeys = data => {\r\n\r\n                };\r\n\r\n                for(let i in this.store.fields) {\r\n                    if (i == this.primarykey || this.store.fields[i].summary) {\r\n                        this.store.fields[i].on = true;\r\n                    }\r\n                }\r\n                this.store.submiturl = this.loadurl;\r\n            },\r\n            'getprimary': () => {\r\n                this.store.actions = [];\r\n                this.store.index = this._name + \"-getprimary\";\r\n                if (this._states.put) {\r\n                    this.store.actions.push({ r: this.buildlink(\"put\"), n: this._states.getprimary.actions.put });\r\n                }\r\n                if (this._states.delete) {\r\n                    this.store.actions.push({ r: async () => {\r\n                        if (confirm(\"Are you sure you want to delete this record and all associated children?\")) {\r\n                            let data = {};\r\n                            data[this._primary_key] = this._key_states.primary_key;\r\n                            await client.delete(\"/\" + this._name, data);\r\n                            this.buildIntention(\"get\", this._key_states.parent_key);\r\n                        }\r\n                    }, n: this._states.getprimary.actions.delete });\r\n                }\r\n                this.store.component = \"ptj-single-item\";\r\n                for(let i in this.store.fields) {\r\n                    this.store.fields[i].on = true;\r\n                }\r\n\r\n            },\r\n            'post': () => {\r\n                this.store.component = (this._states.login) ? \"ptj-account-handler\" : \"ptj-form\";\r\n                this.store.index = this._name + \"-post\";\r\n                this.store.actions = [];\r\n                if (this._states.login) {\r\n                    this.store.actions.push({ r: this.buildlink(\"login\"), n: this._states.post.actions.login });\r\n                }\r\n\r\n                this.store.next = () => {\r\n                    this.buildIntention(\"get\");\r\n                };\r\n\r\n                for(let name of this._states.post.fields) {\r\n                    this.store.fields[name].on = true;\r\n                }\r\n\r\n                this.store.addKeys = data => {\r\n                    data[this._parent_key] = this._key_states.parent_key;\r\n                };\r\n\r\n                this.store.resolveKeys = data => {\r\n                    this._key_states.primary_key = data[this._primary_key];\r\n                }\r\n            },\r\n            'put': () => {\r\n                this.store.component = \"ptj-form\";\r\n                this.store.index = this._name + \"-put\";\r\n                this.store.actions = [];\r\n                this.store.next = () => {\r\n                    if (this._states.getprimary) {\r\n                        this.buildIntention(\"getprimary\");\r\n                    } else {\r\n                        this.buildIntention(\"get\");\r\n                    }\r\n                }\r\n                for(let name of this._states.put.fields) {\r\n                    this.store.fields[name].on = true;\r\n                }\r\n\r\n                this.store.addKeys = data => {\r\n                    data[this._primary_key] = this._key_states.primary_key;\r\n                };\r\n            },\r\n            'login': () => {\r\n                this.store.component = \"ptj-account-handler\";\r\n                this.store.index = this._name + \"-login\";\r\n                this.store.actions = [];\r\n                if (this._states.post) {\r\n                    this.store.actions.push({ r: this.buildlink(\"post\"), n: this._states.login.actions.post });\r\n                }\r\n                for(let name of this._states.login.fields) {\r\n                    this.store.fields[name].on = true;\r\n                }\r\n                this.store.method = \"post\";\r\n                this.store.submiturl += \"-login\";\r\n                this.store.next = null;\r\n            }\r\n        }\r\n\r\n        states[this._active_state]();\r\n    }\r\n    \r\n}","function decodeParams() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    let param_obj = {};\r\n    params.forEach(function(value, key) {\r\n        if (key == \"graph\") {\r\n            let graph_obj = JSON.parse(decodeURIComponent(value));\r\n            param_obj = { ...param_obj, ...graph_obj};\r\n        } else {\r\n            param_obj[key] = value;\r\n        }\r\n    });\r\n    return param_obj;\r\n} \r\n\r\n\r\nfunction encodeParams(params) {\r\n    let graph = {};\r\n    let cstr = [];\r\n    for(let i in params) {\r\n        if (typeof params[i] === 'object' && params[i]) {\r\n            graph[i] = params[i];\r\n        } else if (Array.isArray(params[i])) {\r\n            graph[i] = params[i];\r\n        } else {\r\n            cstr.push(i + \"=\" + encodeURIComponent(params[i]));\r\n        }\r\n    }\r\n\r\n    if (Object.keys(graph).length > 0) cstr.push( \"graph=\" + encodeURIComponent(JSON.stringify(graph)));\r\n    return cstr.join(\"&\");\r\n}\r\n\r\nfunction mapParams(url, params) {\r\n    for(let i in params) {\r\n        const key = \"${\" + i + \"}\";\r\n        const regex = new RegExp(key, \"g\");\r\n        url = url.replace(regex, params[i]);\r\n    }\r\n    return url;\r\n}\r\n\r\nexport default {\r\n    encodeParams,\r\n    decodeParams,\r\n    mapParams\r\n}","import Params from \"./params.js\"\r\n\r\n\r\nconst action_map = {\r\n    'post' : '-create',\r\n    'put' : '-update',\r\n    'delete' : '-delete',\r\n    'login' : '-login',\r\n    'logout' : '-logout',\r\n    'getprimary' : '-primary',\r\n    'get' : ''\r\n};\r\n\r\nclass CtrlGroupMap {\r\n\r\n    constructor() {\r\n        this._model;\r\n        this._state = \"\";\r\n        this._key = 0;\r\n        this._to;\r\n    }\r\n\r\n    set model(model) {\r\n        this._model = model;\r\n    }\r\n\r\n    set state(state) {\r\n        this._state = state;\r\n    }\r\n\r\n    set key(key) {\r\n        this._key = key;\r\n    }\r\n\r\n    set to(to) {\r\n        this._to = to;\r\n    }\r\n\r\n    get model() {\r\n        return this._model;\r\n    }\r\n\r\n    get state() {\r\n        return this._state;\r\n    }\r\n\r\n    get key() {\r\n        return this._key;\r\n    }\r\n\r\n    get to() {\r\n        return this._to;\r\n    }\r\n\r\n    swap(map) {\r\n        this._model = map.model;\r\n        this._state = map.state;\r\n        this._key = map.key;\r\n        this._to = map.to;\r\n    }\r\n\r\n\r\n    convertToURL() {\r\n        let model = this._model;\r\n        let state = this._state;\r\n        let key = this._key;\r\n        let to = this._to;\r\n\r\n        let url = model + action_map[state];\r\n        if (key) url += \"-\" + key;\r\n        if (to) url += \"-to-\" + to;\r\n        return url;\r\n    }\r\n\r\n    convertFromURL(url) {\r\n        if (!url) return;\r\n        let parts = url.split(\"-to-\");\r\n        if (parts.length > 1) {\r\n            this._to = parts[1];\r\n            url = parts[0];\r\n        }\r\n        parts = url.split(\"-\");\r\n        let key = parseInt(parts[parts.length - 1]);\r\n        if (isNaN(key)) this._key = 0;\r\n        else {\r\n            parts.pop();\r\n            this._key = key;\r\n        }\r\n        \r\n        if (parts.length == 0) {\r\n            throw new Error(\"Can't convert this url string: \" + url);\r\n        }\r\n        for(let i in action_map) {\r\n            if (action_map[i] == \"-\" + parts[parts.length - 1]) {\r\n                this._state = i\r\n                parts.pop();\r\n                break;\r\n            }\r\n        }\r\n        this._model = parts.join(\"-\");\r\n    }\r\n}\r\n\r\nlet maps = [];\r\nlet trigger_cb = null;\r\nlet route_base = \"\";\r\nlet params = {};\r\n\r\nfunction regParam(name, val) {\r\n    params[name] = val;\r\n}\r\n\r\nfunction removeParam(name) {\r\n    delete params[name];\r\n}\r\n\r\n\r\nfunction resetMaps() {\r\n    maps = [];\r\n}\r\n\r\nfunction trigger(trig) {\r\n    trigger_cb = trig;\r\n}\r\n\r\nfunction createMap() {\r\n    let map = new CtrlGroupMap();\r\n    maps.push(map);\r\n    return map;\r\n}\r\n\r\nfunction convertToURL() {\r\n    let str_parts = [];\r\n    for(let map of maps) {\r\n        str_parts.push(map.convertToURL());\r\n    }\r\n    let url = route_base + \"/\" + str_parts.join(\"/\");\r\n\r\n    const param_str = Params.encodeParams(params);\r\n    if (param_str) url += \"?\" + param_str;\r\n\r\n    return url;\r\n}\r\n\r\nfunction convertFromURL(url) {\r\n    url = url.replace(route_base, \"\");\r\n    url = url.replace(/^\\/+|\\/+$/g, '');\r\n    let parts = url.split(\"/\");\r\n    maps = [];\r\n    for(let i in parts) {\r\n        let map = createMap();\r\n        map.convertFromURL(parts[i]);\r\n    }\r\n    if (trigger_cb) trigger_cb();\r\n}\r\n\r\n\r\nfunction setBase(base) {\r\n    //trim any leading or trailing / so we can be sure we are dealing with the correct format\r\n    base = base.replace(/^\\/+|\\/+$/g, '');\r\n    route_base = \"/\" + base;\r\n}\r\n\r\nfunction getMaps() {\r\n    return maps;\r\n}\r\n\r\n\r\n\r\n\r\nexport default {\r\n    trigger,\r\n    resetMaps,\r\n    createMap,\r\n    convertToURL,\r\n    convertFromURL,\r\n    setBase,\r\n    getMaps\r\n}","\r\nconst history = [];\r\nlet cb;\r\n\r\n\r\n\r\nfunction setRoute(uri, title = '') {\r\n    history.push({ r : uri, label : title });\r\n    window.history.pushState({'name' : uri}, document.title, uri);\r\n    runRoute(uri);\r\n}\r\n\r\n\r\nfunction hardSetRoute(route) {\r\n    window.location = route;\r\n}\r\n\r\n\r\nwindow.onpopstate = function() {\r\n    runRoute(document.location.pathname);\r\n}\r\n\r\n\r\nfunction runRoute(uri) {\r\n    if (!uri) uri = window.location.pathname;\r\n    if (cb) cb(uri);\r\n}\r\n\r\nfunction regCallback(callback) {\r\n    cb = callback;\r\n}\r\n\r\n\r\n\r\n\r\nexport default {\r\n    setRoute,\r\n    hardSetRoute,\r\n    runRoute,\r\n    regCallback\r\n}","import { reactive } from \"vue\"\r\nimport { Model } from \"./model.js\"\r\nimport Map from \"./ctrlmap.js\"\r\nimport Client from \"./client.js\"\r\nimport Router from \"./router.js\"\r\n\r\nlet _store = reactive({ 'models' : [], profile : null });\r\nlet _settings = {};\r\nlet _models = [];\r\nlet _profile;\r\nlet _seeker = -1;\r\n\r\n\r\nfunction setSettings(settings) {\r\n    if (settings.client) {\r\n        Client.setURL(settings.client.url);\r\n        if (settings.client.custom_headers) {\r\n            for(let i in settings.client.custom_headers) {\r\n                Client.regCustomHeader(i, settings.client.custom_headers[i]);\r\n            }\r\n        }\r\n    \r\n        if (settings.client.debug) {\r\n            Client.regDebug(true);\r\n        }\r\n    \r\n        Client.regStatusHandler(403, function() {\r\n            alert(\"Page not found\");\r\n        });\r\n    }\r\n    \r\n    if (settings.mapper) {\r\n        if (settings.mapper.base) Map.setBase(settings.mapper.base);\r\n    }\r\n\r\n    if (settings.models) _settings = settings.models;\r\n}\r\n\r\n\r\nfunction initProfile() {\r\n    return Client.get(\"/core-check-user\")\r\n    .then(response => {\r\n        _profile = response.__profile;\r\n        _store.profile = _profile;\r\n        return _profile;\r\n    });\r\n}\r\n\r\nfunction assumeRole(role) {\r\n    return Client.post('/core-assume-role', { 'role' : role })\r\n    .then(request => {\r\n        _profile = request.__profile;\r\n        return request.__profile;\r\n    });\r\n}\r\n\r\nfunction removeRole() {\r\n    return Client.post('/core-remove-role')\r\n    .then(request => {\r\n        _profile = request.__profile;\r\n        return request.__profile;\r\n    });\r\n}\r\n\r\nfunction buildModel(map, stage) {\r\n    let url = (!map.model) ? \"/route-core-default\" : \"/route-\" + map.model;\r\n    let data = {};\r\n    if (map.to) data.__to = map.to;\r\n    return Client.get(url, data)\r\n    .then(response => {\r\n        if (response.__status != \"SUCCESS\") {\r\n            throw new Error(response);\r\n        }\r\n        let model_name = response.model;\r\n        let model = new Model();\r\n        if (_settings[model_name]) model.injectCustomSettings(_settings[model_name]);\r\n        if (_settings[_profile] && _settings[_profile][model_name]) {\r\n            model.injectCustomSettings(_settings[_profile][model_name]);\r\n        }\r\n        model.mapResponse(response);\r\n        model.state = map.state;\r\n        model.key = map.key;\r\n        model.stage = stage;\r\n        _models[stage] = model;\r\n        return model;\r\n    })\r\n    .then(model=> {\r\n        return model.load();\r\n    });\r\n    \r\n}\r\n\r\nfunction run() {\r\n    _seeker = -1;\r\n    let maps = Map.getMaps();\r\n    if (maps.length == 0) {\r\n        throw new Error(\"Error with controller run, no maps created\");\r\n    }\r\n    _store.models = [];\r\n    let promises = [];\r\n\r\n    if (_models.length > maps.length) _models.splice(maps.length, _models.length - maps.length);\r\n    for (let i in maps) {\r\n        const map = maps[i];\r\n        let model, promise;\r\n        if (i >= _models.length || _models[i].name != map.model) {\r\n            promise = buildModel(map, i);\r\n        } else {\r\n            model = _models[i];\r\n            if (model.state != map.state) {\r\n                model.state = map.state;\r\n                model.key = map.key;\r\n            }\r\n            promise = _models[i].load()\r\n            .catch(e => console.log(e));\r\n        }\r\n        promises.push(promise);\r\n    }\r\n\r\n    //check the last map to see if it needs a child group\r\n    //omap will be one before last\r\n    Promise.all(promises)\r\n    .then(() => {\r\n        for(let model of _models) {\r\n            _store.models.push(model);\r\n        }\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    })    \r\n}\r\n\r\nfunction buildLink() {\r\n    Map.resetMaps();\r\n    let omaps = [];\r\n    let changes = [];\r\n    for(let i in _models) {\r\n        let model = _models[i];\r\n        omaps.push(model.map);\r\n        changes.push(model.change_intention);\r\n    }\r\n\r\n    for (let i =0,n=changes.length; i<n; ++i) {\r\n        let change = changes[i];\r\n        if (!change) continue;\r\n        let ni = i + change.intent;\r\n        if (ni < 0 || ni >= omaps.length) continue;\r\n        if (change.model) omaps[ni].model = change.model;\r\n        if (change.state) omaps[i].state = change.state;\r\n        if (change.to) omaps[i].to = change.to;\r\n        if (change.key) omaps[i].key = change.key;\r\n    }\r\n\r\n    for(const omap of omaps) {\r\n        let cmap = Map.createMap();\r\n        for(let i in omap) {\r\n            cmap[i] = omap[i];\r\n        }\r\n    }\r\n    let url = Map.convertToURL();\r\n    Router.setRoute(url);\r\n}\r\n\r\nfunction runLink() {\r\n    Map.runRoute();\r\n}\r\n\r\n\r\nfunction runData(uri = null) {\r\n    if (!uri) uri = window.location.pathname;\r\n    Map.convertFromURL(uri);\r\n}\r\n\r\n\r\n\r\nfunction reloadFromBase() {\r\n    Map.resetMaps();\r\n    let url = Map.convertToURL();\r\n    Router.hardSetRoute(url);\r\n}\r\n\r\n\r\nfunction getStore() {\r\n    return _store.models[_seeker].store;\r\n}\r\n\r\n\r\nfunction next() {\r\n    ++_seeker;\r\n}\r\n\r\nMap.trigger(() => {\r\n    run();\r\n});\r\n\r\nRouter.regCallback(Map.convertFromURL)\r\n\r\nexport default {\r\n    store : _store,\r\n    models : _models,\r\n    setSettings,\r\n    initProfile,\r\n    assumeRole,\r\n    removeRole,\r\n    run,\r\n    buildModel,\r\n    buildLink,\r\n    runLink,\r\n    runData,\r\n    reloadFromBase,\r\n    getStore,\r\n    next\r\n}\r\n","let classes_dict = {\r\n    'ptj-account-details-logout' : \"ptj-account-details-logout\",\r\n    'ptj-account-handler' : 'ptj-account-handler',\r\n    'ptj-breadcrumbs' : 'ptj-breadcrumbs',\r\n    'ptj-card' : 'ptj-card',\r\n    'ptj-card-row' : 'ptj-card-row',\r\n    'ptj-card-label' : 'ptj-card-label',\r\n    'ptj-card-value' : 'ptj-card-value',\r\n    'ptj-form' : 'ptj-form',\r\n    'ptj-form-title' : 'ptj-form-title',\r\n    'ptj-form-error' : 'ptj-form-error',\r\n    'ptj-form-group' : 'ptj-form-group',\r\n    'ptj-form-submit' : 'ptj-form-submit',\r\n    'ptj-root' : 'ptj-root',\r\n    'ptj-tabs' : 'ptj-tabs',\r\n    'ptj-tabs-card' : 'ptj-tabs-card',\r\n    'ptj-tabs-tab' : 'ptj-tabs-tab',\r\n    'ptj-repo' : 'ptj-repo',\r\n    'ptj-nav' : 'ptj-nav',\r\n    'ptj-nav-link' : 'ptj-nav-link',\r\n    'ptj-single-item' : 'ptj-single-item',\r\n    'ptj-single-item-row' : 'ptj-single-item-row',\r\n    'ptj-single-item-label' : 'ptj-single-item-label',\r\n    'ptj-single-item-value' : 'ptj-single-item-value',\r\n    'ptj-single-item-actions' : 'ptj-single-item-actions',\r\n    'ptj-single-item-children' : 'ptj-single-item-children',\r\n    'ptj-widget-window' : 'ptj-widget-window',\r\n    'ptj-widget-window-header' : 'ptj-widget-window-header',\r\n    'ptj-widget-window-title' : 'ptj-widget-window-title',\r\n    'ptj-widget-window-toggle' : 'ptj-widget-window-toggle',\r\n    'ptj-widget-window-body' : 'ptj-widget-window-body',\r\n    'ptj-repo-header-title' : 'ptj-repo-header-title',\r\n    'ptj-repo-header-actions' : 'ptj-repo-header-actions',\r\n    'ptj-tree' : 'ptj-tree',\r\n    'ptj-form-row' : 'ptj-form-row',\r\n    'ptj-form-input-row' : 'ptj-form-input-row',\r\n    'ptj-form-input-label' : 'ptj-form-input-label',\r\n    'ptj-form-input' : 'ptj-form-input',\r\n    'ptj-table' : 'ptj-table',\r\n    'ptj-table-header' : 'ptj-table-header',\r\n    'ptj-table-header-cell' : 'ptj-table-header-cell',\r\n    'ptj-table-row' : 'ptj-table-row',\r\n    'ptj-table-cell' : 'ptj-table-cell',\r\n    'ptj-table-cell-sortable' : 'ptj-table-cell-sortable',\r\n    'ptj-form-confirm-row' : 'ptj-form-confirm-row',\r\n    'ptj-form-confirm-label' : 'ptj-form-confirm-label',\r\n    'ptj-form-confirm' : 'ptj-form-confirm',\r\n    'ptj-pagination' : 'ptj-pagination',\r\n    'ptj-filter-form' : 'ptj-filter-form',\r\n    'ptj-filter-form-group' : 'ptj-filter-form-group',\r\n    'ptj-filter-form-submit' : 'ptj-filter-form-submit',\r\n    'ptj-form-select-row' : 'ptj-form-select-row',\r\n    'ptj-form-select-label' : 'ptj-form-select-label',\r\n    'ptj-form-select' : 'ptj-form-select',\r\n    'ptj-tree-node' : 'ptj-tree-node',\r\n    'ptj-tree-node-row' : 'ptj-tree-node-row',\r\n    'ptj-selectfields' : 'ptj-selectfields',\r\n    'ptj-selectfields-checkbox' : 'ptj-selectfields-checkbox',\r\n    'ptj-selectfields-label' : 'ptj-selectfields-label',\r\n    'ptj-form-radio-row' : 'ptj-form-radio-row',\r\n    'ptj-form-radio-label' : 'ptj-form-radio-label',\r\n    'ptj-form-radio-option-label' : 'ptj-form-radio-option-label',\r\n    'ptj-checkbox-row' : 'ptj-checkbox-row',\r\n    'ptj-checkbox-label' : 'ptj-checkbox-label',\r\n    'ptj-checkbox' : 'ptj-checkbox',\r\n    'ptj-form-textarea-row' : 'ptj-form-textarea-row',\r\n    'ptj-form-textarea-label' : 'ptj-form-textarea-label',\r\n    'ptj-form-textarea' : 'ptj-form-textarea',\r\n    'ptj-form-asset-row' : 'ptj-form-asset-row',\r\n    'ptj-form-asset-label' : 'ptj-form-asset-label',\r\n    'ptj-form-asset' : 'ptj-form-asset',\r\n    'ptj-progress-bar-wrapper' : 'ptj-progress-bar-wrapper',\r\n    'ptj-progress-bar-holder' : 'ptj-progress-bar-holder',\r\n    'ptj-progress-bar' : 'ptj-progress-bar',\r\n    'ptj-error' : 'ptj-error',\r\n    'ptj-filter-form-time-row' : 'ptj-filter-form-time-row',\r\n    'ptj-filter-form-time-label' : 'ptj-filter-form-time-label',\r\n    'ptj-filter-form-time-1' : 'ptj-filter-form-time-1',\r\n    'ptj-filter-form-time-2' : 'ptj-filter-form-time-2',\r\n    'ptj-filter-form-checkbox-row' : 'ptj-filter-form-checkbox-row',\r\n    'ptj-filter-form-checkbox-label' : 'ptj-filter-form-checkbox-label',\r\n    'ptj-filter-form-checkbox' : 'ptj-filter-form-checkbox',\r\n    'ptj-account-details-logout' : 'ptj-account-details-logout',\r\n    'ptj-accounthandler' : 'ptj-accounthandler'\r\n};\r\n\r\nfunction regClass(name, value) {\r\n    classes_dict[name] = value;\r\n}\r\n\r\nfunction getClass(name) {\r\n    return classes_dict[name];\r\n} \r\n\r\nexport default {\r\n    regClass,\r\n    getClass\r\n}","<template>\r\n    <p :class=\"Class.getClass('ptj-error')\">{{ error }}</p>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    name : 'ptj-error',\r\n    props : {\r\n        'error' : String\r\n    },\r\n    setup() { \r\n        return { Class }\r\n    }\r\n});\r\n\r\n</script>\r\n\r\n<style>\r\n.error {\r\n  color : red;\r\n}\r\n</style>","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","<template>\r\n    <p :class=\"Class.getClass('ptj-error')\">{{ error }}</p>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    name : 'ptj-error',\r\n    props : {\r\n        'error' : String\r\n    },\r\n    setup() { \r\n        return { Class }\r\n    }\r\n});\r\n\r\n</script>\r\n\r\n<style>\r\n.error {\r\n  color : red;\r\n}\r\n</style>","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-input-row') + ' ' + field.name\">\r\n    <label v-if=\"field.atts.type != 'hidden'\" :class=\"Class.getClass('ptj-form-input-label')\">{{ field.label }}</label>\r\n    <input :class=\"Class.getClass('ptj-form-input')\" :name=\"field.name\" :type=\"field.atts.type\" v-model=\"field.val\" @blur=\"field.validateon = true\" :readonly=\"field.readonly\">\r\n    <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-input',\r\n  props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-input-row') + ' ' + field.name\">\r\n    <label v-if=\"field.atts.type != 'hidden'\" :class=\"Class.getClass('ptj-form-input-label')\">{{ field.label }}</label>\r\n    <input :class=\"Class.getClass('ptj-form-input')\" :name=\"field.name\" :type=\"field.atts.type\" v-model=\"field.val\" @blur=\"field.validateon = true\" :readonly=\"field.readonly\">\r\n    <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-input',\r\n  props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-confirm-row')\">\r\n    <label :class=\"Class.getClass('ptj-form-confirm-label')\">{{ field.label }}</label>\r\n    <input :class=\"Class.getClass('ptj-form-confirm')\" :name=\"name\" :type=\"field.atts.type\" v-model=\"cval\" @blur=\"field.setValidateOn()\">\r\n    <ptj-error v-show=\"error\" :error=\"error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-confirm',\r\n  props : {\r\n    field : Object\r\n  },\r\n  data() {\r\n      return {\r\n          cval : \"\"\r\n      }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  computed : {\r\n    name() {\r\n        return this.field.name + \"_confirm\";\r\n    },\r\n    error() {\r\n        if (this.isvalidateon) {\r\n            if (this.field.val == this.cval) return \"\";\r\n            else return \"Doesn't match \" + this.field.name; \r\n        }      \r\n    }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-confirm-row')\">\r\n    <label :class=\"Class.getClass('ptj-form-confirm-label')\">{{ field.label }}</label>\r\n    <input :class=\"Class.getClass('ptj-form-confirm')\" :name=\"name\" :type=\"field.atts.type\" v-model=\"cval\" @blur=\"field.setValidateOn()\">\r\n    <ptj-error v-show=\"error\" :error=\"error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-confirm',\r\n  props : {\r\n    field : Object\r\n  },\r\n  data() {\r\n      return {\r\n          cval : \"\"\r\n      }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  computed : {\r\n    name() {\r\n        return this.field.name + \"_confirm\";\r\n    },\r\n    error() {\r\n        if (this.isvalidateon) {\r\n            if (this.field.val == this.cval) return \"\";\r\n            else return \"Doesn't match \" + this.field.name; \r\n        }      \r\n    }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-select-row')\">\r\n  <label :class=\"Class.getClass('ptj-form-select-label')\">{{ field.label }}</label>\r\n  <select :class=\"Class.getClass('ptj-form-select')\" v-model=\"field.val\" :readonly=\"field.readonly\" :name=\"field.name\" :multiple=\"field.multiple\">\r\n    <option value=\"0\">Select Option</option>\r\n    <option v-for=\"option in field.options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup(props) {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-select-row')\">\r\n  <label :class=\"Class.getClass('ptj-form-select-label')\">{{ field.label }}</label>\r\n  <select :class=\"Class.getClass('ptj-form-select')\" v-model=\"field.val\" :readonly=\"field.readonly\" :name=\"field.name\" :multiple=\"field.multiple\">\r\n    <option value=\"0\">Select Option</option>\r\n    <option v-for=\"option in field.options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup(props) {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n    <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-radio-row')\">\r\n      <label :class=\"Class.getClass('ptj-form-radio-label')\">{{ field.label }}</label>\r\n        <div v-for=\"option in field.options\" :key=\"option\">\r\n            <label :class=\"Class.getClass('ptj-form-radio-option-label')\">{{ option.option }}</label>\r\n            <input :name=\"cfield.name\" type=\"radio\" :value=\"option.value\" v-model=\"field.val\">\r\n        </div>\r\n        <ptj-error v-show=\"field.error\" :error=\"field.error\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-radio',\r\n  props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  data() {\r\n      return {\r\n          isvalidateon : false\r\n      }\r\n  },\r\n  methods : {\r\n      setValidateOn() {\r\n          this.isvalidateon = true;\r\n      }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n    <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-radio-row')\">\r\n      <label :class=\"Class.getClass('ptj-form-radio-label')\">{{ field.label }}</label>\r\n        <div v-for=\"option in field.options\" :key=\"option\">\r\n            <label :class=\"Class.getClass('ptj-form-radio-option-label')\">{{ option.option }}</label>\r\n            <input :name=\"cfield.name\" type=\"radio\" :value=\"option.value\" v-model=\"field.val\">\r\n        </div>\r\n        <ptj-error v-show=\"field.error\" :error=\"field.error\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-radio',\r\n  props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  data() {\r\n      return {\r\n          isvalidateon : false\r\n      }\r\n  },\r\n  methods : {\r\n      setValidateOn() {\r\n          this.isvalidateon = true;\r\n      }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-checkbox-row')\">\r\n    <label :class=\"Class.getClass('ptj-checkbox-label')\">{{ field.label }}</label>\r\n    <input :class=\"Class.getClass('ptj-checkbox')\" type=\"checkbox\" :name=\"field.name\" v-model=\"field.val\">\r\n    <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-checkbox',\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-checkbox-row')\">\r\n    <label :class=\"Class.getClass('ptj-checkbox-label')\">{{ field.label }}</label>\r\n    <input :class=\"Class.getClass('ptj-checkbox')\" type=\"checkbox\" :name=\"field.name\" v-model=\"field.val\">\r\n    <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-checkbox',\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n    <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-textarea-row') + ' ' + field.name.replace('_', '-')\">\r\n       <label :class=\"Class.getClass('ptj-form-textarea-label')\">{{ field.label }}</label>\r\n       <textarea :class=\"Class.getClass('ptj-form-textarea')\" :name=\"field.name\" v-model=\"field.val\" :readonly=\"field.readonly\" :data-html=\"field.atts.html\"></textarea>        \r\n       <ptj-error v-show=\"field.error\" :error=\"field.error\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-textarea',\r\n  props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n    <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-textarea-row') + ' ' + field.name.replace('_', '-')\">\r\n       <label :class=\"Class.getClass('ptj-form-textarea-label')\">{{ field.label }}</label>\r\n       <textarea :class=\"Class.getClass('ptj-form-textarea')\" :name=\"field.name\" v-model=\"field.val\" :readonly=\"field.readonly\" :data-html=\"field.atts.html\"></textarea>        \r\n       <ptj-error v-show=\"field.error\" :error=\"field.error\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-textarea',\r\n  props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-asset-row')\">\r\n  <label :class=\"Class.getClass('ptj-form-asset-label')\">{{ field.label }}</label>\r\n  <input :class=\"Class.getClass('ptj-form-asset')\" ref=\"input\" @change=\"setFile\" :name=\"field.name\" type=\"file\" >\r\n  <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-asset-field',\r\n  props : {\r\n    field : {\r\n        type : Object,\r\n        required : true\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  methods : {\r\n      setFile(e) {\r\n          if (e.target.files.length > 0) {\r\n            this.field.val = e.target.files[0];\r\n          } else {\r\n            this.field.val = null;\r\n          }\r\n          this.field.validateon = true;\r\n      }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>","<template>\r\n <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-asset-row')\">\r\n  <label :class=\"Class.getClass('ptj-form-asset-label')\">{{ field.label }}</label>\r\n  <input :class=\"Class.getClass('ptj-form-asset')\" ref=\"input\" @change=\"setFile\" :name=\"field.name\" type=\"file\" >\r\n  <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-asset-field',\r\n  props : {\r\n    field : {\r\n        type : Object,\r\n        required : true\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  methods : {\r\n      setFile(e) {\r\n          if (e.target.files.length > 0) {\r\n            this.field.val = e.target.files[0];\r\n          } else {\r\n            this.field.val = null;\r\n          }\r\n          this.field.validateon = true;\r\n      }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>","<template>\r\n    <div :class=\"Class.getClass('ptj-progress-bar-wrapper')\">\r\n        <div :class=\"Class.getClass('ptj-progress-bar-holder') + ' ptj-progress-holder'\">\r\n            <div :class=\"Class.getClass('ptj-progress-bar') + ' ptj-bar'\" :style=\"style\">&nbsp;</div> \r\n        </div>   \r\n        <span>{{ num }}%</span>\r\n    </div> \r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent} from \"vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-progress-bar',\r\n  props : {\r\n      total : Number,\r\n      progress : Number\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  computed : {\r\n      num() {\r\n          let num = Math.floor((this.progress / this.total) * 100);\r\n          return (isNaN(num)) ? 0 : num;\r\n      },\r\n      style() {\r\n          return \"width:\" +  this.num + \"%;\";\r\n      }\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n .ptj-progress-holder {\r\n     width : 100%;\r\n     min-height : 10px;\r\n     position : relative;\r\n     display : flex;\r\n     align-items: stretch;\r\n     padding : 2px;\r\n }\r\n\r\n .ptj-bar {\r\n     width : 0;\r\n     height : 100%;\r\n     position : relative;\r\n     line-height : 100%;\r\n }\r\n\r\n\r\n</style>\r\n","<template>\r\n    <div :class=\"Class.getClass('ptj-progress-bar-wrapper')\">\r\n        <div :class=\"Class.getClass('ptj-progress-bar-holder') + ' ptj-progress-holder'\">\r\n            <div :class=\"Class.getClass('ptj-progress-bar') + ' ptj-bar'\" :style=\"style\">&nbsp;</div> \r\n        </div>   \r\n        <span>{{ num }}%</span>\r\n    </div> \r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent} from \"vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-progress-bar',\r\n  props : {\r\n      total : Number,\r\n      progress : Number\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  computed : {\r\n      num() {\r\n          let num = Math.floor((this.progress / this.total) * 100);\r\n          return (isNaN(num)) ? 0 : num;\r\n      },\r\n      style() {\r\n          return \"width:\" +  this.num + \"%;\";\r\n      }\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n .ptj-progress-holder {\r\n     width : 100%;\r\n     min-height : 10px;\r\n     position : relative;\r\n     display : flex;\r\n     align-items: stretch;\r\n     padding : 2px;\r\n }\r\n\r\n .ptj-bar {\r\n     width : 0;\r\n     height : 100%;\r\n     position : relative;\r\n     line-height : 100%;\r\n }\r\n\r\n\r\n</style>\r\n","<template>\r\n <form @submit.prevent=\"submit\" v-show=\"fstate==0\" :class=\"Class.getClass('ptj-form') + ' ' + store.classes\">\r\n    <div :class=\"Class.getClass('ptj-form-error')\" v-show=\"globalerror\">{{ globalerror }}</div>\r\n    <div v-for=\"field in store.fields\" v-show=\"field.on\" :key=\"field.name\" :class=\"Class.getClass('ptj-form-group')\">\r\n          <ptj-select v-if=\"field.type=='select'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-radio v-else-if=\"field.type=='radio'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-checkbox v-else-if=\"field.type=='checkbox'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-textarea v-else-if=\"field.type=='textarea'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-asset-field v-else-if=\"field.type=='asset'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-input v-else :field=\"field\" :stores=\"store\" />\r\n          <div v-if=\"field.confirm\">\r\n            <ptj-confirm :field=\"field\" :stores=\"store\"/> \r\n          </div>\r\n          <!-- REMOVED: -->\r\n    </div>\r\n    <input type=\"submit\" value=\"Submit\" :class=\"Class.getClass('ptj-form-submit')\">\r\n\r\n  </form>\r\n  <ptj-progress-bar v-show=\"fstate == 1\" :total=\"total\" :progress=\"progress\" />\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCInput from \"./ptj-form-input.vue\"\r\nimport GCConfirm from \"./ptj-form-confirm.vue\"\r\nimport GCSelect from \"./ptj-form-select.vue\"\r\nimport GCRadio from \"./ptj-form-radio.vue\"\r\nimport GCCheckbox from \"./ptj-form-checkbox.vue\"\r\nimport GCTextarea from \"./ptj-form-textarea.vue\"\r\nimport GCAssetField from \"./ptj-form-asset.vue\"\r\nimport GCProgressBar from \"./ptj-progress-bar.vue\"\r\nimport Errors from \"../js/error.js\"\r\nimport Client from \"../js/client.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-form',\r\n  data() {\r\n      return {\r\n          fstate : 0,\r\n          progress : 0,\r\n          globalerror : ''\r\n      }\r\n  },\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  methods : {\r\n    clearErrors() {\r\n        this.globalerror = \"\";\r\n        for(let i in this.store.fields) {\r\n            this.store.fields[i].error = 0;\r\n        }\r\n    },\r\n    saveAsset(field) {\r\n        const val = this.store.data[field.name];\r\n        if (!val) return Promise.resolve();\r\n        asset.saveFile(val, this._key, () => ++this.progress);\r\n        this.total += asset.num_chunks;\r\n    },\r\n    submit(e) {\r\n        this.fstate = (this.total > 0) ? 1 : 2;\r\n        this.clearErrors();\r\n        let data = {};\r\n        for(let i in this.store.fields) {\r\n            if (this.store.fields[i].on) data[i] = this.store.fields[i].val;\r\n        }\r\n        this.store.addKeys(data);\r\n        return Client[this.store.method](this.store.submiturl, data)\r\n        .then(request=>{\r\n            if (request.__status!= \"SUCCESS\") {\r\n                throw { message : request.statusText }\r\n            }\r\n            this.store.resolveKeys(request);\r\n        })\r\n        .then(() => {\r\n            let promises = [];\r\n            for(let i in this.store.fields) {\r\n                if (this.store.fields[i].type == \"asset\") {\r\n                    let promise = this.store.fields[i].saveAsset(this.store.primarykey())\r\n                    .then(() => {\r\n                        ++this.progress;\r\n                    })\r\n                    .catch(err => {\r\n                        this.fstate = 0;\r\n                        this.progress = 0;\r\n                        this.store.fields[i].error = err;\r\n                    });\r\n                    promises.push(promise);\r\n                }\r\n            }\r\n            return Promise.all(promises);\r\n        })\r\n        .then(() => {\r\n            this.store.next();\r\n            Ctrl.buildLink();\r\n        })\r\n        .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n            this.fstate = 0;\r\n            console.log(err);\r\n            if (typeof err == \"string\") {\r\n                this.globalerror = err;\r\n            } else {\r\n                for(let i in err) {\r\n                    if (i.indexOf(\"__\") === 0) continue;\r\n                    else if (this.store.fields[i]) {\r\n                        this.store.fields[i].error = Errors.getError(err[i]);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n  },\r\n  computed : {\r\n      total() {\r\n          let total = 0;\r\n          for(let i in this.store.fields) {\r\n            if (this.store.fields[i].type == \"asset\") {\r\n                ++total;\r\n            }\r\n          }\r\n          return total;\r\n      }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-input\" : GCInput,\r\n      \"ptj-confirm\" : GCConfirm,\r\n      \"ptj-select\" : GCSelect,\r\n      \"ptj-radio\" : GCRadio,\r\n      \"ptj-checkbox\" : GCCheckbox,\r\n      \"ptj-textarea\": GCTextarea,\r\n      \"ptj-asset-field\" : GCAssetField,\r\n      \"ptj-progress-bar\" : GCProgressBar\r\n    }\r\n       \r\n  \r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n <form @submit.prevent=\"submit\" v-show=\"fstate==0\" :class=\"Class.getClass('ptj-form') + ' ' + store.classes\">\r\n    <div :class=\"Class.getClass('ptj-form-error')\" v-show=\"globalerror\">{{ globalerror }}</div>\r\n    <div v-for=\"field in store.fields\" v-show=\"field.on\" :key=\"field.name\" :class=\"Class.getClass('ptj-form-group')\">\r\n          <ptj-select v-if=\"field.type=='select'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-radio v-else-if=\"field.type=='radio'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-checkbox v-else-if=\"field.type=='checkbox'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-textarea v-else-if=\"field.type=='textarea'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-asset-field v-else-if=\"field.type=='asset'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-input v-else :field=\"field\" :stores=\"store\" />\r\n          <div v-if=\"field.confirm\">\r\n            <ptj-confirm :field=\"field\" :stores=\"store\"/> \r\n          </div>\r\n          <!-- REMOVED: -->\r\n    </div>\r\n    <input type=\"submit\" value=\"Submit\" :class=\"Class.getClass('ptj-form-submit')\">\r\n\r\n  </form>\r\n  <ptj-progress-bar v-show=\"fstate == 1\" :total=\"total\" :progress=\"progress\" />\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCInput from \"./ptj-form-input.vue\"\r\nimport GCConfirm from \"./ptj-form-confirm.vue\"\r\nimport GCSelect from \"./ptj-form-select.vue\"\r\nimport GCRadio from \"./ptj-form-radio.vue\"\r\nimport GCCheckbox from \"./ptj-form-checkbox.vue\"\r\nimport GCTextarea from \"./ptj-form-textarea.vue\"\r\nimport GCAssetField from \"./ptj-form-asset.vue\"\r\nimport GCProgressBar from \"./ptj-progress-bar.vue\"\r\nimport Errors from \"../js/error.js\"\r\nimport Client from \"../js/client.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-form',\r\n  data() {\r\n      return {\r\n          fstate : 0,\r\n          progress : 0,\r\n          globalerror : ''\r\n      }\r\n  },\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  methods : {\r\n    clearErrors() {\r\n        this.globalerror = \"\";\r\n        for(let i in this.store.fields) {\r\n            this.store.fields[i].error = 0;\r\n        }\r\n    },\r\n    saveAsset(field) {\r\n        const val = this.store.data[field.name];\r\n        if (!val) return Promise.resolve();\r\n        asset.saveFile(val, this._key, () => ++this.progress);\r\n        this.total += asset.num_chunks;\r\n    },\r\n    submit(e) {\r\n        this.fstate = (this.total > 0) ? 1 : 2;\r\n        this.clearErrors();\r\n        let data = {};\r\n        for(let i in this.store.fields) {\r\n            if (this.store.fields[i].on) data[i] = this.store.fields[i].val;\r\n        }\r\n        this.store.addKeys(data);\r\n        return Client[this.store.method](this.store.submiturl, data)\r\n        .then(request=>{\r\n            if (request.__status!= \"SUCCESS\") {\r\n                throw { message : request.statusText }\r\n            }\r\n            this.store.resolveKeys(request);\r\n        })\r\n        .then(() => {\r\n            let promises = [];\r\n            for(let i in this.store.fields) {\r\n                if (this.store.fields[i].type == \"asset\") {\r\n                    let promise = this.store.fields[i].saveAsset(this.store.primarykey())\r\n                    .then(() => {\r\n                        ++this.progress;\r\n                    })\r\n                    .catch(err => {\r\n                        this.fstate = 0;\r\n                        this.progress = 0;\r\n                        this.store.fields[i].error = err;\r\n                    });\r\n                    promises.push(promise);\r\n                }\r\n            }\r\n            return Promise.all(promises);\r\n        })\r\n        .then(() => {\r\n            this.store.next();\r\n            Ctrl.buildLink();\r\n        })\r\n        .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n            this.fstate = 0;\r\n            console.log(err);\r\n            if (typeof err == \"string\") {\r\n                this.globalerror = err;\r\n            } else {\r\n                for(let i in err) {\r\n                    if (i.indexOf(\"__\") === 0) continue;\r\n                    else if (this.store.fields[i]) {\r\n                        this.store.fields[i].error = Errors.getError(err[i]);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n  },\r\n  computed : {\r\n      total() {\r\n          let total = 0;\r\n          for(let i in this.store.fields) {\r\n            if (this.store.fields[i].type == \"asset\") {\r\n                ++total;\r\n            }\r\n          }\r\n          return total;\r\n      }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-input\" : GCInput,\r\n      \"ptj-confirm\" : GCConfirm,\r\n      \"ptj-select\" : GCSelect,\r\n      \"ptj-radio\" : GCRadio,\r\n      \"ptj-checkbox\" : GCCheckbox,\r\n      \"ptj-textarea\": GCTextarea,\r\n      \"ptj-asset-field\" : GCAssetField,\r\n      \"ptj-progress-bar\" : GCProgressBar\r\n    }\r\n       \r\n  \r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n  <span :class=\"Class.getClass('ptj-nav') + ' ' + classes\">\r\n  <a v-for=\"route in actions\" v-bind:key=\"route\" @click=\"setRoute(route);\" :class=\"Class.getClass('ptj-nav-link')\">\r\n    {{ route.n }}\r\n  </a> \r\n  </span>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-nav',\r\n  props: {\r\n    actions : Array,\r\n    classes : String\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  methods : {\r\n      setRoute(route) {\r\n          route.r();\r\n          Ctrl.buildLink();\r\n      }\r\n  }   \r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n  <span :class=\"Class.getClass('ptj-nav') + ' ' + classes\">\r\n  <a v-for=\"route in actions\" v-bind:key=\"route\" @click=\"setRoute(route);\" :class=\"Class.getClass('ptj-nav-link')\">\r\n    {{ route.n }}\r\n  </a> \r\n  </span>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-nav',\r\n  props: {\r\n    actions : Array,\r\n    classes : String\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  methods : {\r\n      setRoute(route) {\r\n          route.r();\r\n          Ctrl.buildLink();\r\n      }\r\n  }   \r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-filter-form-time-row')\">\r\n  <label :class=\"Class.getClass('ptj-filter-form-time-label')\">{{ field.label }}</label>\r\n  <input :class=\"Class.getClass('ptj-filter-form-time-1')\" type=\"date\" v-model=\"field.val1\">\r\n  <input :class=\"Class.getClass('ptj-filter-form-time-2')\" type=\"date\" v-model=\"field.val2\">\r\n  <ptj-error v-show=\"field.error\" :error=\"field.error\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport GCError from \"./ptj-error.vue\"\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-time-range',\r\n props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-filter-form-time-row')\">\r\n  <label :class=\"Class.getClass('ptj-filter-form-time-label')\">{{ field.label }}</label>\r\n  <input :class=\"Class.getClass('ptj-filter-form-time-1')\" type=\"date\" v-model=\"field.val1\">\r\n  <input :class=\"Class.getClass('ptj-filter-form-time-2')\" type=\"date\" v-model=\"field.val2\">\r\n  <ptj-error v-show=\"field.error\" :error=\"field.error\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport GCError from \"./ptj-error.vue\"\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-time-range',\r\n props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-filter-form-checkbox-row')\">\r\n    <label :class=\"Class.getClass('ptj-filter-form-checkbox-label')\">{{ field.label }}</label>\r\n    <select :name=\"field.name\" v-model=\"field.val\" :class=\"Class.getClass('ptj-filter-form-checkbox')\">\r\n        <option value=''>{{ \"All\" }}</option>\r\n        <option value='1'>{{ \"Checked\" }}</option>\r\n        <option value='0'>{{ \"Unchecked\" }}</option>\r\n    </select>\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-checkbox',\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-filter-form-checkbox-row')\">\r\n    <label :class=\"Class.getClass('ptj-filter-form-checkbox-label')\">{{ field.label }}</label>\r\n    <select :name=\"field.name\" v-model=\"field.val\" :class=\"Class.getClass('ptj-filter-form-checkbox')\">\r\n        <option value=''>{{ \"All\" }}</option>\r\n        <option value='1'>{{ \"Checked\" }}</option>\r\n        <option value='0'>{{ \"Unchecked\" }}</option>\r\n    </select>\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-checkbox',\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n    <div :class=\"Class.getClass('ptj-widget-window') + ' ' +  classes\">\r\n        <div :class=\"Class.getClass('ptj-widget-window-header')\">\r\n            <h1 :class=\"Class.getClass('ptj-widget-window-title')\">{{ title }}\r\n            <a :class=\"Class.getClass('ptj-widget-window-toggle')\" @click=\"toggleWidget\"><span class=\"material-icons\">more_horiz</span></a>\r\n            </h1>\r\n        </div>\r\n        <div class=\"Class.getClass('ptj-widget-window-body')\" v-show=\"show\">\r\n            <slot />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        title : String,\r\n        active : {\r\n            type : Boolean,\r\n            default : false\r\n        },\r\n        classes : String\r\n    },\r\n    setup() {\r\n       return { Class };\r\n    },\r\n    data() {\r\n        return {\r\n            show : this.active\r\n        }\r\n    },\r\n    methods : {\r\n        toggleWidget() {\r\n            this.show = (this.show) ? false : true;\r\n        }\r\n    }\r\n});\r\n\r\n</script>","<template>\r\n    <div :class=\"Class.getClass('ptj-widget-window') + ' ' +  classes\">\r\n        <div :class=\"Class.getClass('ptj-widget-window-header')\">\r\n            <h1 :class=\"Class.getClass('ptj-widget-window-title')\">{{ title }}\r\n            <a :class=\"Class.getClass('ptj-widget-window-toggle')\" @click=\"toggleWidget\"><span class=\"material-icons\">more_horiz</span></a>\r\n            </h1>\r\n        </div>\r\n        <div class=\"Class.getClass('ptj-widget-window-body')\" v-show=\"show\">\r\n            <slot />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        title : String,\r\n        active : {\r\n            type : Boolean,\r\n            default : false\r\n        },\r\n        classes : String\r\n    },\r\n    setup() {\r\n       return { Class };\r\n    },\r\n    data() {\r\n        return {\r\n            show : this.active\r\n        }\r\n    },\r\n    methods : {\r\n        toggleWidget() {\r\n            this.show = (this.show) ? false : true;\r\n        }\r\n    }\r\n});\r\n\r\n</script>","<template>\r\n <ptj-widget title=\"search\">\r\n   <form @submit.prevent=\"submit\" :class=\"Class.getClass('ptj-filter-form')\">\r\n      <h1>Search {{ store.title }}</h1>\r\n      <div v-for=\"field in store.fields\" :key=\"field.name\" :class=\"Class.getClass('ptj-filter-form-group')\">\r\n          <ptj-select v-if=\"field.type=='select'\" :field=\"field\" :multiple=\"true\"  :stores=\"store\"/>\r\n          <ptj-filter-checkbox v-else-if=\"field.type=='checkbox'\" :field=\"field\"  :stores=\"store\"/>\r\n          <ptj-time-range v-else-if=\"field.atts.type=='datetime'\" :field=\"field\"  :stores=\"store\"/>\r\n          <ptj-input v-else :field=\"field\" :stores=\"store\" />\r\n               \r\n          <!-- REMOVED: -->\r\n      </div>\r\n      <input type=\"submit\" value=\"Submit\" :class=\"Class.getClass('ptj-filter-form-submit')\">\r\n  </form>\r\n </ptj-widget>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCInput from \"./ptj-form-input.vue\"\r\nimport GCFormSelect from \"./ptj-form-select.vue\"\r\nimport GCCheckbox from \"./ptj-form-checkbox.vue\"\r\nimport GCFilterFormTime from \"./ptj-filter-form-time.vue\"\r\nimport GCFilterFormCheckbox from \"./ptj-filter-form-checkbox.vue\"\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-filter-form',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  methods : {\r\n    submit() {\r\n      this.store.reload();\r\n    }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-input\" : GCInput,\r\n      \"ptj-select\" : GCFormSelect,\r\n      \"ptj-checkbox\" : GCCheckbox,\r\n      \"ptj-time-range\" : GCFilterFormTime,\r\n      \"ptj-filter-checkbox\" : GCFilterFormCheckbox,\r\n      \"ptj-widget\" : GCWidget\r\n    }\r\n       \r\n  \r\n});\r\n</script>\r\n<style scoped>\r\n.error {\r\n  color : red;\r\n}\r\n\r\n</style>\r\n\r\n","<template>\r\n <ptj-widget title=\"search\">\r\n   <form @submit.prevent=\"submit\" :class=\"Class.getClass('ptj-filter-form')\">\r\n      <h1>Search {{ store.title }}</h1>\r\n      <div v-for=\"field in store.fields\" :key=\"field.name\" :class=\"Class.getClass('ptj-filter-form-group')\">\r\n          <ptj-select v-if=\"field.type=='select'\" :field=\"field\" :multiple=\"true\"  :stores=\"store\"/>\r\n          <ptj-filter-checkbox v-else-if=\"field.type=='checkbox'\" :field=\"field\"  :stores=\"store\"/>\r\n          <ptj-time-range v-else-if=\"field.atts.type=='datetime'\" :field=\"field\"  :stores=\"store\"/>\r\n          <ptj-input v-else :field=\"field\" :stores=\"store\" />\r\n               \r\n          <!-- REMOVED: -->\r\n      </div>\r\n      <input type=\"submit\" value=\"Submit\" :class=\"Class.getClass('ptj-filter-form-submit')\">\r\n  </form>\r\n </ptj-widget>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCInput from \"./ptj-form-input.vue\"\r\nimport GCFormSelect from \"./ptj-form-select.vue\"\r\nimport GCCheckbox from \"./ptj-form-checkbox.vue\"\r\nimport GCFilterFormTime from \"./ptj-filter-form-time.vue\"\r\nimport GCFilterFormCheckbox from \"./ptj-filter-form-checkbox.vue\"\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-filter-form',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  methods : {\r\n    submit() {\r\n      this.store.reload();\r\n    }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-input\" : GCInput,\r\n      \"ptj-select\" : GCFormSelect,\r\n      \"ptj-checkbox\" : GCCheckbox,\r\n      \"ptj-time-range\" : GCFilterFormTime,\r\n      \"ptj-filter-checkbox\" : GCFilterFormCheckbox,\r\n      \"ptj-widget\" : GCWidget\r\n    }\r\n       \r\n  \r\n});\r\n</script>\r\n<style scoped>\r\n.error {\r\n  color : red;\r\n}\r\n\r\n</style>\r\n\r\n","<template>\r\n <div :class=\"Class.getClass('ptj-pagination')\">\r\n     <a v-show=\"optiongroup > 0\" @click=\"showPages(-1);\">&lt;&lt;</a>\r\n     <a v-for=\"index in maxoptions\" :key=\"index\" @click=\"page(index)\">{{ firstindex + index }}</a>\r\n     <a v-show=\"current_group < groups - 1\" @click=\"showPages(1)\">&gt;&gt;</a>\r\n </div>\r\n</template>\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        max_page_limit : Number\r\n    },\r\n    setup(props) {\r\n        let groups = Math.ceil(props.pages / props.max_page_limit);\r\n        return {\r\n            groups, current_group : 0, Class\r\n        }\r\n    },\r\n    computed : {\r\n        firstindex() {\r\n            return this.current_group * this.max_options;\r\n        },\r\n        maxoptions() {\r\n            return [];\r\n        }\r\n    },\r\n    methods : {\r\n        showPages(index) {\r\n            let route = Controller.current_route.value;\r\n            let url = route + \"#\";\r\n            if (route.query) url += route.query + \"&\";\r\n            url += \"__page=\" + (this.firstindex + index);\r\n            Router.setRoute(url);\r\n        }\r\n    }\r\n});\r\n</script>","<template>\r\n <div :class=\"Class.getClass('ptj-pagination')\">\r\n     <a v-show=\"optiongroup > 0\" @click=\"showPages(-1);\">&lt;&lt;</a>\r\n     <a v-for=\"index in maxoptions\" :key=\"index\" @click=\"page(index)\">{{ firstindex + index }}</a>\r\n     <a v-show=\"current_group < groups - 1\" @click=\"showPages(1)\">&gt;&gt;</a>\r\n </div>\r\n</template>\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        max_page_limit : Number\r\n    },\r\n    setup(props) {\r\n        let groups = Math.ceil(props.pages / props.max_page_limit);\r\n        return {\r\n            groups, current_group : 0, Class\r\n        }\r\n    },\r\n    computed : {\r\n        firstindex() {\r\n            return this.current_group * this.max_options;\r\n        },\r\n        maxoptions() {\r\n            return [];\r\n        }\r\n    },\r\n    methods : {\r\n        showPages(index) {\r\n            let route = Controller.current_route.value;\r\n            let url = route + \"#\";\r\n            if (route.query) url += route.query + \"&\";\r\n            url += \"__page=\" + (this.firstindex + index);\r\n            Router.setRoute(url);\r\n        }\r\n    }\r\n});\r\n</script>","<template>\r\n    <ptj-widget title=\"select fields\" :classes=\"Class.getClass('ptj-selectfields')\">\r\n        <div v-for=\"field, name in store.fields\" :key=\"name\"> \r\n            <input \r\n                type=\"checkbox\" \r\n                v-model=\"field.on\" \r\n                :class=\"Class.getClass('ptj-selectfields-checkbox')\"> \r\n            <label :class=\"Class.getClass('ptj-selectfields-label')\">{{ field.name }}</label>\r\n        </div>\r\n    </ptj-widget>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },   \r\n    components : {\r\n        \"ptj-widget\" : GCWidget\r\n    }\r\n});\r\n</script>\r\n\r\n","<template>\r\n    <ptj-widget title=\"select fields\" :classes=\"Class.getClass('ptj-selectfields')\">\r\n        <div v-for=\"field, name in store.fields\" :key=\"name\"> \r\n            <input \r\n                type=\"checkbox\" \r\n                v-model=\"field.on\" \r\n                :class=\"Class.getClass('ptj-selectfields-checkbox')\"> \r\n            <label :class=\"Class.getClass('ptj-selectfields-label')\">{{ field.name }}</label>\r\n        </div>\r\n    </ptj-widget>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },   \r\n    components : {\r\n        \"ptj-widget\" : GCWidget\r\n    }\r\n});\r\n</script>\r\n\r\n","<template>\r\n    <h1 :class=\"Class.getClass('ptj-repo-header-title')\">{{ store.title }}</h1>\r\n    <ptj-nav :actions=\"store.actions\" :class=\"Class.getClass('ptj-repo-header-actions')\"/>\r\n    <ptj-filter-form  />\r\n    <ptj-selectfields  />\r\n</template>\r\n\r\n<script>\r\n\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCFilterForm from \"./ptj-filter-form.vue\"\r\nimport GCPagination from \"./ptj-pagination.vue\"\r\nimport GCSelectFields from \"./ptj-selectfields.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-header',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n    components : {\r\n        \"ptj-nav\" : GCNav,\r\n        \"ptj-filter-form\" : GCFilterForm,\r\n        \"ptj-pagination\" : GCPagination,\r\n        \"ptj-selectfields\" : GCSelectFields\r\n    }\r\n});\r\n</script>\r\n","<template>\r\n    <h1 :class=\"Class.getClass('ptj-repo-header-title')\">{{ store.title }}</h1>\r\n    <ptj-nav :actions=\"store.actions\" :class=\"Class.getClass('ptj-repo-header-actions')\"/>\r\n    <ptj-filter-form  />\r\n    <ptj-selectfields  />\r\n</template>\r\n\r\n<script>\r\n\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCFilterForm from \"./ptj-filter-form.vue\"\r\nimport GCPagination from \"./ptj-pagination.vue\"\r\nimport GCSelectFields from \"./ptj-selectfields.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-header',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n    components : {\r\n        \"ptj-nav\" : GCNav,\r\n        \"ptj-filter-form\" : GCFilterForm,\r\n        \"ptj-pagination\" : GCPagination,\r\n        \"ptj-selectfields\" : GCSelectFields\r\n    }\r\n});\r\n</script>\r\n","<template >\r\n    <div :class=\"Class.getClass('ptj-tree-node') + ' ptj-draggable' + this.getRowClass()\" :id=\"branch[store.primarykeyname]\" draggable=\"false\">\r\n        <div :class=\"Class.getClass('ptj-tree-node-row')\" @click=\"selectRow(branch[store.primarykeyname]);\">  \r\n            <div>\r\n                <a v-if=\"ischild\" data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle(branch[store.primarykeyname], false)\">\r\n                    <span class=\"material-icons\">subdirectory_arrow_right</span>\r\n                </a>\r\n                <a v-else data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle(branch[store.primarykeyname], true)\">\r\n                    <span class=\"material-icons\">keyboard_arrow_right</span>\r\n                </a>\r\n            </div>\r\n            <div v-if=\"sortable\">\r\n                <a data-action=\"more\" class=\"button\" @click=\"prevent.stop\" @mousedown=\"setDraggable\" @mouseup=\"endDraggable\">\r\n                    <span class=\"material-icons\">drag_handle</span>\r\n                </a>\r\n            </div>\r\n            <div v-for=\"(field, cindex) in store.fields\" :key=\"cindex\" v-show=\"field.on\">\r\n                <span>{{ field.label }}: {{ branch[field.name] }}</span>\r\n            </div>\r\n            \r\n        </div>\r\n        <ptj-tree-node v-for=\"(obj, index) in children\" :branch=\"obj\" :ischild=\"true\"  :key=\"index\" v-show=\"toggle_state[branch[store.primarykeyname]]\" :store=\"store\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n\tname : \"ptj-tree-node\",\r\n\tprops : {\r\n\t\tbranch : {\r\n            type : Object,\r\n            required : true\r\n        },\r\n        draggable : Boolean,\r\n        ischild : {\r\n            type : Boolean,\r\n            default : false\r\n        }\r\n\r\n\t},\r\n    data() {\r\n        return {\r\n            toggle_state : {}\r\n        }\r\n    },\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n\tmethods : {\r\n        toggle(index) {\r\n            this.toggle_state[index] = (this.toggle_state[index]) ? false : true;\r\n        },\r\n        setDraggable(e) {\r\n            e.target.closest(\".ptj-draggable\").setAttribute(\"draggable\", true);\r\n        },\r\n        endDraggable(e) {\r\n            e.target.closest(\".ptj-draggable\").setAttribute(\"draggable\", false);\r\n        },\r\n        selectRow(key) {\r\n            this.store.next(key);\r\n            Ctrl.buildLink();\r\n        },\r\n        getRowClass() {\r\n            let str = [];\r\n            for(let name of this.store.groups) {\r\n                str.push(this.store.model + \"-\" + name.replace(\"_\", \"-\") + \"-\" + this.branch[name]);\r\n            }\r\n            return str.join(\" \");\r\n        }\r\n\t},\r\n    computed : {\r\n        sortable() {\r\n            return true;\r\n        },\r\n        children() {\r\n            let arr = [];\r\n            if (this.store.circular && this.branch[this.store.model]) arr = this.branch[this.store.model];\r\n            for(let i in this.store.activechildren) {\r\n                if (this.branch[this.store.activechildren[i]]) arr=arr.concat(this.branch[this.store.activechildren[i]]);\r\n            }\r\n            return arr;\r\n        }\r\n    },\r\n\tcomponents : {\r\n\t\r\n\t}\r\n});\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.model-tree.branch {\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  margin: 6px 0;\r\n  background-color:#111111;\r\n}\r\n\r\n.tree .ide-block {\r\n\tdisplay : none;\r\n}\r\n\r\n.dragArea {\r\n  min-height: 50px;\r\n  outline: 1px solid #777777;\r\n}\r\n\r\n\r\n</style>","<template >\r\n    <div :class=\"Class.getClass('ptj-tree-node') + ' ptj-draggable' + this.getRowClass()\" :id=\"branch[store.primarykeyname]\" draggable=\"false\">\r\n        <div :class=\"Class.getClass('ptj-tree-node-row')\" @click=\"selectRow(branch[store.primarykeyname]);\">  \r\n            <div>\r\n                <a v-if=\"ischild\" data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle(branch[store.primarykeyname], false)\">\r\n                    <span class=\"material-icons\">subdirectory_arrow_right</span>\r\n                </a>\r\n                <a v-else data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle(branch[store.primarykeyname], true)\">\r\n                    <span class=\"material-icons\">keyboard_arrow_right</span>\r\n                </a>\r\n            </div>\r\n            <div v-if=\"sortable\">\r\n                <a data-action=\"more\" class=\"button\" @click=\"prevent.stop\" @mousedown=\"setDraggable\" @mouseup=\"endDraggable\">\r\n                    <span class=\"material-icons\">drag_handle</span>\r\n                </a>\r\n            </div>\r\n            <div v-for=\"(field, cindex) in store.fields\" :key=\"cindex\" v-show=\"field.on\">\r\n                <span>{{ field.label }}: {{ branch[field.name] }}</span>\r\n            </div>\r\n            \r\n        </div>\r\n        <ptj-tree-node v-for=\"(obj, index) in children\" :branch=\"obj\" :ischild=\"true\"  :key=\"index\" v-show=\"toggle_state[branch[store.primarykeyname]]\" :store=\"store\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n\tname : \"ptj-tree-node\",\r\n\tprops : {\r\n\t\tbranch : {\r\n            type : Object,\r\n            required : true\r\n        },\r\n        draggable : Boolean,\r\n        ischild : {\r\n            type : Boolean,\r\n            default : false\r\n        }\r\n\r\n\t},\r\n    data() {\r\n        return {\r\n            toggle_state : {}\r\n        }\r\n    },\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n\tmethods : {\r\n        toggle(index) {\r\n            this.toggle_state[index] = (this.toggle_state[index]) ? false : true;\r\n        },\r\n        setDraggable(e) {\r\n            e.target.closest(\".ptj-draggable\").setAttribute(\"draggable\", true);\r\n        },\r\n        endDraggable(e) {\r\n            e.target.closest(\".ptj-draggable\").setAttribute(\"draggable\", false);\r\n        },\r\n        selectRow(key) {\r\n            this.store.next(key);\r\n            Ctrl.buildLink();\r\n        },\r\n        getRowClass() {\r\n            let str = [];\r\n            for(let name of this.store.groups) {\r\n                str.push(this.store.model + \"-\" + name.replace(\"_\", \"-\") + \"-\" + this.branch[name]);\r\n            }\r\n            return str.join(\" \");\r\n        }\r\n\t},\r\n    computed : {\r\n        sortable() {\r\n            return true;\r\n        },\r\n        children() {\r\n            let arr = [];\r\n            if (this.store.circular && this.branch[this.store.model]) arr = this.branch[this.store.model];\r\n            for(let i in this.store.activechildren) {\r\n                if (this.branch[this.store.activechildren[i]]) arr=arr.concat(this.branch[this.store.activechildren[i]]);\r\n            }\r\n            return arr;\r\n        }\r\n    },\r\n\tcomponents : {\r\n\t\r\n\t}\r\n});\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.model-tree.branch {\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  margin: 6px 0;\r\n  background-color:#111111;\r\n}\r\n\r\n.tree .ide-block {\r\n\tdisplay : none;\r\n}\r\n\r\n.dragArea {\r\n  min-height: 50px;\r\n  outline: 1px solid #777777;\r\n}\r\n\r\n\r\n</style>","class GCDragNDrop {\r\n\r\n    constructor(props = {}) {\r\n        this._handle = props.handle;\r\n        this._drop_target = props.drop_target;\r\n        this._drag_target = props.drag_target;\r\n        this._call_back = props.callback;\r\n        this._x = 0;\r\n        this._y = 0;\r\n        this._offset_x = 0;\r\n        this._offset_y = 0;\r\n        this._judder = (props.judder) ? props.judder : 5;\r\n        this._drag_node;\r\n        this._drop_node;\r\n        this._tree = props.tree;\r\n    }\r\n\r\n    isJudder(x, y) {\r\n        const dx = x - this._x;\r\n        const dy = y - this._y;\r\n      \r\n        if (dx < -5 || dx > 5) return false;\r\n        else if (dy < -5 || dy > 5) return false;\r\n        else return true;\r\n    }\r\n\r\n    getDirection(x, y) {\r\n        const dir_x = (x == this._x) ? 0 : (x > this._x) ? 1 : -1;\r\n        const dir_y = (y == this._y) ? 0 : (y > this._y) ? 1 : -1;\r\n      \r\n        return { x : dir_x, y : dir_y };\r\n    }\r\n\r\n    offset(elem) {\r\n        var rect = elem.getBoundingClientRect();\r\n        var win = elem.ownerDocument.defaultView;\r\n\r\n        return {\r\n            top: rect.top + win.pageYOffset,\r\n            left: rect.left + win.pageXOffset\r\n        };\r\n    }\r\n\r\n    insertAfter() {\r\n        let drag_id = this._drag_node.getAttribute(\"id\");\r\n        let drop_id = this._drop_node.getAttribute(\"id\");\r\n\r\n        let circular = 0;\r\n        let sort = 0;\r\n        if (this._drop_node.nextElementSibling) {\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drop_id) {\r\n                    circular = node.circular;\r\n                    sort = node.sort;\r\n                    break;\r\n                } \r\n            }\r\n\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drag_id) {\r\n                    node.circular = circular;\r\n                    node.sort = sort + 1;\r\n                } else if (node.circular == circular && node.sort > sort) {\r\n                    ++node.sort;\r\n                }\r\n            }\r\n        } else {\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drag_id) {\r\n                    node.circular = circular;\r\n                    node.sort = 0;\r\n                } \r\n            }\r\n        }\r\n    }\r\n\r\n    insertBefore() {\r\n        let drag_id = this._drag_node.getAttribute(\"id\");\r\n        let drop_id = this._drop_node.getAttribute(\"id\");\r\n\r\n        let circular = 0;\r\n        let sort = 0;\r\n        for(let i in this._tree) {\r\n            let node = this._tree[i];\r\n            if (node.id == drop_id) {\r\n                circular = node.circular;\r\n                sort = node.sort;\r\n                ++node.sort;\r\n                break;\r\n            } \r\n        }\r\n\r\n        for(let i in this._tree) {\r\n            let node = this._tree[i];\r\n            if (node.id == drag_id) {\r\n                node.circular = circular;\r\n                node.sort = sort;\r\n            } else if (node.circular == circular && node.sort > sort) {\r\n                ++node.sort;\r\n            }\r\n        }\r\n    }\r\n\r\n    dragStart(ev) {\r\n        const targ = ev.target.closest('[id]');\r\n        this._drag_node = targ;\r\n        const { top, left } = this.offset(targ);\r\n\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n\r\n        this._x = ev.clientX;\r\n        this._y = ev.clientY;\r\n    \r\n        this._offset_x = ev.clientX - left;\r\n        this._offset_y = ev.clientY - top;\r\n    }\r\n\r\n    isDroppable(ev) {\r\n        let cont = ev.target.closest(this._drop_target);\r\n        return (cont) ? true : false;\r\n    }\r\n\r\n    dragEnter(ev) {\r\n        if (!this.isDroppable(ev)) return true;\r\n        ev.preventDefault();\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n\r\n        this._drop_node = ev.target.closest(this._drag_target);\r\n\r\n        if (!this._drop_node || this._drop_node.getAttribute(\"id\") == this._drag_node.getAttribute(\"id\")) {\r\n            return;\r\n        }\r\n\r\n        const dir = this.getDirection(ev.clientX, ev.clientY);\r\n\r\n        if (dir.y == 1) {\r\n            this.insertAfter();\r\n        } else if (dir.y == -1) {\r\n            this.insertBefore();\r\n        }\r\n        this._x = ev.clientX;\r\n        this._y = ev.clientY;\r\n    }\r\n\r\n    dragOver(ev) {\r\n        if (!this.isDroppable(ev)) return true;\r\n        ev.preventDefault();\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n    }\r\n\r\n\r\n    dragEnd() {\r\n        if (this._drag_node) this._drag_node.setAttribute(\"draggable\", false);\r\n        this._drag_node = null;\r\n    }\r\n\r\n    drop(ev) {\r\n        if (!this._drop_node) return true;\r\n        ev.preventDefault();\r\n        if (this._call_back) this._call_back(this._tree);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction initDD(props) {\r\n    let drag = new GCDragNDrop(props);\r\n    let handles = document.querySelectorAll(props.handle);\r\n    handles.forEach(el => el.addAttribute(\"draggable\", true));\r\n\r\n    if (props.handle) {\r\n\r\n        let handles = document.querySelectorAll(props.handle);\r\n\r\n        handles.forEach(el => {\r\n            el.addEventListener(\"mousedown\", e => {\r\n                let cont = e.target.closest(props.drag_target);\r\n                cont.addAttribute(\"draggable\", true);\r\n            });            \r\n        });\r\n    }\r\n\r\n    props.main.addEventListener(\"dragstart\", e => drag.dragStart(e));\r\n    props.main.addEventListener(\"dragenter\", e => drag.dragEnter(e));\r\n    props.main.addEventListener(\"dragover\", e => drag.dragOver(e));\r\n    props.main.addEventListener(\"drop\", e => drag.drop(e));\r\n    props.main.addEventListener(\"dragend\", e => drag.dragEnd(e));\r\n}\r\n\r\nexport default {\r\n    initDD\r\n}","<template >\r\n  <div :class=\"Class.getClass('ptj-tree') + ' ' + store.classes + ' ptj-drop-target'\" ref=\"treeroot\">\r\n    <ptj-tree-node v-for=\"(obj, index) in store.data\" :key=\"index\" :branch=\"obj\"  />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, defineComponent } from 'vue'\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCTreeNode from \"./ptj-tree-node.vue\"\r\nimport GCDragDrop from \"../js/dragndrop.js\"\r\nimport GCFilterForm from \"./ptj-filter-form.vue\"\r\nimport GCSelectFields from \"./ptj-selectfields.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n\tname : \"ptj-tree\",\r\n    setup(props) {\r\n        let base = { store : Ctrl.getStore(), treeroot : ref(null), Class };\r\n        onMounted(() => {\r\n           //if (ctrl.sort) {\r\n             GCDragDrop.initDD({\r\n               handle : '.ptj-drag-handle',\r\n               drag_target : '.ptj-draggable',\r\n               drop_target : '.ptj-drop-target',\r\n               main : base.treeroot.value,\r\n               tree : base.store.data,\r\n               callback : base.store.saveSort\r\n             });\r\n           //}\r\n        });\r\n\r\n       return base;\r\n   },\r\n    components : {\r\n        \"ptj-nav\" : GCNav,\r\n        \"ptj-tree-node\" : GCTreeNode,\r\n        \"ptj-filter-form\" : GCFilterForm,\r\n        \"ptj-selectfields\" : GCSelectFields\r\n    }\r\n});\r\n\r\n\r\n</script>\r\n","<template >\r\n  <div :class=\"Class.getClass('ptj-tree') + ' ' + store.classes + ' ptj-drop-target'\" ref=\"treeroot\">\r\n    <ptj-tree-node v-for=\"(obj, index) in store.data\" :key=\"index\" :branch=\"obj\"  />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, defineComponent } from 'vue'\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCTreeNode from \"./ptj-tree-node.vue\"\r\nimport GCDragDrop from \"../js/dragndrop.js\"\r\nimport GCFilterForm from \"./ptj-filter-form.vue\"\r\nimport GCSelectFields from \"./ptj-selectfields.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n\tname : \"ptj-tree\",\r\n    setup(props) {\r\n        let base = { store : Ctrl.getStore(), treeroot : ref(null), Class };\r\n        onMounted(() => {\r\n           //if (ctrl.sort) {\r\n             GCDragDrop.initDD({\r\n               handle : '.ptj-drag-handle',\r\n               drag_target : '.ptj-draggable',\r\n               drop_target : '.ptj-drop-target',\r\n               main : base.treeroot.value,\r\n               tree : base.store.data,\r\n               callback : base.store.saveSort\r\n             });\r\n           //}\r\n        });\r\n\r\n       return base;\r\n   },\r\n    components : {\r\n        \"ptj-nav\" : GCNav,\r\n        \"ptj-tree-node\" : GCTreeNode,\r\n        \"ptj-filter-form\" : GCFilterForm,\r\n        \"ptj-selectfields\" : GCSelectFields\r\n    }\r\n});\r\n\r\n\r\n</script>\r\n","<template>\r\n    <table :class=\"Class.getClass('ptj-table') + ' ' + store.classes\">\r\n    <thead>\r\n        <tr :class=\"Class.getClass('ptj-table-header')\">\r\n        <th v-for=\"(cell, index) in store.fields\" :key=\"cell.name\" :class=\"Class.getClass('ptj-table-header-cell') + ' ' + cell.name.replace('_', '-')\" v-show=\"store.fields[index].on\">{{ cell.label }}\r\n            <span v-if=\"sortable == false\" class=\"material-icons\" @click=\"orderBy(cell, false);\">keyboard_arrow_up</span>\r\n            <span v-if=\"sortable == false\" class=\"material-icons\" @click=\"orderBy(cell, true);\">keyboard_arrow_down</span>\r\n        </th>\r\n        <th v-if=\"sortable\">&nbsp;</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"(obj, rindex) in store.data\" :key=\"rindex\" :class=\"Class.getClass('ptj-table-row') + ' ' + this.getRowClass(obj)\" @click=\"next(obj[store.primarykeyname]);\">\r\n        <td v-for=\"(field, index) in store.fields\" :key=\"index\" :class=\"Class.getClass('ptj-table-cell') + ' ' + field.name.replace('_', '-')\" v-show=\"store.fields[index].on\">{{ obj[field.name] }}</td>\r\n        <td :class=\"Class.getClass('ptj-table-cell-sortable')\" v-if=\"sortable\">\r\n            <a data-action=\"more\" class=\"button\" @click.prevent=\"toggle\" draggable=\"true\">\r\n                <span class=\"material-icons\">drag</span>\r\n            </a>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n    <ptj-pagination v-if=\"overlimit\" />\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport GCPagination from \"./ptj-pagination.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    name: 'ptj-table',\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class}\r\n    },\r\n    methods : {\r\n        next(key) {\r\n            this.store.next(key);\r\n            Ctrl.buildLink();\r\n        },\r\n        orderBy(cell, dir) {\r\n            let order = {};\r\n            order[cell.name] = dir;\r\n            this.store.orderby = order;\r\n            if (this.store.pages > 0) {\r\n                this.store.load();\r\n            } else {\r\n                //custom sort on the table\r\n                if (dir) {\r\n                    this.store.data.sort(function(x, y) {\r\n                        let xval = x[cell.name];\r\n                        let yval = y[cell.name];\r\n                        if (xval < yval) {\r\n                            return -1;\r\n                        } else if (xval > yval) {\r\n                            return 1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.store.data.sort(function(x, y) {\r\n                        let xval = x[cell.name];\r\n                        let yval = y[cell.name];\r\n                        if (xval < yval) {\r\n                            return 1;\r\n                        } else if (xval > yval) {\r\n                            return -1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        getRowClass(obj) {\r\n            let str = [];\r\n            for(let name of this.store.groups) {\r\n                str.push(this.store.model + \"-\" + name.replace(\"_\", \"-\") + \"-\" + obj[name]);\r\n            }\r\n            return str.join(\" \");\r\n        }\r\n    },\r\n    computed : {\r\n        sortable() {\r\n            return (this.store.sort) ? true : false;\r\n        },\r\n        overlimit() {\r\n            return false;\r\n        },\r\n        rowclass() {\r\n\r\n        }\r\n    },\r\n    components : {\r\n        \"ptj-pagination\" : GCPagination,\r\n    }\r\n\r\n   \r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n</style>","<template>\r\n    <table :class=\"Class.getClass('ptj-table') + ' ' + store.classes\">\r\n    <thead>\r\n        <tr :class=\"Class.getClass('ptj-table-header')\">\r\n        <th v-for=\"(cell, index) in store.fields\" :key=\"cell.name\" :class=\"Class.getClass('ptj-table-header-cell') + ' ' + cell.name.replace('_', '-')\" v-show=\"store.fields[index].on\">{{ cell.label }}\r\n            <span v-if=\"sortable == false\" class=\"material-icons\" @click=\"orderBy(cell, false);\">keyboard_arrow_up</span>\r\n            <span v-if=\"sortable == false\" class=\"material-icons\" @click=\"orderBy(cell, true);\">keyboard_arrow_down</span>\r\n        </th>\r\n        <th v-if=\"sortable\">&nbsp;</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"(obj, rindex) in store.data\" :key=\"rindex\" :class=\"Class.getClass('ptj-table-row') + ' ' + this.getRowClass(obj)\" @click=\"next(obj[store.primarykeyname]);\">\r\n        <td v-for=\"(field, index) in store.fields\" :key=\"index\" :class=\"Class.getClass('ptj-table-cell') + ' ' + field.name.replace('_', '-')\" v-show=\"store.fields[index].on\">{{ obj[field.name] }}</td>\r\n        <td :class=\"Class.getClass('ptj-table-cell-sortable')\" v-if=\"sortable\">\r\n            <a data-action=\"more\" class=\"button\" @click.prevent=\"toggle\" draggable=\"true\">\r\n                <span class=\"material-icons\">drag</span>\r\n            </a>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n    <ptj-pagination v-if=\"overlimit\" />\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport GCPagination from \"./ptj-pagination.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    name: 'ptj-table',\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class}\r\n    },\r\n    methods : {\r\n        next(key) {\r\n            this.store.next(key);\r\n            Ctrl.buildLink();\r\n        },\r\n        orderBy(cell, dir) {\r\n            let order = {};\r\n            order[cell.name] = dir;\r\n            this.store.orderby = order;\r\n            if (this.store.pages > 0) {\r\n                this.store.load();\r\n            } else {\r\n                //custom sort on the table\r\n                if (dir) {\r\n                    this.store.data.sort(function(x, y) {\r\n                        let xval = x[cell.name];\r\n                        let yval = y[cell.name];\r\n                        if (xval < yval) {\r\n                            return -1;\r\n                        } else if (xval > yval) {\r\n                            return 1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.store.data.sort(function(x, y) {\r\n                        let xval = x[cell.name];\r\n                        let yval = y[cell.name];\r\n                        if (xval < yval) {\r\n                            return 1;\r\n                        } else if (xval > yval) {\r\n                            return -1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        getRowClass(obj) {\r\n            let str = [];\r\n            for(let name of this.store.groups) {\r\n                str.push(this.store.model + \"-\" + name.replace(\"_\", \"-\") + \"-\" + obj[name]);\r\n            }\r\n            return str.join(\" \");\r\n        }\r\n    },\r\n    computed : {\r\n        sortable() {\r\n            return (this.store.sort) ? true : false;\r\n        },\r\n        overlimit() {\r\n            return false;\r\n        },\r\n        rowclass() {\r\n\r\n        }\r\n    },\r\n    components : {\r\n        \"ptj-pagination\" : GCPagination,\r\n    }\r\n\r\n   \r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n</style>","<template>\r\n<div :class=\"Class.getClass('ptj-repo') + ' ' + store.classes\">\r\n    <ptj-repo-header  />\r\n    <component :key=\"store.key\" :is=\"store.rawcomponent\" />\r\n</div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport GCRepoHeader from \"./ptj-repo-header.vue\"\r\nimport GCTree from \"./ptj-tree.vue\"\r\nimport GCTable from \"./ptj-table.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-repo',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n    components : {\r\n        \"ptj-repo-header\" : GCRepoHeader,\r\n        \"ptj-tree\" : GCTree,\r\n        \"ptj-table\" : GCTable\r\n    }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n\r\n.ptj-data-row:nth-child(odd) {background : #CCC}\r\n\r\n</style>","<template>\r\n<div :class=\"Class.getClass('ptj-repo') + ' ' + store.classes\">\r\n    <ptj-repo-header  />\r\n    <component :key=\"store.key\" :is=\"store.rawcomponent\" />\r\n</div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport GCRepoHeader from \"./ptj-repo-header.vue\"\r\nimport GCTree from \"./ptj-tree.vue\"\r\nimport GCTable from \"./ptj-table.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-repo',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n    components : {\r\n        \"ptj-repo-header\" : GCRepoHeader,\r\n        \"ptj-tree\" : GCTree,\r\n        \"ptj-table\" : GCTable\r\n    }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n\r\n.ptj-data-row:nth-child(odd) {background : #CCC}\r\n\r\n</style>","<template>\r\n  <span :class=\"Class.getClass('ptj-breadcrumbs')\">\r\n  <a v-for=\"route in arr\" v-bind:key=\"route\" @click=\"setRoute(route.r);\">\r\n    {{ route.n }}\r\n  </a> \r\n  </span>\r\n</template>\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Router from \"../js/router.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-nav',\r\n  props: {\r\n    state : Object\r\n  },\r\n  setup() {\r\n      return { Class }\r\n  },\r\n  methods : {\r\n      setRoute(route) {\r\n          Router.switchRoute(route);\r\n      }\r\n  },\r\n  computed : {\r\n      arr() {\r\n         return Router.history;\r\n      }\r\n  }\r\n   \r\n});\r\n</script>","<template>\r\n  <span :class=\"Class.getClass('ptj-breadcrumbs')\">\r\n  <a v-for=\"route in arr\" v-bind:key=\"route\" @click=\"setRoute(route.r);\">\r\n    {{ route.n }}\r\n  </a> \r\n  </span>\r\n</template>\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Router from \"../js/router.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-nav',\r\n  props: {\r\n    state : Object\r\n  },\r\n  setup() {\r\n      return { Class }\r\n  },\r\n  methods : {\r\n      setRoute(route) {\r\n          Router.switchRoute(route);\r\n      }\r\n  },\r\n  computed : {\r\n      arr() {\r\n         return Router.history;\r\n      }\r\n  }\r\n   \r\n});\r\n</script>","<template>\r\n    <ptj-breadcrumbs :state=\"store\" />\r\n    <div :class=\"Class.getClass('ptj-single-item') + ' ' + store.classes\">\r\n        <h1>{{ store.title }}</h1>\r\n        <ptj-nav :actions=\"store.actions\" :class=\"Class.getClass('ptj-single-item-actions')\" />\r\n        <div v-for=\"(field, index) in store.fields\" :key=\"index\" :class=\"Class.getClass('ptj-single-item-row') + ' ' + field.name\">\r\n            <span :class=\"Class.getClass('ptj-single-item-label')\">{{ field.label }}:</span> \r\n            <span :class=\"Class.getClass('ptj-single-item-value')\">{{ field.val }}</span>\r\n        </div>\r\n    </div>\r\n    <ptj-nav :actions=\"store.children\" :class=\"Class.getClass('ptj-single-item-children')\" />\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCBreadCrumbs from \"./ptj-breadcrumbs.vue\"\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-single-item',\r\n  props : {\r\n      active : {\r\n          type : Boolean,\r\n          default : false\r\n      }\r\n  },\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  computed : {\r\n      editnav() {\r\n          return this.store.actions.put;\r\n      },\r\n      delnav() {\r\n          return this.store.actions.delete;\r\n      },\r\n      title() {\r\n          return this.store.title + \" \" + this.store.summary();\r\n      }\r\n  },\r\n  methods : {\r\n      runDel() {\r\n          this.store.runDelete();\r\n      }\r\n  },\r\n  components : {\r\n    \"ptj-nav\" : GCNav, \"ptj-breadcrumbs\" : GCBreadCrumbs, \"ptj-widget\" : GCWidget\r\n  }\r\n});\r\n    \r\n\r\n</script>","<template>\r\n    <ptj-breadcrumbs :state=\"store\" />\r\n    <div :class=\"Class.getClass('ptj-single-item') + ' ' + store.classes\">\r\n        <h1>{{ store.title }}</h1>\r\n        <ptj-nav :actions=\"store.actions\" :class=\"Class.getClass('ptj-single-item-actions')\" />\r\n        <div v-for=\"(field, index) in store.fields\" :key=\"index\" :class=\"Class.getClass('ptj-single-item-row') + ' ' + field.name\">\r\n            <span :class=\"Class.getClass('ptj-single-item-label')\">{{ field.label }}:</span> \r\n            <span :class=\"Class.getClass('ptj-single-item-value')\">{{ field.val }}</span>\r\n        </div>\r\n    </div>\r\n    <ptj-nav :actions=\"store.children\" :class=\"Class.getClass('ptj-single-item-children')\" />\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCBreadCrumbs from \"./ptj-breadcrumbs.vue\"\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-single-item',\r\n  props : {\r\n      active : {\r\n          type : Boolean,\r\n          default : false\r\n      }\r\n  },\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  computed : {\r\n      editnav() {\r\n          return this.store.actions.put;\r\n      },\r\n      delnav() {\r\n          return this.store.actions.delete;\r\n      },\r\n      title() {\r\n          return this.store.title + \" \" + this.store.summary();\r\n      }\r\n  },\r\n  methods : {\r\n      runDel() {\r\n          this.store.runDelete();\r\n      }\r\n  },\r\n  components : {\r\n    \"ptj-nav\" : GCNav, \"ptj-breadcrumbs\" : GCBreadCrumbs, \"ptj-widget\" : GCWidget\r\n  }\r\n});\r\n    \r\n\r\n</script>","<template>\r\n <div :class=\"Class.getClass('ptj-accounthandler')\">\r\n    <h1>{{ store.title }}</h1>\r\n    <ptj-form />\r\n    <ptj-nav :action=\"store.actions\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCForm from \"./ptj-form.vue\"\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"./../js/classinjection.js\"\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-login',\r\n  setup() {\r\n      let store = Ctrl.getStore()\r\n      store.next = instance => {\r\n           Ctrl.reloadFromBase(instance.next_profile);\r\n      }\r\n      return { store : store, Class }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-form\" : GCForm, \"ptj-nav\" : GCNav\r\n    }\r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n <div :class=\"Class.getClass('ptj-accounthandler')\">\r\n    <h1>{{ store.title }}</h1>\r\n    <ptj-form />\r\n    <ptj-nav :action=\"store.actions\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCForm from \"./ptj-form.vue\"\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"./../js/classinjection.js\"\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-login',\r\n  setup() {\r\n      let store = Ctrl.getStore()\r\n      store.next = instance => {\r\n           Ctrl.reloadFromBase(instance.next_profile);\r\n      }\r\n      return { store : store, Class }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-form\" : GCForm, \"ptj-nav\" : GCNav\r\n    }\r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n    <ptj-widget :title=\"title\" :active=\"active\">\r\n        <div :class=\"classes\">\r\n            <div v-for=\"(field, index) in store.fields\" :key=\"index\" :class=\"rowclass + ' ' + field.name\">\r\n                <span :class=\"labelclass\">{{ field.label }}:</span> \r\n                <span :class=\"rowclass\">{{ field.val }}</span>\r\n            </div>\r\n        </div>\r\n    </ptj-widget>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-card',\r\n  props : {\r\n      store : Object,\r\n      active : {\r\n          type : Boolean,\r\n          default : false\r\n      }\r\n  },\r\n  computed : {\r\n      title() {\r\n          return this.store.title;\r\n      },\r\n      classes() {\r\n          return Class.getClass(\"ptj-card\")  + \" \" + this.store.classes;\r\n      },\r\n      rowclass() {\r\n          return Class.getClass(\"ptj-card-row\");\r\n      },\r\n      labelclass() {\r\n          return Class.getClass(\"ptj-card-label\");\r\n      },\r\n      valueclass() {\r\n          return Class.getClass(\"ptj-card-value\");\r\n      }\r\n  },\r\n  components : {\r\n    \"ptj-widget\" : GCWidget\r\n  }\r\n});\r\n    \r\n\r\n</script>","<template>\r\n    <ptj-widget :title=\"title\" :active=\"active\">\r\n        <div :class=\"classes\">\r\n            <div v-for=\"(field, index) in store.fields\" :key=\"index\" :class=\"rowclass + ' ' + field.name\">\r\n                <span :class=\"labelclass\">{{ field.label }}:</span> \r\n                <span :class=\"rowclass\">{{ field.val }}</span>\r\n            </div>\r\n        </div>\r\n    </ptj-widget>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-card',\r\n  props : {\r\n      store : Object,\r\n      active : {\r\n          type : Boolean,\r\n          default : false\r\n      }\r\n  },\r\n  computed : {\r\n      title() {\r\n          return this.store.title;\r\n      },\r\n      classes() {\r\n          return Class.getClass(\"ptj-card\")  + \" \" + this.store.classes;\r\n      },\r\n      rowclass() {\r\n          return Class.getClass(\"ptj-card-row\");\r\n      },\r\n      labelclass() {\r\n          return Class.getClass(\"ptj-card-label\");\r\n      },\r\n      valueclass() {\r\n          return Class.getClass(\"ptj-card-value\");\r\n      }\r\n  },\r\n  components : {\r\n    \"ptj-widget\" : GCWidget\r\n  }\r\n});\r\n    \r\n\r\n</script>","<template>\r\n    <div :class=\"Class.getClass('ptj-tabs')\">\r\n        <div :class=\"Class.getClass('ptj-tabs-card')\" v-for=\"parent in store.parent_models\" :key=\"parent.name + '-parent'\">\r\n            <ptj-card :store=\"parent.store\" />\r\n        </div>\r\n        <ptj-nav :actions=\"store.siblings\" />\r\n        <div :class=\"Class.getClass('ptj-tabs-tab')\" >\r\n            <component :key=\"store.index\" :is=\"store.component\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport GCForm from \"./ptj-form.vue\"\r\nimport GCRepo from \"./ptj-repo.vue\"\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCSingleItem from \"./ptj-single-item.vue\"\r\nimport GCAccountHandler from \"./ptj-accounthandler.vue\"\r\nimport GCCard from \"./ptj-card.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        index: {\r\n            type : Boolean,\r\n        }\r\n    },\r\n    setup(props) {\r\n        if (props.index) Ctrl.next();\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n    components : {\r\n        'ptj-form' : GCForm,\r\n        'ptj-nav' : GCNav,\r\n        'ptj-single-item' : GCSingleItem,\r\n        'ptj-account-handler' : GCAccountHandler,\r\n        'ptj-repo' : GCRepo,\r\n        'ptj-card' : GCCard\r\n    }\r\n\r\n});\r\n</script>","<template>\r\n    <div :class=\"Class.getClass('ptj-tabs')\">\r\n        <div :class=\"Class.getClass('ptj-tabs-card')\" v-for=\"parent in store.parent_models\" :key=\"parent.name + '-parent'\">\r\n            <ptj-card :store=\"parent.store\" />\r\n        </div>\r\n        <ptj-nav :actions=\"store.siblings\" />\r\n        <div :class=\"Class.getClass('ptj-tabs-tab')\" >\r\n            <component :key=\"store.index\" :is=\"store.component\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport GCForm from \"./ptj-form.vue\"\r\nimport GCRepo from \"./ptj-repo.vue\"\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCSingleItem from \"./ptj-single-item.vue\"\r\nimport GCAccountHandler from \"./ptj-accounthandler.vue\"\r\nimport GCCard from \"./ptj-card.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        index: {\r\n            type : Boolean,\r\n        }\r\n    },\r\n    setup(props) {\r\n        if (props.index) Ctrl.next();\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n    components : {\r\n        'ptj-form' : GCForm,\r\n        'ptj-nav' : GCNav,\r\n        'ptj-single-item' : GCSingleItem,\r\n        'ptj-account-handler' : GCAccountHandler,\r\n        'ptj-repo' : GCRepo,\r\n        'ptj-card' : GCCard\r\n    }\r\n\r\n});\r\n</script>","<template>\r\n    <a :class=\"Class.getClass('ptj-account-details-logout')\" @click=\"logout\">Logout</a>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Client from \"./../js/client.js\"\r\nimport CtrlMapper from \"./../js/ctrlmap.js\"\r\nimport Class from \"./../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { Class }\r\n    },\r\n    methods : {\r\n        logout() {\r\n            Client.post(\"/core-logout\")\r\n            .then(response => {\r\n                CtrlMapper.reloadFromBase();\r\n            });\r\n        }\r\n    },\r\n    computed : {\r\n        classes() {\r\n            return Classes.getClass(\"ptj-account-details-logout\");\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <a :class=\"Class.getClass('ptj-account-details-logout')\" @click=\"logout\">Logout</a>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Client from \"./../js/client.js\"\r\nimport CtrlMapper from \"./../js/ctrlmap.js\"\r\nimport Class from \"./../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { Class }\r\n    },\r\n    methods : {\r\n        logout() {\r\n            Client.post(\"/core-logout\")\r\n            .then(response => {\r\n                CtrlMapper.reloadFromBase();\r\n            });\r\n        }\r\n    },\r\n    computed : {\r\n        classes() {\r\n            return Classes.getClass(\"ptj-account-details-logout\");\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n  <ptj-account-details v-if=\"isaccount\" />\r\n  <div :class=\"Class.getClass('ptj-root')\" v-for=\"group in groups\" :key=\"group.index\">\r\n    <ptj-tabs  :index=\"true\"  />\r\n </div>\r\n</template>\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCTabs from \"./ptj-tabs.vue\"\r\nimport GCAccountDetails from \"./ptj-account-details.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    name : 'ptj-root',\r\n    setup() {\r\n        return { Class }\r\n    },\r\n    computed : {\r\n        groups() {\r\n            return Ctrl.store.models;\r\n        },\r\n        isaccount() {\r\n            return Ctrl.store.profile == \"public\" ? false : true;\r\n        }\r\n    },\r\n    components : {\r\n        'ptj-tabs' : GCTabs, \"ptj-account-details\" : GCAccountDetails\r\n\r\n    }\r\n});\r\n</script>","<template>\r\n  <ptj-account-details v-if=\"isaccount\" />\r\n  <div :class=\"Class.getClass('ptj-root')\" v-for=\"group in groups\" :key=\"group.index\">\r\n    <ptj-tabs  :index=\"true\"  />\r\n </div>\r\n</template>\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCTabs from \"./ptj-tabs.vue\"\r\nimport GCAccountDetails from \"./ptj-account-details.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    name : 'ptj-root',\r\n    setup() {\r\n        return { Class }\r\n    },\r\n    computed : {\r\n        groups() {\r\n            return Ctrl.store.models;\r\n        },\r\n        isaccount() {\r\n            return Ctrl.store.profile == \"public\" ? false : true;\r\n        }\r\n    },\r\n    components : {\r\n        'ptj-tabs' : GCTabs, \"ptj-account-details\" : GCAccountDetails\r\n\r\n    }\r\n});\r\n</script>","import Ctrl from \"./presstojam/src/js/controller.js\"\r\nimport PTJRoot from \"./presstojam/src/components/ptj-root.vue\"\r\nimport { createApp } from \"vue\"\r\n\r\nfunction runApp(mount) {\r\n    const app = createApp(PTJRoot);\r\n    app.mount(mount);\r\n    return app;\r\n}\r\n\r\nexport default { \r\n    Ctrl, runApp\r\n}\r\n\r\n\r\n"],"names":["main_url","last_status","last_ok","custom_headers","status_handlers","debug","regCustomHeader","name","value","regStatusHandler","status","handler","setURL","url","regDebug","is_debug","run","headers","mode","cache","credentials","fetch","then","response","ok","json","val","omethod","method","Error","catch","err","console","log","setDebug","data","get","this","params","URLSearchParams","graph","i","Array","isArray","append","JSON","stringify","indexOf","toString","getprimary","post","body","put","patch","delete","Validator","constructor","_min","_max","_has","_has_not","_errors","min","max","has","push","nothas","nhas","validateSize","MIN_VALUE","MAX_VALUE","OK","validate","isNaN","length","match","HAS_NOT","HAS","error_invalid_map","getError","code","Field","obj","_name","_type","_is_primary","_is_parent","_valid","_atts","_confirm","_readonly","_placeholder","_conditions","_link","_reference","_error","_label","on","ref","_summary","_default","_validator","_value","_multiple","_is_validate_on","_options","reactive","_asset","computed","clean","set","x","field","validation","confirm","readonly","placeholder","atts","default","def","asset","conditions","link","type","multiple","mult","is_primary","is_parent","reference","error","label","summary","validateon","options","isprimary","required","isparent","Errors","showError","saveAsset","id","saveFile","Promise","resolve","setOptions","Client","__data","key","e","opt","Boolean","exp","calcValue","Asset","_size","_blob","_uploaded","_chunk_size","_url","_key","_key_field","chunk_size","chunk","blob","keyfield","size","uploaded","getChunk","index","start","end","view","DataView","buffer","n","byteLength","getInt8","join","loadFile","alert","delFile","file","reject","fr","FileReader","_self","onload","target","result","onerror","readAsArrayBuffer","promises","chunks","Math","ceil","__chunk","__blob","all","Model","_states","_default_state","_primary_key","_parent_key","_circular","_children","_active_children","_key_states","parent_key","primary_key","_settings","_active_state","_change_intention","store","fields","parent_models","title","component","rawcomponent","actions","next","primarykeyname","parentkeyname","circular","model","siblings","children","stage","groups","currentstate","_siblings","state","loadState","to","_to","injectCustomSettings","settings","loadurl","saveurl","__to","classes","replace","_state","parentkey","primarykey","change_intention","map","_stage","buildIntention","intent","intentions","init","_init","client","__status","mapResponse","_parent_models","par","pmodel","reverse","child","r","sibling","states","default_state","load","mapRepoData","parent","mapData","keymanager","rLoadObj","buildlink","action","submiturl","addKeys","resolveKeys","reload","active_repo","async","login","encodeParams","cstr","encodeURIComponent","Object","keys","decodeParams","window","location","search","param_obj","forEach","graph_obj","parse","decodeURIComponent","mapParams","regex","RegExp","action_map","CtrlGroupMap","_model","swap","convertToURL","convertFromURL","parts","split","parseInt","pop","maps","trigger_cb","route_base","createMap","trigger","trig","resetMaps","str_parts","param_str","Params","setBase","base","getMaps","cb","runRoute","uri","pathname","onpopstate","document","setRoute","history","pushState","hardSetRoute","route","regCallback","callback","_profile","_store","profile","_models","_seeker","buildModel","model_name","Map","models","splice","promise","Router","setSettings","mapper","initProfile","__profile","assumeRole","role","request","removeRole","buildLink","omaps","changes","change","ni","omap","cmap","runLink","runData","reloadFromBase","getStore","classes_dict","regClass","getClass","defineComponent","props","String","setup","Class","styleInject","css","insertAt","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","_createElementBlock","class","_ctx","components","GCError","_createElementVNode","onBlur","_createVNode","cval","isvalidateon","setValidateOn","_hoisted_2","option","methods","html","setFile","files","onChange","total","Number","progress","num","floor","fstate","globalerror","Ctrl","clearErrors","num_chunks","submit","message","statusText","GCInput","GCConfirm","GCSelect","GCRadio","GCCheckbox","GCTextarea","GCAssetField","GCProgressBar","onSubmit","_createBlock","stores","_createCommentVNode","onClick","val1","val2","active","show","toggleWidget","_hoisted_3","_renderSlot","GCFormSelect","GCFilterFormTime","GCFilterFormCheckbox","GCWidget","max_page_limit","pages","current_group","firstindex","max_options","maxoptions","showPages","Controller","current_route","query","GCNav","GCFilterForm","GCPagination","GCSelectFields","branch","draggable","ischild","toggle_state","toggle","setDraggable","closest","setAttribute","endDraggable","selectRow","getRowClass","str","sortable","arr","activechildren","concat","stop","onMousedown","onMouseup","cindex","GCDragNDrop","_handle","handle","_drop_target","drop_target","_drag_target","drag_target","_call_back","_x","_y","_offset_x","_offset_y","_judder","judder","_drag_node","_drop_node","_tree","tree","isJudder","y","dx","dy","getDirection","offset","elem","rect","getBoundingClientRect","win","ownerDocument","defaultView","top","pageYOffset","left","pageXOffset","insertAfter","drag_id","getAttribute","drop_id","sort","nextElementSibling","node","dragStart","ev","targ","dataTransfer","dropEffect","clientX","clientY","isDroppable","dragEnter","preventDefault","dir","dragOver","dragEnd","drop","initDD","drag","querySelectorAll","el","addAttribute","addEventListener","main","treeroot","onMounted","GCDragDrop","saveSort","GCTreeNode","orderBy","cell","order","orderby","xval","yval","overlimit","rowclass","rindex","GCRepoHeader","GCTree","GCTable","switchRoute","editnav","delnav","runDel","runDelete","GCBreadCrumbs","instance","next_profile","GCForm","labelclass","valueclass","GCSingleItem","GCAccountHandler","GCRepo","GCCard","logout","CtrlMapper","Classes","isaccount","GCTabs","GCAccountDetails","group","runApp","mount","app","createApp","PTJRoot"],"mappings":"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"}