{"version":3,"file":"ptj.cjs.js","sources":["../presstojam/src/js/client.js","../presstojam/src/js/error.js","../presstojam/src/js/validator.js","../presstojam/src/js/field.js","../presstojam/src/js/asset.js","../presstojam/src/js/data.js","../presstojam/src/js/model.js","../presstojam/src/js/params.js","../presstojam/src/js/ctrlmap.js","../presstojam/src/js/router.js","../presstojam/src/js/controller.js","../presstojam/src/js/classinjection.js","../presstojam/src/components/ptj-error.vue","../node_modules/style-inject/dist/style-inject.es.js","../presstojam/src/components/ptj-error.vue?vue&type=template&id=c05300a8&lang.js","../presstojam/src/components/ptj-form-input.vue","../presstojam/src/components/ptj-form-input.vue?vue&type=template&id=64b3afe6&lang.js","../presstojam/src/components/ptj-form-confirm.vue","../presstojam/src/components/ptj-form-confirm.vue?vue&type=template&id=62754d43&lang.js","../presstojam/src/components/ptj-form-select.vue","../presstojam/src/components/ptj-form-select.vue?vue&type=template&id=34644c49&lang.js","../presstojam/src/components/ptj-form-radio.vue","../presstojam/src/components/ptj-form-radio.vue?vue&type=template&id=2e1363be&lang.js","../presstojam/src/components/ptj-form-checkbox.vue","../presstojam/src/components/ptj-form-checkbox.vue?vue&type=template&id=0f4b9e50&lang.js","../presstojam/src/components/ptj-form-textarea.vue","../presstojam/src/components/ptj-form-textarea.vue?vue&type=template&id=0aa8b372&lang.js","../presstojam/src/components/ptj-form-asset.vue","../presstojam/src/components/ptj-form-asset.vue?vue&type=template&id=93648f9a&lang.js","../presstojam/src/components/ptj-progress-bar.vue","../presstojam/src/components/ptj-progress-bar.vue?vue&type=template&id=460b10ff&lang.js","../presstojam/src/components/ptj-form.vue","../presstojam/src/components/ptj-form.vue?vue&type=template&id=523d6cd0&lang.js","../presstojam/src/components/ptj-nav.vue","../presstojam/src/components/ptj-nav.vue?vue&type=template&id=262eb772&lang.js","../presstojam/src/components/ptj-filter-form-time.vue","../presstojam/src/components/ptj-filter-form-time.vue?vue&type=template&id=697f55ad&lang.js","../presstojam/src/components/ptj-filter-form-checkbox.vue","../presstojam/src/components/ptj-filter-form-checkbox.vue?vue&type=template&id=0743e0ba&lang.js","../presstojam/src/components/ptj-widget-window.vue","../presstojam/src/components/ptj-widget-window.vue?vue&type=template&id=da476e86&lang.js","../presstojam/src/components/ptj-filter-form.vue","../presstojam/src/components/ptj-filter-form.vue?vue&type=template&id=71ada21d&lang.js","../presstojam/src/components/ptj-pagination.vue","../presstojam/src/components/ptj-pagination.vue?vue&type=template&id=43dcd5a6&lang.js","../presstojam/src/components/ptj-selectfields.vue","../presstojam/src/components/ptj-selectfields.vue?vue&type=template&id=89ff5b7e&lang.js","../presstojam/src/components/ptj-repo-header.vue","../presstojam/src/components/ptj-repo-header.vue?vue&type=template&id=ba19bc28&lang.js","../presstojam/src/components/ptj-tree-node.vue","../presstojam/src/components/ptj-tree-node.vue?vue&type=template&id=1dcaa9f5&lang.js","../presstojam/src/js/dragndrop.js","../presstojam/src/components/ptj-tree.vue","../presstojam/src/components/ptj-tree.vue?vue&type=template&id=eebe52ac&lang.js","../presstojam/src/components/ptj-table.vue","../presstojam/src/components/ptj-table.vue?vue&type=template&id=15ab9672&lang.js","../presstojam/src/components/ptj-list.vue","../presstojam/src/components/ptj-list.vue?vue&type=template&id=f392d8ac&lang.js","../presstojam/src/components/ptj-repo.vue","../presstojam/src/components/ptj-repo.vue?vue&type=template&id=1c7fb47e&lang.js","../presstojam/src/components/ptj-single-item.vue","../presstojam/src/components/ptj-single-item.vue?vue&type=template&id=4f4c821c&lang.js","../presstojam/src/components/ptj-accounthandler.vue","../presstojam/src/components/ptj-accounthandler.vue?vue&type=template&id=fdfae9ee&lang.js","../presstojam/src/components/ptj-card.vue","../presstojam/src/components/ptj-card.vue?vue&type=template&id=3583d51c&lang.js","../presstojam/src/components/ptj-tabs.vue","../presstojam/src/components/ptj-tabs.vue?vue&type=template&id=00fda68a&lang.js","../presstojam/src/components/ptj-account-details.vue","../presstojam/src/components/ptj-account-details.vue?vue&type=template&id=c7cf5774&lang.js","../presstojam/src/components/ptj-root.vue","../presstojam/src/components/ptj-root.vue?vue&type=template&id=2c0fa1ee&lang.js","../import.js"],"sourcesContent":["let custom_headers  = {};\r\nlet main_url;\r\nlet status_handlers = {};\r\nlet debug = true;\r\nlet last_status;\r\nlet last_ok;\r\n\r\nexport default {\r\n\r\n    regCustomHeader(name, value) {\r\n        custom_headers[name] = value;\r\n    },\r\n\r\n    regStatusHandler(status, handler) {\r\n        status_handlers[status] = handler;\r\n    },\r\n\r\n    setURL(url) {\r\n        main_url = url;\r\n    },\r\n    regDebug(is_debug) {\r\n        debug = is_debug;\r\n    },\r\n\r\n    run(url, headers) {\r\n        \r\n        headers.mode = 'cors';\r\n        headers.cache = 'no-cache';\r\n        headers.credentials = 'include';\r\n        headers['Content-Type'] = 'application/json';\r\n        headers.headers = custom_headers;\r\n\r\n        const _self = this;\r\n\r\n        return fetch(main_url + url, headers)\r\n        .then(response => {\r\n            last_status = response.status;\r\n            last_ok = response.ok;\r\n            if (status_handlers[response.status]) {\r\n                status_handlers[response.status](response);\r\n            } else if (response.status == 401) {\r\n                return response.status;\r\n            } else {\r\n                return response.json();\r\n            }\r\n        })\r\n        .then(val => {\r\n            if (!last_ok) throw val;\r\n\r\n            if (last_status == 401) {\r\n                let omethod = headers.method;\r\n                headers.method = 'PUT';\r\n                return fetch(main_url + \"/core-switch-tokens\", headers)\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        headers.method = omethod;\r\n                        return fetch(main_url + url, headers)\r\n                        .then(response=> {\r\n                            if (response.status == 401) {\r\n                                throw new Error(\"Issue with refresh token\");\r\n                            } else if (response.ok) {\r\n                                return response.json();\r\n                            } else {\r\n                              //  profile.updateUser(\"public\", 0);\r\n                              //  throw Error(\"Logged out\");\r\n                            }\r\n                        });\r\n                    } else {\r\n                       // profile.updateUser(\"public\", 0);\r\n                       // throw Error(\"Logged out\");\r\n                    }\r\n                });\r\n            } else return val;\r\n        })\r\n        .catch(err => {\r\n            if (debug) console.log(err);\r\n            throw err;\r\n        });\r\n    }, \r\n    setDebug(data) {\r\n        if (!data) {\r\n            data = {\"__debug\" : true}\r\n        } else {\r\n            data[\"__debug\"] = true;\r\n        }\r\n        return data;\r\n    },\r\n    get(url, data) {\r\n        if (debug) data = this.setDebug(data);\r\n        if (data) {\r\n            const params = new URLSearchParams();\r\n            let graph = {};\r\n            for(let i in data) {\r\n                if (Array.isArray(data[i]) || (typeof data[i] == 'object' && data[i] !== null)) graph[i] = data[i];\r\n                else params.append(i, data[i]);\r\n            }\r\n\r\n            if (graph) {\r\n                params.append(\"graph\", JSON.stringify(graph));\r\n            }\r\n            if (url.indexOf(\"?\") == -1) url += \"?\";\r\n            else url += \"&\";\r\n            url += params.toString();\r\n        }\r\n        let headers = {};\r\n        headers.method = 'GET';\r\n        return  this.run(url, headers);\r\n    },\r\n\r\n    getprimary(url, data) {\r\n        return this.get(url, data);\r\n    },\r\n\r\n    post(url, data) {\r\n        //call our fetch response and return\r\n        if (debug) data = this.setDebug(data);\r\n        let headers = {};\r\n        headers.method = 'POST';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    },\r\n\r\n    put(url, data) {\r\n        if (debug) data = this.setDebug(data);\r\n        let headers = {};\r\n        headers.method = 'PUT';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    },\r\n\r\n    patch(url, data) {\r\n        if (debug) data = this.setDebug(data);\r\n        let headers = {};\r\n        headers.method = 'PATCH';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    },\r\n\r\n    delete(url, data) {\r\n        if (debug) data = this.setDebug(data);\r\n        let headers = {};\r\n        headers.method = 'DELETE';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    }\r\n}\r\n","const error_invalid_map = {\r\n            1 : \"too small\",\r\n            2 : \"too large\",\r\n            3 : \"contains incorrect characters\",\r\n            4 : \"doesn't contain required characters\",\r\n            5 : \"not unique\"\r\n}\r\n\r\nfunction getError(code) {\r\n    return error_invalid_map[code];\r\n}\r\n\r\nexport default {\r\n    getError\r\n}","export class Validator {\r\n\r\n    constructor() {\r\n        this._min;\r\n        this._max;\r\n        this._has = [];\r\n        this._has_not = [];\r\n        this._errors = {\r\n            'OK' : 0,\r\n            'MIN_VALUE' : 1,\r\n            'MAX_VALUE' : 2,\r\n            'HAS' : 3,\r\n            'HAS_NOT' : 4\r\n        }\r\n    }\r\n\r\n    set min(min) {\r\n        this._min = min;\r\n    }\r\n\r\n    set max(max) {\r\n        this._max = max;\r\n    }\r\n\r\n    set has(has) {\r\n        this._has.push(has);\r\n    }\r\n\r\n    set nothas(nhas) {\r\n        this._has_not.push(nhas);\r\n    }\r\n\r\n\r\n    validateSize(val) {\r\n        if (val < this._min) return this._errors.MIN_VALUE;\r\n        else if (val > this._max) return this._errors.MAX_VALUE;\r\n        else return this._errors.OK;\r\n    }\r\n\r\n\r\n    validate(val) {\r\n        let err;\r\n        if (isNaN(val)) {\r\n            const length = (val) ? val.length : 0;\r\n            err = this.validateSize(length);\r\n        } else {\r\n            err = this.validateSize(val);\r\n        }\r\n        if (err != this._errors.OK) return err;\r\n\r\n        for(let nhas of this._has_not) {\r\n            if (val.match(nhas)) return this._errors.HAS_NOT;\r\n        }\r\n\r\n        if (this._has.length == 0) return this._errors.OK;\r\n        \r\n        for(let has of this._has) {\r\n            if (val.match(this._has)) return this._errors.OK;\r\n        }\r\n        return this._errors.HAS;\r\n    }\r\n\r\n}","\r\nimport Errors from \"./error.js\"\r\nimport { reactive, computed, ref } from \"vue\"\r\nimport Client from \"./client.js\"\r\nimport { Validator } from \"./validator.js\"\r\n\r\nexport class Field {\r\n\r\n    constructor(name, obj = null) {\r\n        this._name = name;\r\n        this._value = ref(null);\r\n        this._type;\r\n        this._is_primary = false;\r\n        this._is_parent = false;\r\n        this._valid = 1;\r\n        this._atts={}\r\n        this._confirm = false;\r\n        this._readonly = false;\r\n        this._placeholder = \"\";\r\n        this._conditions;\r\n        this._link;\r\n        this._reference;\r\n        this._error = 0;\r\n        this._label = \"\";\r\n        this._on = ref(true);\r\n        this._summary = false;\r\n        this._default = null;\r\n        this._validator = new Validator();\r\n        this._multiple;\r\n        this._is_validate_on = false;\r\n        this._options = reactive([]);\r\n        this._asset = null;\r\n        this._display_value;\r\n\r\n        this.val = computed({ \r\n            get : () =>  {\r\n                return this._value.value;\r\n            },\r\n            set : (val) => {\r\n                this._value.value = (this._type == \"checkbox\") ? (val) ? 1 : 0 : val;\r\n                this._error = this.validate(val);\r\n            }     \r\n        });\r\n\r\n        this.on = computed({\r\n            get : () => {\r\n                return this._on.value;\r\n            },\r\n            set : (val) => {\r\n                this._on.value = val;\r\n            }\r\n        })\r\n\r\n       \r\n        if (obj) {\r\n            for (let x in obj) {\r\n                if (x == \"field\" || x == \"validator\") continue;\r\n                this[x] = obj[x];\r\n            }\r\n\r\n            if (obj.field) {\r\n                for(let x in obj.field) {\r\n                    this[x] = obj.field[x];\r\n                }\r\n            }\r\n\r\n            if (obj.validation) {\r\n                for(let x in obj.validation) {\r\n                    this._validator[x] = obj.validation[x];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    set confirm(confirm) {\r\n        this._confirm = confirm;\r\n    }\r\n\r\n    set readonly(readonly) {\r\n        this._readonly = readonly;\r\n    }\r\n\r\n    set placeholder(placeholder) {\r\n        this._placeholder = placeholder;\r\n    }\r\n\r\n    set atts(atts) {\r\n        this._atts = atts;\r\n    }\r\n\r\n    set default(def) {\r\n        this._default = def;\r\n    }\r\n\r\n    set asset(asset) {\r\n        this._asset = asset;\r\n    }\r\n\r\n\r\n    set conditions(conditions) {\r\n        this._conditions = conditions;\r\n    }\r\n\r\n    set display_value(value) {\r\n        this._display_value = value;\r\n    }\r\n\r\n    set link(link) {\r\n        this._link = link;\r\n    }\r\n\r\n    set name(name) {\r\n        this._name = name;\r\n    }\r\n\r\n    set type(type) {\r\n        this._type = type;\r\n    }\r\n\r\n    set multiple(mult) {\r\n        this._multiple = mult;\r\n    }\r\n\r\n    set is_primary(val) {\r\n        this._is_primary = val;\r\n    }\r\n\r\n    set is_parent(val) {\r\n        this._is_parent = val;\r\n    }\r\n\r\n    set reference(ref) {\r\n        this._reference = ref;\r\n    }\r\n\r\n    set error(err) {\r\n        this._error = err;\r\n    }\r\n\r\n    set label(label) {\r\n        this._label = label;\r\n    }\r\n\r\n    set summary(summary) {\r\n        this._summary = summary;\r\n    }\r\n\r\n    set validateon(on) {\r\n        this._is_validate_on = on;\r\n    }\r\n\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    get options() {\r\n        return this._options;\r\n    }\r\n\r\n    get isprimary() {\r\n        return this._is_primary;\r\n    }\r\n\r\n    get required() {\r\n        return (this._min > 0) ? true : false;\r\n    }\r\n\r\n    get summary() {\r\n        return this._summary;\r\n    }\r\n\r\n    get display_value() {\r\n        return (this._display_value) ? this._display_value : this.val;\r\n    }\r\n\r\n    get readonly() {\r\n        return this._readonly;\r\n    }\r\n\r\n    get placeholder() {\r\n        return this._placeholder;\r\n    }\r\n\r\n    get default() {\r\n        return this._default;\r\n    }\r\n\r\n    get atts() {\r\n        return this._atts;\r\n    }\r\n\r\n    get conditions() {\r\n        return this._conditions;\r\n    }\r\n\r\n    get link() {\r\n        return this._link;\r\n    }\r\n\r\n    get isparent() {\r\n        return this._is_parent\r\n    }\r\n\r\n    get multiple() {\r\n        return this._multiple;\r\n    }\r\n    \r\n    get confirm() {\r\n        return this._confirm;\r\n    }\r\n\r\n    get reference() {\r\n        return this._reference;\r\n    }\r\n\r\n    get error() {\r\n        if (!this._error) return \"\";\r\n        else if (isNaN(this._error)) return this._error;\r\n        else return Errors.getError(this._error);\r\n    }\r\n\r\n    get showError() {\r\n        return (this._is_validate_on && this._error) ? true : false;\r\n    }\r\n\r\n    get label() {\r\n        return this._label;\r\n    }\r\n\r\n\r\n    saveAsset(id) {\r\n        if (this._asset) {\r\n            let file = this.val;\r\n            if (file) return this._asset.saveFile(this.val, id);\r\n        } \r\n        return Promise.resolve();\r\n    }\r\n\r\n\r\n    setOptions(params) {\r\n        this._options.length = 0;\r\n        if (this._reference) {\r\n            Client.get(this._reference, params)\r\n                .then(response => {\r\n                    for (let i in response.__data) {\r\n                        if (i.indexOf(\"__\") === 0) continue;\r\n                        this._options.push({ key: response.__data[i].id, value: response.__data[i].value });\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                });\r\n        } else {\r\n            try {\r\n                for (let opt of this._atts.options) {\r\n                    this._options.push({ key: opt, value: opt });\r\n                }\r\n            } catch (e) {\r\n                console.log(\"options not set for \", this._name);\r\n            }\r\n        }\r\n    }\r\n\r\n    clean(val) {\r\n        return (this._type == \"checkbox\") ? Boolean(val) : val;\r\n    }\r\n\r\n    validate(value) {\r\n        return this._validator.validate(value);\r\n    }\r\n\r\n    exp() {\r\n        return {\r\n            name : this._name,\r\n            type : this._type,\r\n            atts : this._atts\r\n        }\r\n    }\r\n\r\n    calcValue(value) {\r\n        if (!value) return \"\";\r\n        else return value;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","\r\nimport Client from \"./client.js\"\r\n\r\nexport class Asset {\r\n\r\n    constructor() {\r\n      this._size = 0;\r\n      this._blob = null;\r\n      this._uploaded = false;\r\n      this._chunk_size = 0;\r\n      this._url;\r\n      this._key = 0;\r\n      this._key_field;\r\n    }\r\n\r\n    set chunk_size(chunk) {\r\n      this._chunk_size = chunk;\r\n    }\r\n\r\n    set blob(blob) {\r\n      this._blob = blob;\r\n    }\r\n\r\n    set url(url) {\r\n        this._url = url;\r\n    }\r\n\r\n    set key(key) {\r\n        this._key = key;\r\n    }\r\n\r\n    set keyfield(field) {\r\n        this._key_field = field;\r\n    }\r\n\r\n    get blob() {\r\n      return this._blob;\r\n    }\r\n\r\n    get size() {\r\n      return this._size;\r\n    }\r\n\r\n    get uploaded() {\r\n      return this._uploaded;\r\n    }\r\n\r\n    get chunk_size() {\r\n      return this._chunk_size;\r\n    }\r\n\r\n\r\n    get url() {\r\n        return this._url;\r\n    }\r\n\r\n\r\n    getChunk(index) {\r\n      const start = (this._chunk_size == 0) ? 0 : index * this._chunk_size;\r\n      let end = (this._chunk_size == 0) ? this._size : (index + 1) * this._chunk_size;\r\n      if (end > this._size) end = this._size;\r\n      const view = new DataView(this._blob, start, end - start);\r\n      let buffer = [];\r\n      for(let i = 0, n=view.byteLength; i<n; ++i) {\r\n        buffer.push(view.getInt8(i));\r\n      }\r\n      return buffer.join('');\r\n    }\r\n\r\n\r\n    loadFile(id) {\r\n        let data = {};\r\n        data[this._key_field] = id;\r\n        return Client.get(this._url, data)\r\n        .catch(e => {\r\n            alert(e);\r\n        });\r\n    }\r\n\r\n    delFile(id) {\r\n        let data = {};\r\n        data[this._key_field] = id;\r\n        return Client.delete(this._url, data)\r\n        .catch(e => {\r\n            alert(e);\r\n        });\r\n    }\r\n\r\n    saveFile(file, id) {\r\n        //this needs to be a promise\r\n        this._size = file.size;\r\n        return new Promise(( resolve, reject) => {\r\n          const fr = new FileReader();\r\n          let _self = this;\r\n          fr.onload = function(e) {\r\n            _self.blob = e.target.result;\r\n            resolve(fr.result);\r\n          }\r\n          fr.onerror = reject;\r\n          fr.readAsArrayBuffer(file);  \r\n        })\r\n        .then(() => {\r\n          let promises = [];\r\n          //else, do we have any assets?\r\n          let chunks = (this.chunk_size == 0) ? 1 : Math.ceil(this.size / this.chunk_size);\r\n          for(let i=0; i<chunks; ++i) {\r\n              const data = {};\r\n              data.__chunk = i;\r\n              data.__blob = this.getChunk(i);\r\n              data.id = id;\r\n              promises.push(Client.put(this._url, data));\r\n          }\r\n          return Promise.all(promises);\r\n        });\r\n      }\r\n\r\n}","import { computed, ref } from \"vue\"\r\n\r\n\r\nexport class DataCell {\r\n\r\n    constructor(val = null, display = null) {\r\n        this._value = ref(null);\r\n        this._display = ref(null);\r\n\r\n        if (val !== null) {\r\n            this._value.value = val;\r\n        }\r\n\r\n        if (display !== null) {\r\n            this._display.value = display;\r\n        }\r\n\r\n        this.val = computed(() =>  {\r\n            return this._value.value;  \r\n        });\r\n\r\n        this.display = computed(() => {\r\n            if (this._display.value) return this._display;\r\n            else return this._value.value;\r\n        });\r\n    }\r\n\r\n    toString() {\r\n        return this.display;\r\n    }\r\n\r\n\r\n}","import client from \"./client.js\"\r\nimport { Field } from \"./field.js\"\r\nimport { reactive } from \"vue\"\r\nimport { Asset } from \"./asset.js\"\r\nimport { DataCell } from \"./data.js\"\r\n\r\n\r\nexport class Model {\r\n    constructor() {\r\n        this._active_children = [];\r\n        this._active_state;\r\n        this._change_intention;\r\n        this._children = [];\r\n        this._circular;\r\n        this._default_state;\r\n        this._key_states = { parent_key : null, primary_key : null };\r\n        this._name;\r\n        this._parent_key;\r\n        this._primary_key;\r\n        this._settings = {};\r\n        this._states = {};\r\n        this._main_model;\r\n        this._to;\r\n    \r\n        this.store = reactive({\r\n            fields : {},\r\n            parent_models : [],\r\n            label : '',\r\n            title : '',\r\n            data : [],\r\n            component : '',\r\n            rawcomponent : '',\r\n            actions : [],\r\n            next : null,\r\n            index : '',\r\n            primarykeyname : '',\r\n            parentkeyname : '',\r\n            circular : '',\r\n            model :  this._name,\r\n            siblings : [],\r\n            children : [],\r\n            stage : 0,\r\n            groups : [],\r\n            classes : \"\"\r\n        });\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    get currentstate() {\r\n        return (this._active_state) ? this._active_state : this._default_state;\r\n    }\r\n\r\n\r\n    get children() {\r\n        return this._children;\r\n    }\r\n\r\n    get siblings() {\r\n        if (this._siblings.length > 1) return this._siblings;\r\n        else return [];\r\n    }\r\n\r\n    set state(state) {\r\n        this._active_state = (state) ? state : this._default_state;\r\n        this._change_intention = null;\r\n        this.store.settings = { \"fields\" : null};\r\n        if (this._settings[this._active_state]) this.store.settings = this._settings[this._active_state];\r\n        this.applySettings();\r\n        this.loadState();\r\n    }\r\n\r\n    set groups(groups) {\r\n        this.store.groups = groups;\r\n    }\r\n\r\n    get main_model() {\r\n        return this._main_model;\r\n    }\r\n\r\n    set main_model(model) {\r\n        this._main_model = model;\r\n    }\r\n\r\n    get key() {\r\n        if (this._active_state == \"post\" || this._active_state == \"get\") {\r\n            return this._key_states.parent_key;\r\n        } else {\r\n            return this._key_states.primary_key;\r\n        }\r\n    }\r\n\r\n    set to(to) {\r\n        this._to = to;\r\n    }\r\n\r\n    set key(key) {\r\n        if (this._active_state == \"get\" || this._active_state == \"post\") {\r\n            this._key_states.parent_key = key;\r\n        } else {\r\n            this._key_states.primary_key = key;\r\n        }\r\n\r\n        if (this._active_state == \"post\" || this._active_state == \"put\") {\r\n            for(let name in this.store.fields) {\r\n                if (this.store.fields[name].on && this.store.fields[name].type == \"select\") {\r\n                    this.store.fields[name].setOptions(this.params);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    set stage(stage) {\r\n        this.store.stage = stage;\r\n    }\r\n\r\n    set name(name) {\r\n        this._name = name;\r\n    }\r\n\r\n    set change_intention(intention) {\r\n        this._change_intention = intention;\r\n    }\r\n\r\n    injectCustomSettings(settings) {\r\n        this._settings = settings;\r\n    }\r\n\r\n    snakeCase(name) {\r\n        return name.replace(\"-\", \"_\");\r\n    }\r\n\r\n \r\n    get loadurl() {\r\n        let url = \"/\" + this._name;\r\n        if (this._active_state == \"getprimary\" ||  this._active_state == \"put\") url += \"-primary\";\r\n        return url;\r\n    }\r\n\r\n    get saveurl() {\r\n        let url = \"/\" + this._name;\r\n        return url;\r\n    }\r\n\r\n    get params() {\r\n        let params = {};\r\n        if (this._active_state == \"get\" || this._active_state == \"post\") {\r\n            if (this._key_states.parent_key) {\r\n                params[this._parent_key] = this._key_states.parent_key;\r\n            }\r\n        } else if (this._active_state == \"put\" || this._active_state == \"getprimary\" || this._active_state == \"delete\") {\r\n            params[this._primary_key] = this._key_states.primary_key;\r\n        }\r\n        if (this.to) params.__to = this.to;\r\n        return params;\r\n    }\r\n\r\n    get classes() {\r\n        return this._name.replace(\"_\", \"-\") + \" \" + this._state;\r\n    }\r\n\r\n    get to() {\r\n        return this._to;\r\n    }\r\n\r\n    get state() {\r\n        return this._active_state;\r\n    }\r\n\r\n    get parentkey() {\r\n        return this._parent_key;\r\n    }\r\n\r\n    get primarykey() {\r\n        return this._primary_key;\r\n    }\r\n\r\n    get index() {\r\n        return this._name + \"-\" + this._active_state;\r\n    }\r\n\r\n    get stage() {\r\n        return this.store.stage;\r\n    }\r\n\r\n    get change_intention() {\r\n        return this._change_intention;\r\n    }\r\n\r\n    get map() {\r\n        return {\r\n            model : this._name,\r\n            key : this.key,\r\n            state : this._active_state,\r\n            to : this.to,\r\n            stage : this.stage\r\n        }\r\n    }\r\n\r\n    getSummary(field, data) {\r\n        let sum = [];\r\n        for(let tb in data[field.reference]) {\r\n            sum.push(data[field.reference][tb]);\r\n        }\r\n        return sum.join(\" \");\r\n    }\r\n\r\n    applySettings() {\r\n        if (this.store.settings) {\r\n            \r\n            if (this.store.settings.groups) {\r\n                this.store.groups = this.store.settings.groups;\r\n            }\r\n\r\n            if (this.store.settings.disable_filter) {\r\n                this.store.disable_filter = true;\r\n            }\r\n\r\n            if (this.store.settings.disable_selectfields) {\r\n                this.store.disable_selectfields = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    buildIntention(state, key = null) {\r\n        if (!key) key = this._key;\r\n        this._change_intention = {state : state, key : key, target : 0};\r\n        if (this.store.settings && this.store.settings.change_intention) {\r\n            for(let setting in this.store.settings.change_intention) {\r\n                this._change_intention[setting] = this.store.settings.change_intention[setting];\r\n            }\r\n        }\r\n    }\r\n\r\n    mapResponse(response) {\r\n        this._name = response.model;\r\n        this.store.model = this._name;\r\n        this._primary_key = response.primarykey;\r\n        this._parent_key = response.parentkey;\r\n        this._children = response.children;\r\n        this.store.children = [];\r\n        for(let child of response.children) {\r\n            this.store.children.push({ r : () => {\r\n                this.buildIntention(\"get\", this._key_states.primary_key);\r\n                this._change_intention.model = child.name;\r\n            }, n : child.label });\r\n        }\r\n\r\n        this.store.siblings = [];\r\n        for(let sibling of response.siblings) {\r\n            this.store.siblings.push({ r : () => {\r\n                this.buildIntention(\"get\", this._key_states.parent_key);\r\n                this._change_intention.model = sibling.name;\r\n            }, n : sibling.label });\r\n        }\r\n\r\n        this._circular = response.circular;\r\n\r\n        this.store.primarykeyname = response.primarykey;\r\n        this.store.parentkeyname = response.parentkey;\r\n        this.store.circular = response.circular;\r\n\r\n        //build parent states\r\n        this.store.fields = {};\r\n        for (let i in response.fields) {\r\n            this.store.fields[i] = new Field(i, response.fields[i]);\r\n            if (this.store.fields[i].type == \"asset\") {\r\n                let asset = new Asset();\r\n                asset.url = this._name + \"-\" + i;\r\n                asset.keyfield = this.store.primarykeyname; \r\n                this.store.fields[i].asset = asset;\r\n            } \r\n        }\r\n\r\n        this._states = response.states;\r\n        this._default_state = response.default_state;\r\n\r\n        let par = response.to;\r\n        while(par) {\r\n            let pmodel = new Model({ model : par.model, key : 0 });\r\n            pmodel.mapResponse(par);\r\n            pmodel.main_model = this;\r\n            pmodel.state = \"getprimary\";\r\n            this.store.parent_models.push(pmodel);\r\n            par = par.to;\r\n        }\r\n    }\r\n\r\n\r\n    load() {\r\n        this.store.data = [];\r\n        for(let field in this.store.fields) {\r\n            this.store.fields[field].val = null;\r\n        }\r\n        if (this._active_state == \"get\") {\r\n            return client.get(this.loadurl, this.params)\r\n            .then(response => {\r\n                if (response.__status != \"SUCCESS\") throw new Error(response);\r\n                this.mapRepoData(response);\r\n                return response;\r\n            });\r\n           \r\n\r\n        } else if (this._active_state == \"getprimary\" || this._active_state == \"put\") {\r\n            return client.get(this.loadurl, this.params)\r\n            .then(response => {\r\n                if (response.__status != \"SUCCESS\") throw new Error(response);\r\n                \r\n                    this.mapData(response);\r\n\r\n                    for(let parent of this.store.parent_models) {\r\n                        if (response[parent.name]) {\r\n                                //need to set the field data for this\r\n                            parent.mapData(response[parent.name]);\r\n                        }\r\n                    }\r\n            });\r\n        } else if (this._active_state == \"post\" && this.store.parent_models.length > 0) {\r\n            let parent = this.store.parent_models[0];\r\n            parent.keymanager = this._key_states.parent_key;\r\n            parent.to = this.to;\r\n            return client.get(parent.loadurl, parent.params)\r\n            .then(response => {\r\n                if (response.__status != \"SUCCESS\") throw new Error(response);\r\n                let parent = this.store.parent_models[this.store.parent_models.length - 1];\r\n                parent.mapData(response);\r\n                for(let parent of this.store.parent_models) {\r\n                    parent.mapData(response[parent.name]);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n        } else {\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n\r\n    rLoadObj(data) {\r\n        let obj={};\r\n        for(const field in this.store.fields) {\r\n            obj[field] = (this.store.fields[field].reference) ? new DataCell(data[field], this.getSummary(this.store.fields[field], data)) : new DataCell(data[field]);\r\n        }\r\n        if (this._circular && data[this._name]) {\r\n            if (data[this._name]) {\r\n                obj[this._name] = [];\r\n                for(const i in data[this._name]) {\r\n                    obj[this._name].push(this.rLoadObj(data[this._name][i]));\r\n                }\r\n            }\r\n        }\r\n\r\n        for(const i in this._active_children) {\r\n            const name = this._active_children[i];\r\n            if (data[name]) {\r\n                obj[name] = [];\r\n                for(const x in data[name]) {\r\n                    obj[name].push(this.rLoadObj(data[name][x]));\r\n                }\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    indexData(data) {\r\n        let indexes = {};\r\n        for(const key in data) {\r\n            const row = data[key];\r\n            for(let group of this.store.groups) {\r\n                group = this.snakeCase(group);\r\n                if (!indexes[group]) indexes[group] = {};\r\n                let ckey = row[group].val;\r\n                if (!indexes[group][ckey]) {\r\n                    indexes[group][ckey] = {\"display\": \"\", \"contains\":[]};\r\n                    indexes[group][ckey].display= row[group].display;\r\n                }\r\n                indexes[group][ckey].contains.push(key);\r\n            }\r\n        }\r\n        return indexes;\r\n    }\r\n\r\n    mapRepoData(response) {\r\n        this.store.data = [];\r\n        for (const i in response.__data) {\r\n            const data = this.rLoadObj(response.__data[i]);\r\n            this.store.data.push(data);\r\n            for(let x in this.store.parent_models) {\r\n                let parent = this.store.parent_models[x];\r\n                parent.mapData(response.__data[i][parent.name]);\r\n            }\r\n        }\r\n\r\n        \r\n        //now we need to group the data by\r\n        this.store.indexes = this.indexData(this.store.data);\r\n    }\r\n\r\n    mapData(data) {\r\n        for(const i in this.store.fields) {\r\n            this.store.fields[i].val = (data[i]) ? data[i] : null;\r\n        }\r\n    }\r\n\r\n    buildlink = (state) => {\r\n        return () => {\r\n            this.buildIntention(state);\r\n        }\r\n    }\r\n\r\n\r\n    loadState() {\r\n        this.store.actions = [];\r\n        this.store.component = \"\";\r\n        this.store.rawcomponent = \"\";\r\n        this.store.data = [];\r\n        this.store.title = this._states[this._active_state].title;\r\n        this.store.label = this._states[this._active_state].label;\r\n        this.store.action = this._active_state;\r\n        this.store.method = this.store.action;\r\n        this.store.submiturl = this.saveurl;\r\n        this.store.classes = this._name + \" \" + this._active_state;\r\n        if (!this.store.settings) this.store.settings = {};\r\n        this.store.primarykey = () => {\r\n            return this._key_states.primary_key;\r\n        }\r\n\r\n        this.store.addKeys = () => {};\r\n        this.store.resolveKeys = () => {};\r\n    \r\n        let states = {\r\n            'get': () => {\r\n                this.store.actions = [];\r\n                if (this._states.post) {\r\n                    this.store.actions.push({ r: this.buildlink(\"post\"), n: this._states.get.actions.post });\r\n                }\r\n\r\n                this.store.rawcomponent = (this.store.groups.length > 0) ? \"ptj-list\" : (this._circular || this._active_children.length > 0) ? \"ptj-tree\" : \"ptj-table\";\r\n                /*\r\n                if (this._states.getprimary) {\r\n                    actions.getprimary = { r : this.buildlink(\"getprimary\", params), n : this._states.getprimary.label };\r\n                } else {\r\n                    if (this._states.put) {\r\n                        actions.push({ r : this.buildlink(\"put\", params), n : this._states.put.label });\r\n                    }\r\n                    if (this._states.delete) {\r\n                        actions.push({ r : this.buildlink(\"delete\", params), n : this._states.delete.label });\r\n                    }\r\n                }\r\n                */\r\n               this.store.component = \"ptj-repo\";\r\n               this.store.index = this._name + \"-get\";\r\n               this.store.reload = () => { this.load(); };\r\n\r\n               this.store.next = (key) => {\r\n                    if (this._states.getprimary) {\r\n                        this.buildIntention(\"getprimary\", key);\r\n                    } else if (this._states.put) {\r\n                        this.buildIntention(\"put\", key);\r\n                    }\r\n                    this.store.active_repo = [];\r\n                }\r\n\r\n                this.store.addKeys = data => {\r\n\r\n                };\r\n\r\n                if (!this.store.settings.fields) {\r\n                    this.store.settings.fields = [];\r\n                    for(let i in this.store.fields) {\r\n                        if (i == this.primarykey || this.store.fields[i].summary) {\r\n                            this.store.settings.fields.push(i);\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                this.store.submiturl = this.loadurl;\r\n            },\r\n            'getprimary': () => {\r\n                this.store.actions = [];\r\n                this.store.index = this._name + \"-getprimary\";\r\n                if (this._states.put) {\r\n                    this.store.actions.push({ r: this.buildlink(\"put\"), n: this._states.getprimary.actions.put });\r\n                }\r\n                if (this._states.delete) {\r\n                    this.store.actions.push({ r: async () => {\r\n                        if (confirm(\"Are you sure you want to delete this record and all associated children?\")) {\r\n                            let data = {};\r\n                            data[this._primary_key] = this._key_states.primary_key;\r\n                            await client.delete(\"/\" + this._name, data);\r\n                            this.buildIntention(\"get\", this._key_states.parent_key);\r\n                        }\r\n                    }, n: this._states.getprimary.actions.delete });\r\n                }\r\n                this.store.component = \"ptj-single-item\";\r\n\r\n                if (!this.store.settings.fields) {\r\n                    this.store.settings.fields = [];\r\n                    for(let i in this.store.fields) {\r\n                        this.store.settings.fields.push(i);\r\n                    }\r\n                }\r\n\r\n                if (this._main_model) {\r\n                    this.store.next = () => {\r\n                        this._main_model.change_intention = {state : \"getprimary\", key : this.key, target : 0, model : this._name };\r\n                    }\r\n                }\r\n            },\r\n            'post': () => {\r\n                this.store.component = (this._states.login) ? \"ptj-account-handler\" : \"ptj-form\";\r\n                this.store.index = this._name + \"-post\";\r\n                this.store.actions = [];\r\n                if (this._states.login) {\r\n                    this.store.actions.push({ r: this.buildlink(\"login\"), n: this._states.post.actions.login });\r\n                }\r\n\r\n                this.store.next = () => {\r\n                    this.buildIntention(\"get\");\r\n                };\r\n\r\n                if (!this.store.settings.fields) {\r\n                    this.store.settings.fields = [];\r\n                    for(let i of this._states.post.fields) {\r\n                        this.store.settings.fields.push(i);\r\n                    }\r\n                }\r\n\r\n\r\n                this.store.addKeys = data => {\r\n                    data[this._parent_key] = this._key_states.parent_key;\r\n                };\r\n\r\n                this.store.resolveKeys = data => {\r\n                    this._key_states.primary_key = data[this._primary_key];\r\n                }\r\n            },\r\n            'put': () => {\r\n                this.store.component = \"ptj-form\";\r\n                this.store.index = this._name + \"-put\";\r\n                this.store.actions = [];\r\n                this.store.next = () => {\r\n                    if (this._states.getprimary) {\r\n                        this.buildIntention(\"getprimary\");\r\n                    } else {\r\n                        this.buildIntention(\"get\");\r\n                    }\r\n                }\r\n\r\n\r\n                if (!this.store.settings.fields) {\r\n                    this.store.settings.fields = [];\r\n                    for(let i of this._states.put.fields) {\r\n                        this.store.settings.fields.push(i);\r\n                    }\r\n                }\r\n               \r\n\r\n                this.store.addKeys = data => {\r\n                    data[this._primary_key] = this._key_states.primary_key;\r\n                };\r\n            },\r\n            'login': () => {\r\n                this.store.component = \"ptj-account-handler\";\r\n                this.store.index = this._name + \"-login\";\r\n                this.store.actions = [];\r\n                if (this._states.post) {\r\n                    this.store.actions.push({ r: this.buildlink(\"post\"), n: this._states.login.actions.post });\r\n                }\r\n\r\n                if (!this.store.settings.fields) {\r\n                    this.store.settings.fields = [];\r\n                    for(let i of this._states.login.fields) {\r\n                        this.store.settings.fields.push(i);\r\n                    }\r\n                }\r\n\r\n                this.store.method = \"post\";\r\n                this.store.submiturl += \"-login\";\r\n                this.store.next = null;\r\n            }\r\n        }\r\n\r\n        states[this._active_state]();\r\n\r\n        for(let i in this.store.fields) {\r\n            this.store.fields[i].on = false;\r\n        }\r\n\r\n        for(let field of this.store.settings.fields) {\r\n            this.store.fields[field].on = true;\r\n        }\r\n    }\r\n    \r\n}","function decodeParams() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    let param_obj = {};\r\n    params.forEach(function(value, key) {\r\n        if (key == \"graph\") {\r\n            let graph_obj = JSON.parse(decodeURIComponent(value));\r\n            param_obj = { ...param_obj, ...graph_obj};\r\n        } else {\r\n            param_obj[key] = value;\r\n        }\r\n    });\r\n    return param_obj;\r\n} \r\n\r\n\r\nfunction encodeParams(params) {\r\n    let graph = {};\r\n    let cstr = [];\r\n    for(let i in params) {\r\n        if (typeof params[i] === 'object' && params[i]) {\r\n            graph[i] = params[i];\r\n        } else if (Array.isArray(params[i])) {\r\n            graph[i] = params[i];\r\n        } else {\r\n            cstr.push(i + \"=\" + encodeURIComponent(params[i]));\r\n        }\r\n    }\r\n\r\n    if (Object.keys(graph).length > 0) cstr.push( \"graph=\" + encodeURIComponent(JSON.stringify(graph)));\r\n    return cstr.join(\"&\");\r\n}\r\n\r\nfunction mapParams(url, params) {\r\n    for(let i in params) {\r\n        const key = \"${\" + i + \"}\";\r\n        const regex = new RegExp(key, \"g\");\r\n        url = url.replace(regex, params[i]);\r\n    }\r\n    return url;\r\n}\r\n\r\nexport default {\r\n    encodeParams,\r\n    decodeParams,\r\n    mapParams\r\n}","import Params from \"./params.js\"\r\n\r\n\r\nconst action_map = {\r\n    'post' : '-create',\r\n    'put' : '-update',\r\n    'delete' : '-delete',\r\n    'login' : '-login',\r\n    'logout' : '-logout',\r\n    'getprimary' : '-primary',\r\n    'get' : ''\r\n};\r\n\r\nclass CtrlGroupMap {\r\n\r\n    constructor() {\r\n        this._model;\r\n        this._state = \"\";\r\n        this._key = 0;\r\n        this._to;\r\n    }\r\n\r\n    set model(model) {\r\n        this._model = model;\r\n    }\r\n\r\n    set state(state) {\r\n        this._state = state;\r\n    }\r\n\r\n    set key(key) {\r\n        this._key = key;\r\n    }\r\n\r\n    set to(to) {\r\n        this._to = to;\r\n    }\r\n\r\n    get model() {\r\n        return this._model;\r\n    }\r\n\r\n    get state() {\r\n        return this._state;\r\n    }\r\n\r\n    get key() {\r\n        return this._key;\r\n    }\r\n\r\n    get to() {\r\n        return this._to;\r\n    }\r\n\r\n    swap(map) {\r\n        this._model = map.model;\r\n        this._state = map.state;\r\n        this._key = map.key;\r\n        this._to = map.to;\r\n    }\r\n\r\n\r\n    convertToURL() {\r\n        let model = this._model;\r\n        let state = this._state;\r\n        let key = this._key;\r\n        let to = this._to;\r\n\r\n        let url = model + action_map[state];\r\n        if (key) url += \"-\" + key;\r\n        if (to) url += \"-to-\" + to;\r\n        return url;\r\n    }\r\n\r\n    convertFromURL(url) {\r\n        if (!url) return;\r\n        let parts = url.split(\"-to-\");\r\n        if (parts.length > 1) {\r\n            this._to = parts[1];\r\n            url = parts[0];\r\n        }\r\n        parts = url.split(\"-\");\r\n        let key = parseInt(parts[parts.length - 1]);\r\n        if (isNaN(key)) this._key = 0;\r\n        else {\r\n            parts.pop();\r\n            this._key = key;\r\n        }\r\n        \r\n        if (parts.length == 0) {\r\n            throw new Error(\"Can't convert this url string: \" + url);\r\n        }\r\n        for(let i in action_map) {\r\n            if (action_map[i] == \"-\" + parts[parts.length - 1]) {\r\n                this._state = i\r\n                parts.pop();\r\n                break;\r\n            }\r\n        }\r\n        this._model = parts.join(\"-\");\r\n    }\r\n}\r\n\r\nlet maps = [];\r\nlet trigger_cb = null;\r\nlet route_base = \"\";\r\nlet params = {};\r\n\r\nfunction regParam(name, val) {\r\n    params[name] = val;\r\n}\r\n\r\nfunction removeParam(name) {\r\n    delete params[name];\r\n}\r\n\r\n\r\nfunction resetMaps() {\r\n    maps = [];\r\n}\r\n\r\nfunction trigger(trig) {\r\n    trigger_cb = trig;\r\n}\r\n\r\nfunction createMap() {\r\n    let map = new CtrlGroupMap();\r\n    maps.push(map);\r\n    return map;\r\n}\r\n\r\nfunction convertToURL() {\r\n    let str_parts = [];\r\n    for(let map of maps) {\r\n        str_parts.push(map.convertToURL());\r\n    }\r\n    let url = route_base + \"/\" + str_parts.join(\"/\");\r\n\r\n    const param_str = Params.encodeParams(params);\r\n    if (param_str) url += \"?\" + param_str;\r\n\r\n    return url;\r\n}\r\n\r\nfunction convertFromURL(url) {\r\n    url = url.replace(route_base, \"\");\r\n    url = url.replace(/^\\/+|\\/+$/g, '');\r\n    let parts = url.split(\"/\");\r\n    maps = [];\r\n    for(let i in parts) {\r\n        let map = createMap();\r\n        map.convertFromURL(parts[i]);\r\n    }\r\n    if (trigger_cb) trigger_cb();\r\n}\r\n\r\n\r\nfunction setBase(base) {\r\n    //trim any leading or trailing / so we can be sure we are dealing with the correct format\r\n    base = base.replace(/^\\/+|\\/+$/g, '');\r\n    route_base = \"/\" + base;\r\n}\r\n\r\nfunction getMaps() {\r\n    return maps;\r\n}\r\n\r\n\r\n\r\n\r\nexport default {\r\n    trigger,\r\n    resetMaps,\r\n    createMap,\r\n    convertToURL,\r\n    convertFromURL,\r\n    setBase,\r\n    getMaps\r\n}","\r\nconst history = [];\r\nlet cb;\r\n\r\n\r\n\r\nfunction setRoute(uri, title = '') {\r\n    history.push({ r : uri, label : title });\r\n    window.history.pushState({'name' : uri}, document.title, uri);\r\n    runRoute(uri);\r\n}\r\n\r\n\r\nfunction hardSetRoute(route) {\r\n    window.location = route;\r\n}\r\n\r\n\r\nwindow.onpopstate = function() {\r\n    runRoute(document.location.pathname);\r\n}\r\n\r\n\r\nfunction runRoute(uri) {\r\n    if (!uri) uri = window.location.pathname;\r\n    if (cb) cb(uri);\r\n}\r\n\r\nfunction regCallback(callback) {\r\n    cb = callback;\r\n}\r\n\r\n\r\n\r\n\r\nexport default {\r\n    setRoute,\r\n    hardSetRoute,\r\n    runRoute,\r\n    regCallback\r\n}","import { reactive } from \"vue\"\r\nimport { Model } from \"./model.js\"\r\nimport Map from \"./ctrlmap.js\"\r\nimport Client from \"./client.js\"\r\nimport Router from \"./router.js\"\r\n\r\nlet _store = reactive({ 'models' : [], profile : null });\r\nlet _settings = {};\r\nlet _models = [];\r\nlet _seeker = -1;\r\n\r\n\r\nfunction setSettings(settings) {\r\n    if (settings.client) {\r\n        Client.setURL(settings.client.url);\r\n        if (settings.client.custom_headers) {\r\n            for(let i in settings.client.custom_headers) {\r\n                Client.regCustomHeader(i, settings.client.custom_headers[i]);\r\n            }\r\n        }\r\n    \r\n        if (settings.client.debug) {\r\n            Client.regDebug(true);\r\n        }\r\n    \r\n        Client.regStatusHandler(403, function() {\r\n            alert(\"Page not found\");\r\n        });\r\n    }\r\n    \r\n    if (settings.mapper) {\r\n        if (settings.mapper.base) Map.setBase(settings.mapper.base);\r\n    }\r\n\r\n    if (settings.models) _settings = settings.models;\r\n}\r\n\r\n\r\nfunction initProfile() {\r\n    return Client.get(\"/core-check-user\")\r\n    .then(response => {\r\n        _store.profile = response.__profile;\r\n        return _store.profile;\r\n    });\r\n}\r\n\r\nfunction assumeRole(role) {\r\n    return Client.post('/core-assume-role', { 'role' : role })\r\n    .then(request => {\r\n        _store.profile = request.__profile;\r\n        return _store.profile;\r\n    });\r\n}\r\n\r\nfunction removeRole() {\r\n    return Client.post('/core-remove-role')\r\n    .then(request => {\r\n        _store.profile = request.__profile;\r\n        return _store.profile;\r\n    });\r\n}\r\n\r\nfunction buildModel(map, stage) {\r\n    let url = (!map.model) ? \"/route-core-default\" : \"/route-\" + map.model;\r\n    let data = {};\r\n    if (map.to) data.__to = map.to;\r\n    return Client.get(url, data)\r\n    .then(response => {\r\n        if (response.__status != \"SUCCESS\") {\r\n            throw new Error(response);\r\n        }\r\n        let model_name = response.model;\r\n        let model = new Model();\r\n        model.to = map.to;\r\n        if (_settings[model_name]) model.injectCustomSettings(_settings[model_name]);\r\n        model.mapResponse(response);\r\n        model.state = map.state;\r\n        model.key = map.key;\r\n        \r\n        model.stage = stage;\r\n        _models[stage] = model;\r\n        return model;\r\n    })\r\n    .then(model=> {\r\n        return model.load();\r\n    });\r\n    \r\n}\r\n\r\nfunction run() {\r\n    _seeker = -1;\r\n    let maps = Map.getMaps();\r\n    if (maps.length == 0) {\r\n        throw new Error(\"Error with controller run, no maps created\");\r\n    }\r\n    _store.models = [];\r\n    let promises = [];\r\n\r\n    if (_models.length > maps.length) _models.splice(maps.length, _models.length - maps.length);\r\n    for (let i in maps) {\r\n        const map = maps[i];\r\n        let model, promise;\r\n        if (i >= _models.length || _models[i].name != map.model) {\r\n            promise = buildModel(map, i);\r\n        } else {\r\n            model = _models[i];\r\n            if (model.state != map.state || model.key != map.key) {\r\n                model.state = map.state;\r\n                model.key = map.key;\r\n            }\r\n            promise = _models[i].load()\r\n            .catch(e => console.log(e));\r\n        }\r\n        promises.push(promise);\r\n    }\r\n\r\n    //check the last map to see if it needs a child group\r\n    //omap will be one before last\r\n    Promise.all(promises)\r\n    .then(() => {\r\n        for(let model of _models) {\r\n            _store.models.push(model);\r\n        }\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    })    \r\n}\r\n\r\nfunction buildLink() {\r\n    Map.resetMaps();\r\n    let omaps = [];\r\n    let changes = [];\r\n    for(let i in _models) {\r\n        let model = _models[i];\r\n        omaps.push(model.map);\r\n        changes.push(model.change_intention);\r\n    }\r\n\r\n    for (let i =0,n=changes.length; i<n; ++i) {\r\n        let change = changes[i];\r\n        if (!change) continue;\r\n        let ni = i + change.target;\r\n        if (ni < 0) omaps.unshift({ ...omaps[i] });\r\n        else if (ni >= omaps.length) omaps.push({ ... omaps[omaps.length - 1]});\r\n        if (change.model) omaps[ni].model = change.model;\r\n        if (change.state) omaps[ni].state = change.state;\r\n        if (change.to) omaps[ni].to = change.to;\r\n        if (change.key) omaps[ni].key = change.key;\r\n        if (change.end) {\r\n            omaps.splice(ni + 1, omaps.length);\r\n            break;\r\n        }\r\n    }\r\n\r\n    for(const omap of omaps) {\r\n        let cmap = Map.createMap();\r\n        for(let i in omap) {\r\n            cmap[i] = omap[i];\r\n        }\r\n    }\r\n    let url = Map.convertToURL();\r\n    Router.setRoute(url);\r\n}\r\n\r\nfunction runLink() {\r\n    Map.runRoute();\r\n}\r\n\r\n\r\nfunction runData(uri = null) {\r\n    if (!uri) uri = window.location.pathname;\r\n    Map.convertFromURL(uri);\r\n}\r\n\r\n\r\n\r\nfunction reloadFromBase() {\r\n    Map.resetMaps();\r\n    let url = Map.convertToURL();\r\n    Router.setRoute(url);\r\n}\r\n\r\n\r\nfunction getStore() {\r\n    return _store.models[_seeker].store;\r\n}\r\n\r\n\r\nfunction next() {\r\n    ++_seeker;\r\n}\r\n\r\nMap.trigger(() => {\r\n    run();\r\n});\r\n\r\nRouter.regCallback(Map.convertFromURL)\r\n\r\nexport default {\r\n    store : _store,\r\n    models : _models,\r\n    setSettings,\r\n    initProfile,\r\n    assumeRole,\r\n    removeRole,\r\n    run,\r\n    buildModel,\r\n    buildLink,\r\n    runLink,\r\n    runData,\r\n    reloadFromBase,\r\n    getStore,\r\n    next\r\n}\r\n","let classes_dict = {\r\n    'ptj-account-details-logout' : \"ptj-account-details-logout\",\r\n    'ptj-account-handler' : 'ptj-account-handler',\r\n    'ptj-breadcrumbs' : 'ptj-breadcrumbs',\r\n    'ptj-card' : 'ptj-card',\r\n    'ptj-card-row' : 'ptj-card-row',\r\n    'ptj-card-label' : 'ptj-card-label',\r\n    'ptj-card-value' : 'ptj-card-value',\r\n    'ptj-form' : 'ptj-form',\r\n    'ptj-form-title' : 'ptj-form-title',\r\n    'ptj-form-error' : 'ptj-form-error',\r\n    'ptj-form-group' : 'ptj-form-group',\r\n    'ptj-form-submit' : 'ptj-form-submit',\r\n    'ptj-root' : 'ptj-root',\r\n    'ptj-tabs' : 'ptj-tabs',\r\n    'ptj-tabs-card' : 'ptj-tabs-card',\r\n    'ptj-tabs-tab' : 'ptj-tabs-tab',\r\n    'ptj-repo' : 'ptj-repo',\r\n    'ptj-nav' : 'ptj-nav',\r\n    'ptj-nav-link' : 'ptj-nav-link',\r\n    'ptj-single-item' : 'ptj-single-item',\r\n    'ptj-single-item-row' : 'ptj-single-item-row',\r\n    'ptj-single-item-label' : 'ptj-single-item-label',\r\n    'ptj-single-item-value' : 'ptj-single-item-value',\r\n    'ptj-single-item-actions' : 'ptj-single-item-actions',\r\n    'ptj-single-item-children' : 'ptj-single-item-children',\r\n    'ptj-widget-window' : 'ptj-widget-window',\r\n    'ptj-widget-window-header' : 'ptj-widget-window-header',\r\n    'ptj-widget-window-title' : 'ptj-widget-window-title',\r\n    'ptj-widget-window-toggle' : 'ptj-widget-window-toggle',\r\n    'ptj-widget-window-body' : 'ptj-widget-window-body',\r\n    'ptj-repo-header-title' : 'ptj-repo-header-title',\r\n    'ptj-repo-header-actions' : 'ptj-repo-header-actions',\r\n    'ptj-tree' : 'ptj-tree',\r\n    'ptj-form-row' : 'ptj-form-row',\r\n    'ptj-form-input-row' : 'ptj-form-input-row',\r\n    'ptj-form-input-label' : 'ptj-form-input-label',\r\n    'ptj-form-input' : 'ptj-form-input',\r\n    'ptj-table' : 'ptj-table',\r\n    'ptj-table-header' : 'ptj-table-header',\r\n    'ptj-table-header-cell' : 'ptj-table-header-cell',\r\n    'ptj-table-row' : 'ptj-table-row',\r\n    'ptj-table-cell' : 'ptj-table-cell',\r\n    'ptj-table-cell-sortable' : 'ptj-table-cell-sortable',\r\n    'ptj-form-confirm-row' : 'ptj-form-confirm-row',\r\n    'ptj-form-confirm-label' : 'ptj-form-confirm-label',\r\n    'ptj-form-confirm' : 'ptj-form-confirm',\r\n    'ptj-pagination' : 'ptj-pagination',\r\n    'ptj-filter-form' : 'ptj-filter-form',\r\n    'ptj-filter-form-group' : 'ptj-filter-form-group',\r\n    'ptj-filter-form-submit' : 'ptj-filter-form-submit',\r\n    'ptj-form-select-row' : 'ptj-form-select-row',\r\n    'ptj-form-select-label' : 'ptj-form-select-label',\r\n    'ptj-form-select' : 'ptj-form-select',\r\n    'ptj-tree-node' : 'ptj-tree-node',\r\n    'ptj-tree-node-row' : 'ptj-tree-node-row',\r\n    'ptj-selectfields' : 'ptj-selectfields',\r\n    'ptj-selectfields-checkbox' : 'ptj-selectfields-checkbox',\r\n    'ptj-selectfields-label' : 'ptj-selectfields-label',\r\n    'ptj-form-radio-row' : 'ptj-form-radio-row',\r\n    'ptj-form-radio-label' : 'ptj-form-radio-label',\r\n    'ptj-form-radio-option-label' : 'ptj-form-radio-option-label',\r\n    'ptj-checkbox-row' : 'ptj-checkbox-row',\r\n    'ptj-checkbox-label' : 'ptj-checkbox-label',\r\n    'ptj-checkbox' : 'ptj-checkbox',\r\n    'ptj-form-textarea-row' : 'ptj-form-textarea-row',\r\n    'ptj-form-textarea-label' : 'ptj-form-textarea-label',\r\n    'ptj-form-textarea' : 'ptj-form-textarea',\r\n    'ptj-form-asset-row' : 'ptj-form-asset-row',\r\n    'ptj-form-asset-label' : 'ptj-form-asset-label',\r\n    'ptj-form-asset' : 'ptj-form-asset',\r\n    'ptj-progress-bar-wrapper' : 'ptj-progress-bar-wrapper',\r\n    'ptj-progress-bar-holder' : 'ptj-progress-bar-holder',\r\n    'ptj-progress-bar' : 'ptj-progress-bar',\r\n    'ptj-error' : 'ptj-error',\r\n    'ptj-filter-form-time-row' : 'ptj-filter-form-time-row',\r\n    'ptj-filter-form-time-label' : 'ptj-filter-form-time-label',\r\n    'ptj-filter-form-time-1' : 'ptj-filter-form-time-1',\r\n    'ptj-filter-form-time-2' : 'ptj-filter-form-time-2',\r\n    'ptj-filter-form-checkbox-row' : 'ptj-filter-form-checkbox-row',\r\n    'ptj-filter-form-checkbox-label' : 'ptj-filter-form-checkbox-label',\r\n    'ptj-filter-form-checkbox' : 'ptj-filter-form-checkbox',\r\n    'ptj-account-details-logout' : 'ptj-account-details-logout',\r\n    'ptj-accounthandler' : 'ptj-accounthandler',\r\n    'ptj-list' : 'ptj-list'\r\n};\r\n\r\nfunction regClass(name, value) {\r\n    classes_dict[name] = value;\r\n}\r\n\r\nfunction getClass(name) {\r\n    return classes_dict[name];\r\n} \r\n\r\nexport default {\r\n    regClass,\r\n    getClass\r\n}","<template>\r\n    <p :class=\"Class.getClass('ptj-error')\">{{ error }}</p>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    name : 'ptj-error',\r\n    props : {\r\n        'error' : String\r\n    },\r\n    setup() { \r\n        return { Class }\r\n    }\r\n});\r\n\r\n</script>\r\n\r\n<style>\r\n.error {\r\n  color : red;\r\n}\r\n</style>","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","<template>\r\n    <p :class=\"Class.getClass('ptj-error')\">{{ error }}</p>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    name : 'ptj-error',\r\n    props : {\r\n        'error' : String\r\n    },\r\n    setup() { \r\n        return { Class }\r\n    }\r\n});\r\n\r\n</script>\r\n\r\n<style>\r\n.error {\r\n  color : red;\r\n}\r\n</style>","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-input-row') + ' ' + field.name\">\r\n    <label v-if=\"field.atts.type != 'hidden'\" :class=\"Class.getClass('ptj-form-input-label')\">{{ field.label }}</label>\r\n    <input :class=\"Class.getClass('ptj-form-input')\" :name=\"field.name\" :type=\"field.atts.type\" v-model=\"field.val\" @blur=\"field.validateon = true\" :readonly=\"field.readonly\">\r\n    <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-input',\r\n  props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-input-row') + ' ' + field.name\">\r\n    <label v-if=\"field.atts.type != 'hidden'\" :class=\"Class.getClass('ptj-form-input-label')\">{{ field.label }}</label>\r\n    <input :class=\"Class.getClass('ptj-form-input')\" :name=\"field.name\" :type=\"field.atts.type\" v-model=\"field.val\" @blur=\"field.validateon = true\" :readonly=\"field.readonly\">\r\n    <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-input',\r\n  props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-confirm-row')\">\r\n    <label :class=\"Class.getClass('ptj-form-confirm-label')\">{{ field.label }}</label>\r\n    <input :class=\"Class.getClass('ptj-form-confirm')\" :name=\"name\" :type=\"field.atts.type\" v-model=\"cval\" @blur=\"field.setValidateOn()\">\r\n    <ptj-error v-show=\"error\" :error=\"error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-confirm',\r\n  props : {\r\n    field : Object\r\n  },\r\n  data() {\r\n      return {\r\n          cval : \"\"\r\n      }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  computed : {\r\n    name() {\r\n        return this.field.name + \"_confirm\";\r\n    },\r\n    error() {\r\n        if (this.isvalidateon) {\r\n            if (this.field.val == this.cval) return \"\";\r\n            else return \"Doesn't match \" + this.field.name; \r\n        }      \r\n    }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-confirm-row')\">\r\n    <label :class=\"Class.getClass('ptj-form-confirm-label')\">{{ field.label }}</label>\r\n    <input :class=\"Class.getClass('ptj-form-confirm')\" :name=\"name\" :type=\"field.atts.type\" v-model=\"cval\" @blur=\"field.setValidateOn()\">\r\n    <ptj-error v-show=\"error\" :error=\"error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-confirm',\r\n  props : {\r\n    field : Object\r\n  },\r\n  data() {\r\n      return {\r\n          cval : \"\"\r\n      }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  computed : {\r\n    name() {\r\n        return this.field.name + \"_confirm\";\r\n    },\r\n    error() {\r\n        if (this.isvalidateon) {\r\n            if (this.field.val == this.cval) return \"\";\r\n            else return \"Doesn't match \" + this.field.name; \r\n        }      \r\n    }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-select-row')\">\r\n  <label :class=\"Class.getClass('ptj-form-select-label')\">{{ field.label }}</label>\r\n  <select :class=\"Class.getClass('ptj-form-select')\" v-model=\"field.val\" :readonly=\"field.readonly\" :name=\"field.name\" :multiple=\"field.multiple\">\r\n    <option value=\"0\">Select Option</option>\r\n    <option v-for=\"option in field.options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup(props) {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-select-row')\">\r\n  <label :class=\"Class.getClass('ptj-form-select-label')\">{{ field.label }}</label>\r\n  <select :class=\"Class.getClass('ptj-form-select')\" v-model=\"field.val\" :readonly=\"field.readonly\" :name=\"field.name\" :multiple=\"field.multiple\">\r\n    <option value=\"0\">Select Option</option>\r\n    <option v-for=\"option in field.options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup(props) {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n    <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-radio-row')\">\r\n      <label :class=\"Class.getClass('ptj-form-radio-label')\">{{ field.label }}</label>\r\n        <div v-for=\"option in field.options\" :key=\"option\">\r\n            <label :class=\"Class.getClass('ptj-form-radio-option-label')\">{{ option.option }}</label>\r\n            <input :name=\"cfield.name\" type=\"radio\" :value=\"option.value\" v-model=\"field.val\">\r\n        </div>\r\n        <ptj-error v-show=\"field.error\" :error=\"field.error\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-radio',\r\n  props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  data() {\r\n      return {\r\n          isvalidateon : false\r\n      }\r\n  },\r\n  methods : {\r\n      setValidateOn() {\r\n          this.isvalidateon = true;\r\n      }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n    <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-radio-row')\">\r\n      <label :class=\"Class.getClass('ptj-form-radio-label')\">{{ field.label }}</label>\r\n        <div v-for=\"option in field.options\" :key=\"option\">\r\n            <label :class=\"Class.getClass('ptj-form-radio-option-label')\">{{ option.option }}</label>\r\n            <input :name=\"cfield.name\" type=\"radio\" :value=\"option.value\" v-model=\"field.val\">\r\n        </div>\r\n        <ptj-error v-show=\"field.error\" :error=\"field.error\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-radio',\r\n  props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  data() {\r\n      return {\r\n          isvalidateon : false\r\n      }\r\n  },\r\n  methods : {\r\n      setValidateOn() {\r\n          this.isvalidateon = true;\r\n      }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-checkbox-row')\">\r\n    <label :class=\"Class.getClass('ptj-checkbox-label')\">{{ field.label }}</label>\r\n    <input :class=\"Class.getClass('ptj-checkbox')\" type=\"checkbox\" :true-value=\"1\" :false-value=\"0\" :name=\"field.name\" v-model=\"field.val\">\r\n    <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-checkbox',\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-checkbox-row')\">\r\n    <label :class=\"Class.getClass('ptj-checkbox-label')\">{{ field.label }}</label>\r\n    <input :class=\"Class.getClass('ptj-checkbox')\" type=\"checkbox\" :true-value=\"1\" :false-value=\"0\" :name=\"field.name\" v-model=\"field.val\">\r\n    <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-checkbox',\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n    <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-textarea-row') + ' ' + field.name.replace('_', '-')\">\r\n       <label :class=\"Class.getClass('ptj-form-textarea-label')\">{{ field.label }}</label>\r\n       <textarea :class=\"Class.getClass('ptj-form-textarea')\" :name=\"field.name\" v-model=\"field.val\" :readonly=\"field.readonly\" :data-html=\"field.atts.html\"></textarea>        \r\n       <ptj-error v-show=\"field.error\" :error=\"field.error\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-textarea',\r\n  props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n    <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-textarea-row') + ' ' + field.name.replace('_', '-')\">\r\n       <label :class=\"Class.getClass('ptj-form-textarea-label')\">{{ field.label }}</label>\r\n       <textarea :class=\"Class.getClass('ptj-form-textarea')\" :name=\"field.name\" v-model=\"field.val\" :readonly=\"field.readonly\" :data-html=\"field.atts.html\"></textarea>        \r\n       <ptj-error v-show=\"field.error\" :error=\"field.error\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-textarea',\r\n  props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-asset-row')\">\r\n  <label :class=\"Class.getClass('ptj-form-asset-label')\">{{ field.label }}</label>\r\n  <input :class=\"Class.getClass('ptj-form-asset')\" ref=\"input\" @change=\"setFile\" :name=\"field.name\" type=\"file\" >\r\n  <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-asset-field',\r\n  props : {\r\n    field : {\r\n        type : Object,\r\n        required : true\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  methods : {\r\n      setFile(e) {\r\n          if (e.target.files.length > 0) {\r\n            this.field.val = e.target.files[0];\r\n          } else {\r\n            this.field.val = null;\r\n          }\r\n          this.field.validateon = true;\r\n      }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>","<template>\r\n <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-asset-row')\">\r\n  <label :class=\"Class.getClass('ptj-form-asset-label')\">{{ field.label }}</label>\r\n  <input :class=\"Class.getClass('ptj-form-asset')\" ref=\"input\" @change=\"setFile\" :name=\"field.name\" type=\"file\" >\r\n  <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-asset-field',\r\n  props : {\r\n    field : {\r\n        type : Object,\r\n        required : true\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  methods : {\r\n      setFile(e) {\r\n          if (e.target.files.length > 0) {\r\n            this.field.val = e.target.files[0];\r\n          } else {\r\n            this.field.val = null;\r\n          }\r\n          this.field.validateon = true;\r\n      }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>","<template>\r\n    <div :class=\"Class.getClass('ptj-progress-bar-wrapper')\">\r\n        <div :class=\"Class.getClass('ptj-progress-bar-holder') + ' ptj-progress-holder'\">\r\n            <div :class=\"Class.getClass('ptj-progress-bar') + ' ptj-bar'\" :style=\"style\">&nbsp;</div> \r\n        </div>   \r\n        <span>{{ num }}%</span>\r\n    </div> \r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent} from \"vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-progress-bar',\r\n  props : {\r\n      total : Number,\r\n      progress : Number\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  computed : {\r\n      num() {\r\n          let num = Math.floor((this.progress / this.total) * 100);\r\n          return (isNaN(num)) ? 0 : num;\r\n      },\r\n      style() {\r\n          return \"width:\" +  this.num + \"%;\";\r\n      }\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n .ptj-progress-holder {\r\n     width : 100%;\r\n     min-height : 10px;\r\n     position : relative;\r\n     display : flex;\r\n     align-items: stretch;\r\n     padding : 2px;\r\n }\r\n\r\n .ptj-bar {\r\n     width : 0;\r\n     height : 100%;\r\n     position : relative;\r\n     line-height : 100%;\r\n }\r\n\r\n\r\n</style>\r\n","<template>\r\n    <div :class=\"Class.getClass('ptj-progress-bar-wrapper')\">\r\n        <div :class=\"Class.getClass('ptj-progress-bar-holder') + ' ptj-progress-holder'\">\r\n            <div :class=\"Class.getClass('ptj-progress-bar') + ' ptj-bar'\" :style=\"style\">&nbsp;</div> \r\n        </div>   \r\n        <span>{{ num }}%</span>\r\n    </div> \r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent} from \"vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-progress-bar',\r\n  props : {\r\n      total : Number,\r\n      progress : Number\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  computed : {\r\n      num() {\r\n          let num = Math.floor((this.progress / this.total) * 100);\r\n          return (isNaN(num)) ? 0 : num;\r\n      },\r\n      style() {\r\n          return \"width:\" +  this.num + \"%;\";\r\n      }\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n .ptj-progress-holder {\r\n     width : 100%;\r\n     min-height : 10px;\r\n     position : relative;\r\n     display : flex;\r\n     align-items: stretch;\r\n     padding : 2px;\r\n }\r\n\r\n .ptj-bar {\r\n     width : 0;\r\n     height : 100%;\r\n     position : relative;\r\n     line-height : 100%;\r\n }\r\n\r\n\r\n</style>\r\n","<template>\r\n <form @submit.prevent=\"submit\" v-show=\"fstate==0\" :class=\"Class.getClass('ptj-form') + ' ' + store.classes\">\r\n    <div :class=\"Class.getClass('ptj-form-error')\" v-show=\"globalerror\">{{ globalerror }}</div>\r\n    <div v-for=\"field in store.fields\" v-show=\"field.on\" :key=\"field.name\" :class=\"Class.getClass('ptj-form-group')\">\r\n          <ptj-select v-if=\"field.type=='select'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-radio v-else-if=\"field.type=='radio'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-checkbox v-else-if=\"field.type=='checkbox'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-textarea v-else-if=\"field.type=='textarea'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-asset-field v-else-if=\"field.type=='asset'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-input v-else :field=\"field\" :stores=\"store\" />\r\n          <div v-if=\"field.confirm\">\r\n            <ptj-confirm :field=\"field\" :stores=\"store\"/> \r\n          </div>\r\n          <!-- REMOVED: -->\r\n    </div>\r\n    <input type=\"submit\" value=\"Submit\" :class=\"Class.getClass('ptj-form-submit')\">\r\n\r\n  </form>\r\n  <ptj-progress-bar v-show=\"fstate == 1\" :total=\"total\" :progress=\"progress\" />\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCInput from \"./ptj-form-input.vue\"\r\nimport GCConfirm from \"./ptj-form-confirm.vue\"\r\nimport GCSelect from \"./ptj-form-select.vue\"\r\nimport GCRadio from \"./ptj-form-radio.vue\"\r\nimport GCCheckbox from \"./ptj-form-checkbox.vue\"\r\nimport GCTextarea from \"./ptj-form-textarea.vue\"\r\nimport GCAssetField from \"./ptj-form-asset.vue\"\r\nimport GCProgressBar from \"./ptj-progress-bar.vue\"\r\nimport Errors from \"../js/error.js\"\r\nimport Client from \"../js/client.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-form',\r\n  data() {\r\n      return {\r\n          fstate : 0,\r\n          progress : 0,\r\n          globalerror : ''\r\n      }\r\n  },\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  methods : {\r\n    clearErrors() {\r\n        this.globalerror = \"\";\r\n        for(let i in this.store.fields) {\r\n            this.store.fields[i].error = 0;\r\n        }\r\n    },\r\n    saveAsset(field) {\r\n        const val = this.store.data[field.name];\r\n        if (!val) return Promise.resolve();\r\n        asset.saveFile(val, this._key, () => ++this.progress);\r\n        this.total += asset.num_chunks;\r\n    },\r\n    submit(e) {\r\n        this.fstate = (this.total > 0) ? 1 : 2;\r\n        this.clearErrors();\r\n        let data = {};\r\n        for(let i in this.store.fields) {\r\n            if (this.store.fields[i].on) data[i] = this.store.fields[i].val;\r\n        }\r\n        this.store.addKeys(data);\r\n        return Client[this.store.method](this.store.submiturl, data)\r\n        .then(request=>{\r\n            if (request.__status!= \"SUCCESS\") {\r\n                throw { message : request.statusText }\r\n            }\r\n            this.store.resolveKeys(request);\r\n        })\r\n        .then(() => {\r\n            let promises = [];\r\n            for(let i in this.store.fields) {\r\n                if (this.store.fields[i].type == \"asset\") {\r\n                    let promise = this.store.fields[i].saveAsset(this.store.primarykey())\r\n                    .then(() => {\r\n                        ++this.progress;\r\n                    })\r\n                    .catch(err => {\r\n                        this.fstate = 0;\r\n                        this.progress = 0;\r\n                        this.store.fields[i].error = err;\r\n                    });\r\n                    promises.push(promise);\r\n                }\r\n            }\r\n            return Promise.all(promises);\r\n        })\r\n        .then(() => {\r\n            this.store.next();\r\n            Ctrl.buildLink();\r\n        })\r\n        .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n            this.fstate = 0;\r\n            console.log(err);\r\n            if (typeof err == \"string\") {\r\n                this.globalerror = err;\r\n            } else {\r\n                for(let i in err) {\r\n                    if (i.indexOf(\"__\") === 0) continue;\r\n                    else if (this.store.fields[i]) {\r\n                        this.store.fields[i].error = Errors.getError(err[i]);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n  },\r\n  computed : {\r\n      total() {\r\n          let total = 0;\r\n          for(let i in this.store.fields) {\r\n            if (this.store.fields[i].type == \"asset\") {\r\n                ++total;\r\n            }\r\n          }\r\n          return total;\r\n      }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-input\" : GCInput,\r\n      \"ptj-confirm\" : GCConfirm,\r\n      \"ptj-select\" : GCSelect,\r\n      \"ptj-radio\" : GCRadio,\r\n      \"ptj-checkbox\" : GCCheckbox,\r\n      \"ptj-textarea\": GCTextarea,\r\n      \"ptj-asset-field\" : GCAssetField,\r\n      \"ptj-progress-bar\" : GCProgressBar\r\n    }\r\n       \r\n  \r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n <form @submit.prevent=\"submit\" v-show=\"fstate==0\" :class=\"Class.getClass('ptj-form') + ' ' + store.classes\">\r\n    <div :class=\"Class.getClass('ptj-form-error')\" v-show=\"globalerror\">{{ globalerror }}</div>\r\n    <div v-for=\"field in store.fields\" v-show=\"field.on\" :key=\"field.name\" :class=\"Class.getClass('ptj-form-group')\">\r\n          <ptj-select v-if=\"field.type=='select'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-radio v-else-if=\"field.type=='radio'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-checkbox v-else-if=\"field.type=='checkbox'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-textarea v-else-if=\"field.type=='textarea'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-asset-field v-else-if=\"field.type=='asset'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-input v-else :field=\"field\" :stores=\"store\" />\r\n          <div v-if=\"field.confirm\">\r\n            <ptj-confirm :field=\"field\" :stores=\"store\"/> \r\n          </div>\r\n          <!-- REMOVED: -->\r\n    </div>\r\n    <input type=\"submit\" value=\"Submit\" :class=\"Class.getClass('ptj-form-submit')\">\r\n\r\n  </form>\r\n  <ptj-progress-bar v-show=\"fstate == 1\" :total=\"total\" :progress=\"progress\" />\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCInput from \"./ptj-form-input.vue\"\r\nimport GCConfirm from \"./ptj-form-confirm.vue\"\r\nimport GCSelect from \"./ptj-form-select.vue\"\r\nimport GCRadio from \"./ptj-form-radio.vue\"\r\nimport GCCheckbox from \"./ptj-form-checkbox.vue\"\r\nimport GCTextarea from \"./ptj-form-textarea.vue\"\r\nimport GCAssetField from \"./ptj-form-asset.vue\"\r\nimport GCProgressBar from \"./ptj-progress-bar.vue\"\r\nimport Errors from \"../js/error.js\"\r\nimport Client from \"../js/client.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-form',\r\n  data() {\r\n      return {\r\n          fstate : 0,\r\n          progress : 0,\r\n          globalerror : ''\r\n      }\r\n  },\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  methods : {\r\n    clearErrors() {\r\n        this.globalerror = \"\";\r\n        for(let i in this.store.fields) {\r\n            this.store.fields[i].error = 0;\r\n        }\r\n    },\r\n    saveAsset(field) {\r\n        const val = this.store.data[field.name];\r\n        if (!val) return Promise.resolve();\r\n        asset.saveFile(val, this._key, () => ++this.progress);\r\n        this.total += asset.num_chunks;\r\n    },\r\n    submit(e) {\r\n        this.fstate = (this.total > 0) ? 1 : 2;\r\n        this.clearErrors();\r\n        let data = {};\r\n        for(let i in this.store.fields) {\r\n            if (this.store.fields[i].on) data[i] = this.store.fields[i].val;\r\n        }\r\n        this.store.addKeys(data);\r\n        return Client[this.store.method](this.store.submiturl, data)\r\n        .then(request=>{\r\n            if (request.__status!= \"SUCCESS\") {\r\n                throw { message : request.statusText }\r\n            }\r\n            this.store.resolveKeys(request);\r\n        })\r\n        .then(() => {\r\n            let promises = [];\r\n            for(let i in this.store.fields) {\r\n                if (this.store.fields[i].type == \"asset\") {\r\n                    let promise = this.store.fields[i].saveAsset(this.store.primarykey())\r\n                    .then(() => {\r\n                        ++this.progress;\r\n                    })\r\n                    .catch(err => {\r\n                        this.fstate = 0;\r\n                        this.progress = 0;\r\n                        this.store.fields[i].error = err;\r\n                    });\r\n                    promises.push(promise);\r\n                }\r\n            }\r\n            return Promise.all(promises);\r\n        })\r\n        .then(() => {\r\n            this.store.next();\r\n            Ctrl.buildLink();\r\n        })\r\n        .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n            this.fstate = 0;\r\n            console.log(err);\r\n            if (typeof err == \"string\") {\r\n                this.globalerror = err;\r\n            } else {\r\n                for(let i in err) {\r\n                    if (i.indexOf(\"__\") === 0) continue;\r\n                    else if (this.store.fields[i]) {\r\n                        this.store.fields[i].error = Errors.getError(err[i]);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n  },\r\n  computed : {\r\n      total() {\r\n          let total = 0;\r\n          for(let i in this.store.fields) {\r\n            if (this.store.fields[i].type == \"asset\") {\r\n                ++total;\r\n            }\r\n          }\r\n          return total;\r\n      }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-input\" : GCInput,\r\n      \"ptj-confirm\" : GCConfirm,\r\n      \"ptj-select\" : GCSelect,\r\n      \"ptj-radio\" : GCRadio,\r\n      \"ptj-checkbox\" : GCCheckbox,\r\n      \"ptj-textarea\": GCTextarea,\r\n      \"ptj-asset-field\" : GCAssetField,\r\n      \"ptj-progress-bar\" : GCProgressBar\r\n    }\r\n       \r\n  \r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n  <span :class=\"Class.getClass('ptj-nav') + ' ' + classes\">\r\n  <a v-for=\"route in actions\" v-bind:key=\"route\" @click=\"setRoute(route);\" :class=\"Class.getClass('ptj-nav-link')\">\r\n    {{ route.n }}\r\n  </a> \r\n  </span>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-nav',\r\n  props: {\r\n    actions : Array,\r\n    classes : {\r\n        type : String,\r\n        default : \"\"\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  methods : {\r\n      setRoute(route) {\r\n          route.r();\r\n          Ctrl.buildLink();\r\n      }\r\n  }   \r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n  <span :class=\"Class.getClass('ptj-nav') + ' ' + classes\">\r\n  <a v-for=\"route in actions\" v-bind:key=\"route\" @click=\"setRoute(route);\" :class=\"Class.getClass('ptj-nav-link')\">\r\n    {{ route.n }}\r\n  </a> \r\n  </span>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-nav',\r\n  props: {\r\n    actions : Array,\r\n    classes : {\r\n        type : String,\r\n        default : \"\"\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  methods : {\r\n      setRoute(route) {\r\n          route.r();\r\n          Ctrl.buildLink();\r\n      }\r\n  }   \r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-filter-form-time-row')\">\r\n  <label :class=\"Class.getClass('ptj-filter-form-time-label')\">{{ field.label }}</label>\r\n  <input :class=\"Class.getClass('ptj-filter-form-time-1')\" type=\"date\" v-model=\"field.val1\">\r\n  <input :class=\"Class.getClass('ptj-filter-form-time-2')\" type=\"date\" v-model=\"field.val2\">\r\n  <ptj-error v-show=\"field.error\" :error=\"field.error\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport GCError from \"./ptj-error.vue\"\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-time-range',\r\n props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-filter-form-time-row')\">\r\n  <label :class=\"Class.getClass('ptj-filter-form-time-label')\">{{ field.label }}</label>\r\n  <input :class=\"Class.getClass('ptj-filter-form-time-1')\" type=\"date\" v-model=\"field.val1\">\r\n  <input :class=\"Class.getClass('ptj-filter-form-time-2')\" type=\"date\" v-model=\"field.val2\">\r\n  <ptj-error v-show=\"field.error\" :error=\"field.error\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport GCError from \"./ptj-error.vue\"\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-time-range',\r\n props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-filter-form-checkbox-row')\">\r\n    <label :class=\"Class.getClass('ptj-filter-form-checkbox-label')\">{{ field.label }}</label>\r\n    <select :name=\"field.name\" v-model=\"field.val\" :class=\"Class.getClass('ptj-filter-form-checkbox')\">\r\n        <option value=''>{{ \"All\" }}</option>\r\n        <option value='1'>{{ \"Checked\" }}</option>\r\n        <option value='0'>{{ \"Unchecked\" }}</option>\r\n    </select>\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-checkbox',\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-filter-form-checkbox-row')\">\r\n    <label :class=\"Class.getClass('ptj-filter-form-checkbox-label')\">{{ field.label }}</label>\r\n    <select :name=\"field.name\" v-model=\"field.val\" :class=\"Class.getClass('ptj-filter-form-checkbox')\">\r\n        <option value=''>{{ \"All\" }}</option>\r\n        <option value='1'>{{ \"Checked\" }}</option>\r\n        <option value='0'>{{ \"Unchecked\" }}</option>\r\n    </select>\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-checkbox',\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n    <div :class=\"Class.getClass('ptj-widget-window') + ' ' +  classes\">\r\n        <div :class=\"Class.getClass('ptj-widget-window-header')\">\r\n            <h1 :class=\"Class.getClass('ptj-widget-window-title')\">{{ title }}\r\n            <a :class=\"Class.getClass('ptj-widget-window-toggle')\" @click=\"toggleWidget\"><span class=\"material-icons\">more_horiz</span></a>\r\n            </h1>\r\n        </div>\r\n        <div class=\"Class.getClass('ptj-widget-window-body')\" v-show=\"show\">\r\n            <slot />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        title : String,\r\n        active : {\r\n            type : Boolean,\r\n            default : false\r\n        },\r\n        classes : {\r\n            type : String,\r\n            default : ''\r\n        }\r\n    },\r\n    setup() {\r\n       return { Class };\r\n    },\r\n    data() {\r\n        return {\r\n            show : this.active\r\n        }\r\n    },\r\n    methods : {\r\n        toggleWidget() {\r\n            this.show = (this.show) ? false : true;\r\n        }\r\n    }\r\n});\r\n\r\n</script>","<template>\r\n    <div :class=\"Class.getClass('ptj-widget-window') + ' ' +  classes\">\r\n        <div :class=\"Class.getClass('ptj-widget-window-header')\">\r\n            <h1 :class=\"Class.getClass('ptj-widget-window-title')\">{{ title }}\r\n            <a :class=\"Class.getClass('ptj-widget-window-toggle')\" @click=\"toggleWidget\"><span class=\"material-icons\">more_horiz</span></a>\r\n            </h1>\r\n        </div>\r\n        <div class=\"Class.getClass('ptj-widget-window-body')\" v-show=\"show\">\r\n            <slot />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        title : String,\r\n        active : {\r\n            type : Boolean,\r\n            default : false\r\n        },\r\n        classes : {\r\n            type : String,\r\n            default : ''\r\n        }\r\n    },\r\n    setup() {\r\n       return { Class };\r\n    },\r\n    data() {\r\n        return {\r\n            show : this.active\r\n        }\r\n    },\r\n    methods : {\r\n        toggleWidget() {\r\n            this.show = (this.show) ? false : true;\r\n        }\r\n    }\r\n});\r\n\r\n</script>","<template>\r\n <ptj-widget title=\"search\">\r\n   <form @submit.prevent=\"submit\" :class=\"Class.getClass('ptj-filter-form')\">\r\n      <h1>Search {{ store.title }}</h1>\r\n      <div v-for=\"field in store.fields\" :key=\"field.name\" :class=\"Class.getClass('ptj-filter-form-group')\">\r\n          <ptj-select v-if=\"field.type=='select'\" :field=\"field\" :multiple=\"true\"  :stores=\"store\"/>\r\n          <ptj-filter-checkbox v-else-if=\"field.type=='checkbox'\" :field=\"field\"  :stores=\"store\"/>\r\n          <ptj-time-range v-else-if=\"field.atts.type=='datetime'\" :field=\"field\"  :stores=\"store\"/>\r\n          <ptj-input v-else :field=\"field\" :stores=\"store\" />\r\n               \r\n          <!-- REMOVED: -->\r\n      </div>\r\n      <input type=\"submit\" value=\"Submit\" :class=\"Class.getClass('ptj-filter-form-submit')\">\r\n  </form>\r\n </ptj-widget>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCInput from \"./ptj-form-input.vue\"\r\nimport GCFormSelect from \"./ptj-form-select.vue\"\r\nimport GCCheckbox from \"./ptj-form-checkbox.vue\"\r\nimport GCFilterFormTime from \"./ptj-filter-form-time.vue\"\r\nimport GCFilterFormCheckbox from \"./ptj-filter-form-checkbox.vue\"\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-filter-form',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  methods : {\r\n    submit() {\r\n      this.store.reload();\r\n    }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-input\" : GCInput,\r\n      \"ptj-select\" : GCFormSelect,\r\n      \"ptj-checkbox\" : GCCheckbox,\r\n      \"ptj-time-range\" : GCFilterFormTime,\r\n      \"ptj-filter-checkbox\" : GCFilterFormCheckbox,\r\n      \"ptj-widget\" : GCWidget\r\n    }\r\n       \r\n  \r\n});\r\n</script>\r\n<style scoped>\r\n.error {\r\n  color : red;\r\n}\r\n\r\n</style>\r\n\r\n","<template>\r\n <ptj-widget title=\"search\">\r\n   <form @submit.prevent=\"submit\" :class=\"Class.getClass('ptj-filter-form')\">\r\n      <h1>Search {{ store.title }}</h1>\r\n      <div v-for=\"field in store.fields\" :key=\"field.name\" :class=\"Class.getClass('ptj-filter-form-group')\">\r\n          <ptj-select v-if=\"field.type=='select'\" :field=\"field\" :multiple=\"true\"  :stores=\"store\"/>\r\n          <ptj-filter-checkbox v-else-if=\"field.type=='checkbox'\" :field=\"field\"  :stores=\"store\"/>\r\n          <ptj-time-range v-else-if=\"field.atts.type=='datetime'\" :field=\"field\"  :stores=\"store\"/>\r\n          <ptj-input v-else :field=\"field\" :stores=\"store\" />\r\n               \r\n          <!-- REMOVED: -->\r\n      </div>\r\n      <input type=\"submit\" value=\"Submit\" :class=\"Class.getClass('ptj-filter-form-submit')\">\r\n  </form>\r\n </ptj-widget>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCInput from \"./ptj-form-input.vue\"\r\nimport GCFormSelect from \"./ptj-form-select.vue\"\r\nimport GCCheckbox from \"./ptj-form-checkbox.vue\"\r\nimport GCFilterFormTime from \"./ptj-filter-form-time.vue\"\r\nimport GCFilterFormCheckbox from \"./ptj-filter-form-checkbox.vue\"\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-filter-form',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  methods : {\r\n    submit() {\r\n      this.store.reload();\r\n    }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-input\" : GCInput,\r\n      \"ptj-select\" : GCFormSelect,\r\n      \"ptj-checkbox\" : GCCheckbox,\r\n      \"ptj-time-range\" : GCFilterFormTime,\r\n      \"ptj-filter-checkbox\" : GCFilterFormCheckbox,\r\n      \"ptj-widget\" : GCWidget\r\n    }\r\n       \r\n  \r\n});\r\n</script>\r\n<style scoped>\r\n.error {\r\n  color : red;\r\n}\r\n\r\n</style>\r\n\r\n","<template>\r\n <div :class=\"Class.getClass('ptj-pagination')\">\r\n     <a v-show=\"optiongroup > 0\" @click=\"showPages(-1);\">&lt;&lt;</a>\r\n     <a v-for=\"index in maxoptions\" :key=\"index\" @click=\"page(index)\">{{ firstindex + index }}</a>\r\n     <a v-show=\"current_group < groups - 1\" @click=\"showPages(1)\">&gt;&gt;</a>\r\n </div>\r\n</template>\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        max_page_limit : Number\r\n    },\r\n    setup(props) {\r\n        let groups = Math.ceil(props.pages / props.max_page_limit);\r\n        return {\r\n            groups, current_group : 0, Class\r\n        }\r\n    },\r\n    computed : {\r\n        firstindex() {\r\n            return this.current_group * this.max_options;\r\n        },\r\n        maxoptions() {\r\n            return [];\r\n        }\r\n    },\r\n    methods : {\r\n        showPages(index) {\r\n            let route = Controller.current_route.value;\r\n            let url = route + \"#\";\r\n            if (route.query) url += route.query + \"&\";\r\n            url += \"__page=\" + (this.firstindex + index);\r\n            Router.setRoute(url);\r\n        }\r\n    }\r\n});\r\n</script>","<template>\r\n <div :class=\"Class.getClass('ptj-pagination')\">\r\n     <a v-show=\"optiongroup > 0\" @click=\"showPages(-1);\">&lt;&lt;</a>\r\n     <a v-for=\"index in maxoptions\" :key=\"index\" @click=\"page(index)\">{{ firstindex + index }}</a>\r\n     <a v-show=\"current_group < groups - 1\" @click=\"showPages(1)\">&gt;&gt;</a>\r\n </div>\r\n</template>\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        max_page_limit : Number\r\n    },\r\n    setup(props) {\r\n        let groups = Math.ceil(props.pages / props.max_page_limit);\r\n        return {\r\n            groups, current_group : 0, Class\r\n        }\r\n    },\r\n    computed : {\r\n        firstindex() {\r\n            return this.current_group * this.max_options;\r\n        },\r\n        maxoptions() {\r\n            return [];\r\n        }\r\n    },\r\n    methods : {\r\n        showPages(index) {\r\n            let route = Controller.current_route.value;\r\n            let url = route + \"#\";\r\n            if (route.query) url += route.query + \"&\";\r\n            url += \"__page=\" + (this.firstindex + index);\r\n            Router.setRoute(url);\r\n        }\r\n    }\r\n});\r\n</script>","<template>\r\n    <ptj-widget title=\"select fields\" :classes=\"Class.getClass('ptj-selectfields')\">\r\n        <div v-for=\"field, name in store.fields\" :key=\"name\"> \r\n            <input \r\n                type=\"checkbox\" \r\n                v-model=\"field.on\" \r\n                :class=\"Class.getClass('ptj-selectfields-checkbox')\"> \r\n            <label :class=\"Class.getClass('ptj-selectfields-label')\">{{ field.name }}</label>\r\n        </div>\r\n    </ptj-widget>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },   \r\n    components : {\r\n        \"ptj-widget\" : GCWidget\r\n    }\r\n});\r\n</script>\r\n\r\n","<template>\r\n    <ptj-widget title=\"select fields\" :classes=\"Class.getClass('ptj-selectfields')\">\r\n        <div v-for=\"field, name in store.fields\" :key=\"name\"> \r\n            <input \r\n                type=\"checkbox\" \r\n                v-model=\"field.on\" \r\n                :class=\"Class.getClass('ptj-selectfields-checkbox')\"> \r\n            <label :class=\"Class.getClass('ptj-selectfields-label')\">{{ field.name }}</label>\r\n        </div>\r\n    </ptj-widget>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },   \r\n    components : {\r\n        \"ptj-widget\" : GCWidget\r\n    }\r\n});\r\n</script>\r\n\r\n","<template>\r\n    <h1 :class=\"Class.getClass('ptj-repo-header-title')\">{{ store.title }}</h1>\r\n    <ptj-nav :actions=\"store.actions\" :class=\"Class.getClass('ptj-repo-header-actions')\"/>\r\n    <ptj-filter-form  v-if=\"store.disable_filter != true\"/>\r\n    <ptj-selectfields v-if=\"store.disable_selectfields != true\" />\r\n</template>\r\n\r\n<script>\r\n\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCFilterForm from \"./ptj-filter-form.vue\"\r\nimport GCPagination from \"./ptj-pagination.vue\"\r\nimport GCSelectFields from \"./ptj-selectfields.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-header',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n    components : {\r\n        \"ptj-nav\" : GCNav,\r\n        \"ptj-filter-form\" : GCFilterForm,\r\n        \"ptj-pagination\" : GCPagination,\r\n        \"ptj-selectfields\" : GCSelectFields\r\n    }\r\n});\r\n</script>\r\n","<template>\r\n    <h1 :class=\"Class.getClass('ptj-repo-header-title')\">{{ store.title }}</h1>\r\n    <ptj-nav :actions=\"store.actions\" :class=\"Class.getClass('ptj-repo-header-actions')\"/>\r\n    <ptj-filter-form  v-if=\"store.disable_filter != true\"/>\r\n    <ptj-selectfields v-if=\"store.disable_selectfields != true\" />\r\n</template>\r\n\r\n<script>\r\n\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCFilterForm from \"./ptj-filter-form.vue\"\r\nimport GCPagination from \"./ptj-pagination.vue\"\r\nimport GCSelectFields from \"./ptj-selectfields.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-header',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n    components : {\r\n        \"ptj-nav\" : GCNav,\r\n        \"ptj-filter-form\" : GCFilterForm,\r\n        \"ptj-pagination\" : GCPagination,\r\n        \"ptj-selectfields\" : GCSelectFields\r\n    }\r\n});\r\n</script>\r\n","<template >\r\n    <div :class=\"Class.getClass('ptj-tree-node') + ' ptj-draggable' + this.getRowClass()\" :id=\"branch[store.primarykeyname]\" draggable=\"false\">\r\n        <div :class=\"Class.getClass('ptj-tree-node-row')\" @click=\"selectRow(branch[store.primarykeyname]);\">  \r\n            <div>\r\n                <a v-if=\"ischild\" data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle(branch[store.primarykeyname], false)\">\r\n                    <span class=\"material-icons\">subdirectory_arrow_right</span>\r\n                </a>\r\n                <a v-else data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle(branch[store.primarykeyname], true)\">\r\n                    <span class=\"material-icons\">keyboard_arrow_right</span>\r\n                </a>\r\n            </div>\r\n            <div v-if=\"sortable\">\r\n                <a data-action=\"more\" class=\"button\" @click=\"prevent.stop\" @mousedown=\"setDraggable\" @mouseup=\"endDraggable\">\r\n                    <span class=\"material-icons\">drag_handle</span>\r\n                </a>\r\n            </div>\r\n            <div v-for=\"(field, cindex) in store.fields\" :key=\"cindex\" v-show=\"field.on\">\r\n                <span>{{ field.label }}: {{ branch[field.name].display }}</span>\r\n            </div>\r\n            \r\n        </div>\r\n        <ptj-tree-node v-for=\"(obj, index) in children\" :branch=\"obj\" :ischild=\"true\"  :key=\"index\" v-show=\"toggle_state[branch[store.primarykeyname]]\" :store=\"store\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n\tname : \"ptj-tree-node\",\r\n\tprops : {\r\n\t\tbranch : {\r\n            type : Object,\r\n            required : true\r\n        },\r\n        draggable : Boolean,\r\n        ischild : {\r\n            type : Boolean,\r\n            default : false\r\n        }\r\n\r\n\t},\r\n    data() {\r\n        return {\r\n            toggle_state : {}\r\n        }\r\n    },\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n\tmethods : {\r\n        toggle(index) {\r\n            this.toggle_state[index] = (this.toggle_state[index]) ? false : true;\r\n        },\r\n        setDraggable(e) {\r\n            e.target.closest(\".ptj-draggable\").setAttribute(\"draggable\", true);\r\n        },\r\n        endDraggable(e) {\r\n            e.target.closest(\".ptj-draggable\").setAttribute(\"draggable\", false);\r\n        },\r\n        selectRow(key) {\r\n            this.store.next(key);\r\n            Ctrl.buildLink();\r\n        },\r\n        getRowClass() {\r\n            let str = [];\r\n            for(let name of this.store.groups) {\r\n                str.push(this.store.model + \"-\" + name.replace(\"_\", \"-\") + \"-\" + this.branch[name]);\r\n            }\r\n            return str.join(\" \");\r\n        }\r\n\t},\r\n    computed : {\r\n        sortable() {\r\n            return true;\r\n        },\r\n        children() {\r\n            let arr = [];\r\n            if (this.store.circular && this.branch[this.store.model]) arr = this.branch[this.store.model];\r\n            for(let i in this.store.activechildren) {\r\n                if (this.branch[this.store.activechildren[i]]) arr=arr.concat(this.branch[this.store.activechildren[i]]);\r\n            }\r\n            return arr;\r\n        }\r\n    },\r\n\tcomponents : {\r\n\t\r\n\t}\r\n});\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.model-tree.branch {\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  margin: 6px 0;\r\n  background-color:#111111;\r\n}\r\n\r\n.tree .ide-block {\r\n\tdisplay : none;\r\n}\r\n\r\n.dragArea {\r\n  min-height: 50px;\r\n  outline: 1px solid #777777;\r\n}\r\n\r\n\r\n</style>","<template >\r\n    <div :class=\"Class.getClass('ptj-tree-node') + ' ptj-draggable' + this.getRowClass()\" :id=\"branch[store.primarykeyname]\" draggable=\"false\">\r\n        <div :class=\"Class.getClass('ptj-tree-node-row')\" @click=\"selectRow(branch[store.primarykeyname]);\">  \r\n            <div>\r\n                <a v-if=\"ischild\" data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle(branch[store.primarykeyname], false)\">\r\n                    <span class=\"material-icons\">subdirectory_arrow_right</span>\r\n                </a>\r\n                <a v-else data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle(branch[store.primarykeyname], true)\">\r\n                    <span class=\"material-icons\">keyboard_arrow_right</span>\r\n                </a>\r\n            </div>\r\n            <div v-if=\"sortable\">\r\n                <a data-action=\"more\" class=\"button\" @click=\"prevent.stop\" @mousedown=\"setDraggable\" @mouseup=\"endDraggable\">\r\n                    <span class=\"material-icons\">drag_handle</span>\r\n                </a>\r\n            </div>\r\n            <div v-for=\"(field, cindex) in store.fields\" :key=\"cindex\" v-show=\"field.on\">\r\n                <span>{{ field.label }}: {{ branch[field.name].display }}</span>\r\n            </div>\r\n            \r\n        </div>\r\n        <ptj-tree-node v-for=\"(obj, index) in children\" :branch=\"obj\" :ischild=\"true\"  :key=\"index\" v-show=\"toggle_state[branch[store.primarykeyname]]\" :store=\"store\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n\tname : \"ptj-tree-node\",\r\n\tprops : {\r\n\t\tbranch : {\r\n            type : Object,\r\n            required : true\r\n        },\r\n        draggable : Boolean,\r\n        ischild : {\r\n            type : Boolean,\r\n            default : false\r\n        }\r\n\r\n\t},\r\n    data() {\r\n        return {\r\n            toggle_state : {}\r\n        }\r\n    },\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n\tmethods : {\r\n        toggle(index) {\r\n            this.toggle_state[index] = (this.toggle_state[index]) ? false : true;\r\n        },\r\n        setDraggable(e) {\r\n            e.target.closest(\".ptj-draggable\").setAttribute(\"draggable\", true);\r\n        },\r\n        endDraggable(e) {\r\n            e.target.closest(\".ptj-draggable\").setAttribute(\"draggable\", false);\r\n        },\r\n        selectRow(key) {\r\n            this.store.next(key);\r\n            Ctrl.buildLink();\r\n        },\r\n        getRowClass() {\r\n            let str = [];\r\n            for(let name of this.store.groups) {\r\n                str.push(this.store.model + \"-\" + name.replace(\"_\", \"-\") + \"-\" + this.branch[name]);\r\n            }\r\n            return str.join(\" \");\r\n        }\r\n\t},\r\n    computed : {\r\n        sortable() {\r\n            return true;\r\n        },\r\n        children() {\r\n            let arr = [];\r\n            if (this.store.circular && this.branch[this.store.model]) arr = this.branch[this.store.model];\r\n            for(let i in this.store.activechildren) {\r\n                if (this.branch[this.store.activechildren[i]]) arr=arr.concat(this.branch[this.store.activechildren[i]]);\r\n            }\r\n            return arr;\r\n        }\r\n    },\r\n\tcomponents : {\r\n\t\r\n\t}\r\n});\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.model-tree.branch {\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  margin: 6px 0;\r\n  background-color:#111111;\r\n}\r\n\r\n.tree .ide-block {\r\n\tdisplay : none;\r\n}\r\n\r\n.dragArea {\r\n  min-height: 50px;\r\n  outline: 1px solid #777777;\r\n}\r\n\r\n\r\n</style>","class GCDragNDrop {\r\n\r\n    constructor(props = {}) {\r\n        this._handle = props.handle;\r\n        this._drop_target = props.drop_target;\r\n        this._drag_target = props.drag_target;\r\n        this._call_back = props.callback;\r\n        this._x = 0;\r\n        this._y = 0;\r\n        this._offset_x = 0;\r\n        this._offset_y = 0;\r\n        this._judder = (props.judder) ? props.judder : 5;\r\n        this._drag_node;\r\n        this._drop_node;\r\n        this._tree = props.tree;\r\n    }\r\n\r\n    isJudder(x, y) {\r\n        const dx = x - this._x;\r\n        const dy = y - this._y;\r\n      \r\n        if (dx < -5 || dx > 5) return false;\r\n        else if (dy < -5 || dy > 5) return false;\r\n        else return true;\r\n    }\r\n\r\n    getDirection(x, y) {\r\n        const dir_x = (x == this._x) ? 0 : (x > this._x) ? 1 : -1;\r\n        const dir_y = (y == this._y) ? 0 : (y > this._y) ? 1 : -1;\r\n      \r\n        return { x : dir_x, y : dir_y };\r\n    }\r\n\r\n    offset(elem) {\r\n        var rect = elem.getBoundingClientRect();\r\n        var win = elem.ownerDocument.defaultView;\r\n\r\n        return {\r\n            top: rect.top + win.pageYOffset,\r\n            left: rect.left + win.pageXOffset\r\n        };\r\n    }\r\n\r\n    insertAfter() {\r\n        let drag_id = this._drag_node.getAttribute(\"id\");\r\n        let drop_id = this._drop_node.getAttribute(\"id\");\r\n\r\n        let circular = 0;\r\n        let sort = 0;\r\n        if (this._drop_node.nextElementSibling) {\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drop_id) {\r\n                    circular = node.circular;\r\n                    sort = node.sort;\r\n                    break;\r\n                } \r\n            }\r\n\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drag_id) {\r\n                    node.circular = circular;\r\n                    node.sort = sort + 1;\r\n                } else if (node.circular == circular && node.sort > sort) {\r\n                    ++node.sort;\r\n                }\r\n            }\r\n        } else {\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drag_id) {\r\n                    node.circular = circular;\r\n                    node.sort = 0;\r\n                } \r\n            }\r\n        }\r\n    }\r\n\r\n    insertBefore() {\r\n        let drag_id = this._drag_node.getAttribute(\"id\");\r\n        let drop_id = this._drop_node.getAttribute(\"id\");\r\n\r\n        let circular = 0;\r\n        let sort = 0;\r\n        for(let i in this._tree) {\r\n            let node = this._tree[i];\r\n            if (node.id == drop_id) {\r\n                circular = node.circular;\r\n                sort = node.sort;\r\n                ++node.sort;\r\n                break;\r\n            } \r\n        }\r\n\r\n        for(let i in this._tree) {\r\n            let node = this._tree[i];\r\n            if (node.id == drag_id) {\r\n                node.circular = circular;\r\n                node.sort = sort;\r\n            } else if (node.circular == circular && node.sort > sort) {\r\n                ++node.sort;\r\n            }\r\n        }\r\n    }\r\n\r\n    dragStart(ev) {\r\n        const targ = ev.target.closest('[id]');\r\n        this._drag_node = targ;\r\n        const { top, left } = this.offset(targ);\r\n\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n\r\n        this._x = ev.clientX;\r\n        this._y = ev.clientY;\r\n    \r\n        this._offset_x = ev.clientX - left;\r\n        this._offset_y = ev.clientY - top;\r\n    }\r\n\r\n    isDroppable(ev) {\r\n        let cont = ev.target.closest(this._drop_target);\r\n        return (cont) ? true : false;\r\n    }\r\n\r\n    dragEnter(ev) {\r\n        if (!this.isDroppable(ev)) return true;\r\n        ev.preventDefault();\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n\r\n        this._drop_node = ev.target.closest(this._drag_target);\r\n\r\n        if (!this._drop_node || this._drop_node.getAttribute(\"id\") == this._drag_node.getAttribute(\"id\")) {\r\n            return;\r\n        }\r\n\r\n        const dir = this.getDirection(ev.clientX, ev.clientY);\r\n\r\n        if (dir.y == 1) {\r\n            this.insertAfter();\r\n        } else if (dir.y == -1) {\r\n            this.insertBefore();\r\n        }\r\n        this._x = ev.clientX;\r\n        this._y = ev.clientY;\r\n    }\r\n\r\n    dragOver(ev) {\r\n        if (!this.isDroppable(ev)) return true;\r\n        ev.preventDefault();\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n    }\r\n\r\n\r\n    dragEnd() {\r\n        if (this._drag_node) this._drag_node.setAttribute(\"draggable\", false);\r\n        this._drag_node = null;\r\n    }\r\n\r\n    drop(ev) {\r\n        if (!this._drop_node) return true;\r\n        ev.preventDefault();\r\n        if (this._call_back) this._call_back(this._tree);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction initDD(props) {\r\n    let drag = new GCDragNDrop(props);\r\n    let handles = document.querySelectorAll(props.handle);\r\n    handles.forEach(el => el.addAttribute(\"draggable\", true));\r\n\r\n    if (props.handle) {\r\n\r\n        let handles = document.querySelectorAll(props.handle);\r\n\r\n        handles.forEach(el => {\r\n            el.addEventListener(\"mousedown\", e => {\r\n                let cont = e.target.closest(props.drag_target);\r\n                cont.addAttribute(\"draggable\", true);\r\n            });            \r\n        });\r\n    }\r\n\r\n    props.main.addEventListener(\"dragstart\", e => drag.dragStart(e));\r\n    props.main.addEventListener(\"dragenter\", e => drag.dragEnter(e));\r\n    props.main.addEventListener(\"dragover\", e => drag.dragOver(e));\r\n    props.main.addEventListener(\"drop\", e => drag.drop(e));\r\n    props.main.addEventListener(\"dragend\", e => drag.dragEnd(e));\r\n}\r\n\r\nexport default {\r\n    initDD\r\n}","<template >\r\n  <div :class=\"Class.getClass('ptj-tree') + ' ' + store.classes + ' ptj-drop-target'\" ref=\"treeroot\">\r\n    <ptj-tree-node v-for=\"(obj, index) in store.data\" :key=\"index\" :branch=\"obj\"  />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, defineComponent } from 'vue'\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCTreeNode from \"./ptj-tree-node.vue\"\r\nimport GCDragDrop from \"../js/dragndrop.js\"\r\nimport GCFilterForm from \"./ptj-filter-form.vue\"\r\nimport GCSelectFields from \"./ptj-selectfields.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n\tname : \"ptj-tree\",\r\n    setup(props) {\r\n        let base = { store : Ctrl.getStore(), treeroot : ref(null), Class };\r\n        onMounted(() => {\r\n           //if (ctrl.sort) {\r\n             GCDragDrop.initDD({\r\n               handle : '.ptj-drag-handle',\r\n               drag_target : '.ptj-draggable',\r\n               drop_target : '.ptj-drop-target',\r\n               main : base.treeroot.value,\r\n               tree : base.store.data,\r\n               callback : base.store.saveSort\r\n             });\r\n           //}\r\n        });\r\n\r\n       return base;\r\n   },\r\n    components : {\r\n        \"ptj-nav\" : GCNav,\r\n        \"ptj-tree-node\" : GCTreeNode,\r\n        \"ptj-filter-form\" : GCFilterForm,\r\n        \"ptj-selectfields\" : GCSelectFields\r\n    }\r\n});\r\n\r\n\r\n</script>\r\n","<template >\r\n  <div :class=\"Class.getClass('ptj-tree') + ' ' + store.classes + ' ptj-drop-target'\" ref=\"treeroot\">\r\n    <ptj-tree-node v-for=\"(obj, index) in store.data\" :key=\"index\" :branch=\"obj\"  />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, defineComponent } from 'vue'\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCTreeNode from \"./ptj-tree-node.vue\"\r\nimport GCDragDrop from \"../js/dragndrop.js\"\r\nimport GCFilterForm from \"./ptj-filter-form.vue\"\r\nimport GCSelectFields from \"./ptj-selectfields.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n\tname : \"ptj-tree\",\r\n    setup(props) {\r\n        let base = { store : Ctrl.getStore(), treeroot : ref(null), Class };\r\n        onMounted(() => {\r\n           //if (ctrl.sort) {\r\n             GCDragDrop.initDD({\r\n               handle : '.ptj-drag-handle',\r\n               drag_target : '.ptj-draggable',\r\n               drop_target : '.ptj-drop-target',\r\n               main : base.treeroot.value,\r\n               tree : base.store.data,\r\n               callback : base.store.saveSort\r\n             });\r\n           //}\r\n        });\r\n\r\n       return base;\r\n   },\r\n    components : {\r\n        \"ptj-nav\" : GCNav,\r\n        \"ptj-tree-node\" : GCTreeNode,\r\n        \"ptj-filter-form\" : GCFilterForm,\r\n        \"ptj-selectfields\" : GCSelectFields\r\n    }\r\n});\r\n\r\n\r\n</script>\r\n","<template>\r\n    <table :class=\"Class.getClass('ptj-table') + ' ' + store.classes\">\r\n    <thead>\r\n        <tr :class=\"Class.getClass('ptj-table-header')\">\r\n        <th v-for=\"(cell, index) in store.fields\" :key=\"cell.name\" :class=\"Class.getClass('ptj-table-header-cell') + ' ' + cell.name.replace('_', '-')\" v-show=\"store.fields[index].on\">{{ cell.label }}\r\n            <span v-if=\"sortable == false\" class=\"material-icons\" @click=\"orderBy(cell, false);\">keyboard_arrow_up</span>\r\n            <span v-if=\"sortable == false\" class=\"material-icons\" @click=\"orderBy(cell, true);\">keyboard_arrow_down</span>\r\n        </th>\r\n        <th v-if=\"sortable\">&nbsp;</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"(obj, rindex) in store.data\" :key=\"rindex\" :class=\"Class.getClass('ptj-table-row') + ' ' + this.getRowClass(obj)\" @click=\"next(obj[store.primarykeyname]);\">\r\n        <td v-for=\"(field, index) in store.fields\" :key=\"index\" :class=\"Class.getClass('ptj-table-cell') + ' ' + field.name.replace('_', '-')\" v-show=\"store.fields[index].on\">{{ obj[field.name].display }}</td>\r\n        <td :class=\"Class.getClass('ptj-table-cell-sortable')\" v-if=\"sortable\">\r\n            <a data-action=\"more\" class=\"button\" @click.prevent=\"toggle\" draggable=\"true\">\r\n                <span class=\"material-icons\">drag</span>\r\n            </a>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n    <ptj-pagination v-if=\"overlimit\" />\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport GCPagination from \"./ptj-pagination.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    name: 'ptj-table',\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class}\r\n    },\r\n    methods : {\r\n        next(key) {\r\n            this.store.next(key);\r\n            Ctrl.buildLink();\r\n        },\r\n        orderBy(cell, dir) {\r\n            let order = {};\r\n            order[cell.name] = dir;\r\n            this.store.orderby = order;\r\n            if (this.store.pages > 0) {\r\n                this.store.load();\r\n            } else {\r\n                //custom sort on the table\r\n                if (dir) {\r\n                    this.store.data.sort(function(x, y) {\r\n                        let xval = x[cell.name];\r\n                        let yval = y[cell.name];\r\n                        if (xval < yval) {\r\n                            return -1;\r\n                        } else if (xval > yval) {\r\n                            return 1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.store.data.sort(function(x, y) {\r\n                        let xval = x[cell.name];\r\n                        let yval = y[cell.name];\r\n                        if (xval < yval) {\r\n                            return 1;\r\n                        } else if (xval > yval) {\r\n                            return -1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        getRowClass(obj) {\r\n            let str = [];\r\n            for(let name of this.store.groups) {\r\n                str.push(this.store.model + \"-\" + name.replace(\"_\", \"-\") + \"-\" + obj[name]);\r\n            }\r\n            return str.join(\" \");\r\n        }\r\n    },\r\n    computed : {\r\n        sortable() {\r\n            return (this.store.sort) ? true : false;\r\n        },\r\n        overlimit() {\r\n            return false;\r\n        },\r\n        rowclass() {\r\n\r\n        }\r\n    },\r\n    components : {\r\n        \"ptj-pagination\" : GCPagination,\r\n    }\r\n\r\n   \r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n</style>","<template>\r\n    <table :class=\"Class.getClass('ptj-table') + ' ' + store.classes\">\r\n    <thead>\r\n        <tr :class=\"Class.getClass('ptj-table-header')\">\r\n        <th v-for=\"(cell, index) in store.fields\" :key=\"cell.name\" :class=\"Class.getClass('ptj-table-header-cell') + ' ' + cell.name.replace('_', '-')\" v-show=\"store.fields[index].on\">{{ cell.label }}\r\n            <span v-if=\"sortable == false\" class=\"material-icons\" @click=\"orderBy(cell, false);\">keyboard_arrow_up</span>\r\n            <span v-if=\"sortable == false\" class=\"material-icons\" @click=\"orderBy(cell, true);\">keyboard_arrow_down</span>\r\n        </th>\r\n        <th v-if=\"sortable\">&nbsp;</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"(obj, rindex) in store.data\" :key=\"rindex\" :class=\"Class.getClass('ptj-table-row') + ' ' + this.getRowClass(obj)\" @click=\"next(obj[store.primarykeyname]);\">\r\n        <td v-for=\"(field, index) in store.fields\" :key=\"index\" :class=\"Class.getClass('ptj-table-cell') + ' ' + field.name.replace('_', '-')\" v-show=\"store.fields[index].on\">{{ obj[field.name].display }}</td>\r\n        <td :class=\"Class.getClass('ptj-table-cell-sortable')\" v-if=\"sortable\">\r\n            <a data-action=\"more\" class=\"button\" @click.prevent=\"toggle\" draggable=\"true\">\r\n                <span class=\"material-icons\">drag</span>\r\n            </a>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n    <ptj-pagination v-if=\"overlimit\" />\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport GCPagination from \"./ptj-pagination.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    name: 'ptj-table',\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class}\r\n    },\r\n    methods : {\r\n        next(key) {\r\n            this.store.next(key);\r\n            Ctrl.buildLink();\r\n        },\r\n        orderBy(cell, dir) {\r\n            let order = {};\r\n            order[cell.name] = dir;\r\n            this.store.orderby = order;\r\n            if (this.store.pages > 0) {\r\n                this.store.load();\r\n            } else {\r\n                //custom sort on the table\r\n                if (dir) {\r\n                    this.store.data.sort(function(x, y) {\r\n                        let xval = x[cell.name];\r\n                        let yval = y[cell.name];\r\n                        if (xval < yval) {\r\n                            return -1;\r\n                        } else if (xval > yval) {\r\n                            return 1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.store.data.sort(function(x, y) {\r\n                        let xval = x[cell.name];\r\n                        let yval = y[cell.name];\r\n                        if (xval < yval) {\r\n                            return 1;\r\n                        } else if (xval > yval) {\r\n                            return -1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        getRowClass(obj) {\r\n            let str = [];\r\n            for(let name of this.store.groups) {\r\n                str.push(this.store.model + \"-\" + name.replace(\"_\", \"-\") + \"-\" + obj[name]);\r\n            }\r\n            return str.join(\" \");\r\n        }\r\n    },\r\n    computed : {\r\n        sortable() {\r\n            return (this.store.sort) ? true : false;\r\n        },\r\n        overlimit() {\r\n            return false;\r\n        },\r\n        rowclass() {\r\n\r\n        }\r\n    },\r\n    components : {\r\n        \"ptj-pagination\" : GCPagination,\r\n    }\r\n\r\n   \r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n</style>","<template>\r\n  <div :class=\"Class.getClass('ptj-list') + ' ' + store.classes\">\r\n    <div v-for=\"(combinations, index) in getIndexCombinations\" :key=\"index\">\r\n      <h3><span\r\n              v-for=\"(tag, index) in combinations.tags\"\r\n              :key=\"index\"\r\n              >{{ tag }}&nbsp;</span></h3>\r\n      <ul>\r\n        <li v-for=\"ckey in combinations.data\" :key=\"ckey\">\r\n          <a @click=\"next(store.data[ckey][store.primarykeyname])\">\r\n            <span\r\n              v-for=\"field in store.fields\"\r\n              :key=\"field.name\"\r\n              v-show=\"field.on\"\r\n              >{{ store.data[ckey][field.name].display }}&nbsp;</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from \"vue\";\r\nimport Ctrl from \"../js/controller.js\";\r\nimport Class from \"../js/classinjection.js\";\r\n\r\nexport default defineComponent({\r\n  name: \"ptj-list\",\r\n  setup() {\r\n    return { store: Ctrl.getStore(), Class };\r\n  },\r\n  methods: {\r\n    next(key) {\r\n      this.store.next(key);\r\n      Ctrl.buildLink();\r\n    },\r\n    getCombinations(tag, data, combos) {\r\n      const ncombos = [];\r\n      if (combos.length == 0) {\r\n          for(let d in data) {\r\n            ncombos.push({ tags : [ data[d].display ], data : data[d].contains});\r\n          }\r\n      } else {\r\n        for (let c of combos) {\r\n          for(let d in data) {\r\n            let tags = c.tags;\r\n            tags.push(d.display);\r\n            ncombos.push({ tags : tags, data : c.data.filter( value => data[d].contains.includes(value))});\r\n          }\r\n        }\r\n      }\r\n      return ncombos;\r\n    }\r\n  },\r\n  computed: {\r\n    getIndexCombinations() {\r\n      let combos = [];\r\n      for (let group in this.store.indexes) {\r\n          combos = this.getCombinations(group, this.store.indexes[group], combos);\r\n      }\r\n      console.log(combos);\r\n      return combos;\r\n    },\r\n  },\r\n});\r\n</script>\r\n\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-list') + ' ' + store.classes\">\r\n    <div v-for=\"(combinations, index) in getIndexCombinations\" :key=\"index\">\r\n      <h3><span\r\n              v-for=\"(tag, index) in combinations.tags\"\r\n              :key=\"index\"\r\n              >{{ tag }}&nbsp;</span></h3>\r\n      <ul>\r\n        <li v-for=\"ckey in combinations.data\" :key=\"ckey\">\r\n          <a @click=\"next(store.data[ckey][store.primarykeyname])\">\r\n            <span\r\n              v-for=\"field in store.fields\"\r\n              :key=\"field.name\"\r\n              v-show=\"field.on\"\r\n              >{{ store.data[ckey][field.name].display }}&nbsp;</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from \"vue\";\r\nimport Ctrl from \"../js/controller.js\";\r\nimport Class from \"../js/classinjection.js\";\r\n\r\nexport default defineComponent({\r\n  name: \"ptj-list\",\r\n  setup() {\r\n    return { store: Ctrl.getStore(), Class };\r\n  },\r\n  methods: {\r\n    next(key) {\r\n      this.store.next(key);\r\n      Ctrl.buildLink();\r\n    },\r\n    getCombinations(tag, data, combos) {\r\n      const ncombos = [];\r\n      if (combos.length == 0) {\r\n          for(let d in data) {\r\n            ncombos.push({ tags : [ data[d].display ], data : data[d].contains});\r\n          }\r\n      } else {\r\n        for (let c of combos) {\r\n          for(let d in data) {\r\n            let tags = c.tags;\r\n            tags.push(d.display);\r\n            ncombos.push({ tags : tags, data : c.data.filter( value => data[d].contains.includes(value))});\r\n          }\r\n        }\r\n      }\r\n      return ncombos;\r\n    }\r\n  },\r\n  computed: {\r\n    getIndexCombinations() {\r\n      let combos = [];\r\n      for (let group in this.store.indexes) {\r\n          combos = this.getCombinations(group, this.store.indexes[group], combos);\r\n      }\r\n      console.log(combos);\r\n      return combos;\r\n    },\r\n  },\r\n});\r\n</script>\r\n\r\n","<template>\r\n<div :class=\"Class.getClass('ptj-repo') + ' ' + store.classes\">\r\n    <ptj-repo-header  />\r\n    <component :key=\"store.key\" :is=\"store.rawcomponent\" />\r\n</div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport PTJRepoHeader from \"./ptj-repo-header.vue\"\r\nimport PTJTree from \"./ptj-tree.vue\"\r\nimport PTJTable from \"./ptj-table.vue\"\r\nimport PTJList from \"./ptj-list.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-repo',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n    components : {\r\n        \"ptj-repo-header\" : PTJRepoHeader,\r\n        \"ptj-tree\" : PTJTree,\r\n        \"ptj-table\" : PTJTable,\r\n        \"ptj-list\" : PTJList\r\n    }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n\r\n.ptj-data-row:nth-child(odd) {background : #CCC}\r\n\r\n</style>","<template>\r\n<div :class=\"Class.getClass('ptj-repo') + ' ' + store.classes\">\r\n    <ptj-repo-header  />\r\n    <component :key=\"store.key\" :is=\"store.rawcomponent\" />\r\n</div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport PTJRepoHeader from \"./ptj-repo-header.vue\"\r\nimport PTJTree from \"./ptj-tree.vue\"\r\nimport PTJTable from \"./ptj-table.vue\"\r\nimport PTJList from \"./ptj-list.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-repo',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n    components : {\r\n        \"ptj-repo-header\" : PTJRepoHeader,\r\n        \"ptj-tree\" : PTJTree,\r\n        \"ptj-table\" : PTJTable,\r\n        \"ptj-list\" : PTJList\r\n    }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n\r\n.ptj-data-row:nth-child(odd) {background : #CCC}\r\n\r\n</style>","<template>\r\n    <div :class=\"Class.getClass('ptj-single-item') + ' ' + store.classes\">\r\n        <h1>{{ store.title }}</h1>\r\n        <ptj-nav :actions=\"store.actions\" :class=\"Class.getClass('ptj-single-item-actions')\" />\r\n        <div v-for=\"(field, index) in store.fields\" :key=\"index\" :class=\"Class.getClass('ptj-single-item-row') + ' ' + field.name\">\r\n            <span :class=\"Class.getClass('ptj-single-item-label')\">{{ field.label }}</span>&nbsp;<span :class=\"Class.getClass('ptj-single-item-value')\">{{ field.val }}</span>\r\n        </div>\r\n    </div>\r\n    <ptj-nav :actions=\"store.children\" :class=\"Class.getClass('ptj-single-item-children')\" />\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-single-item',\r\n  props : {\r\n      active : {\r\n          type : Boolean,\r\n          default : false\r\n      }\r\n  },\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  computed : {\r\n      editnav() {\r\n          return this.store.actions.put;\r\n      },\r\n      delnav() {\r\n          return this.store.actions.delete;\r\n      },\r\n      title() {\r\n          return this.store.title + \" \" + this.store.summary();\r\n      }\r\n  },\r\n  methods : {\r\n      runDel() {\r\n          this.store.runDelete();\r\n      }\r\n  },\r\n  components : {\r\n    \"ptj-nav\" : GCNav, \"ptj-widget\" : GCWidget\r\n  }\r\n});\r\n    \r\n\r\n</script>","<template>\r\n    <div :class=\"Class.getClass('ptj-single-item') + ' ' + store.classes\">\r\n        <h1>{{ store.title }}</h1>\r\n        <ptj-nav :actions=\"store.actions\" :class=\"Class.getClass('ptj-single-item-actions')\" />\r\n        <div v-for=\"(field, index) in store.fields\" :key=\"index\" :class=\"Class.getClass('ptj-single-item-row') + ' ' + field.name\">\r\n            <span :class=\"Class.getClass('ptj-single-item-label')\">{{ field.label }}</span>&nbsp;<span :class=\"Class.getClass('ptj-single-item-value')\">{{ field.val }}</span>\r\n        </div>\r\n    </div>\r\n    <ptj-nav :actions=\"store.children\" :class=\"Class.getClass('ptj-single-item-children')\" />\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-single-item',\r\n  props : {\r\n      active : {\r\n          type : Boolean,\r\n          default : false\r\n      }\r\n  },\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  computed : {\r\n      editnav() {\r\n          return this.store.actions.put;\r\n      },\r\n      delnav() {\r\n          return this.store.actions.delete;\r\n      },\r\n      title() {\r\n          return this.store.title + \" \" + this.store.summary();\r\n      }\r\n  },\r\n  methods : {\r\n      runDel() {\r\n          this.store.runDelete();\r\n      }\r\n  },\r\n  components : {\r\n    \"ptj-nav\" : GCNav, \"ptj-widget\" : GCWidget\r\n  }\r\n});\r\n    \r\n\r\n</script>","<template>\r\n <div :class=\"Class.getClass('ptj-accounthandler')\">\r\n    <h1>{{ store.title }}</h1>\r\n    <ptj-form />\r\n    <ptj-nav :action=\"store.actions\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCForm from \"./ptj-form.vue\"\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"./../js/classinjection.js\"\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-login',\r\n  setup() {\r\n      let store = Ctrl.getStore()\r\n      store.next = () => {\r\n           Ctrl.reloadFromBase();\r\n      }\r\n      return { store : store, Class }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-form\" : GCForm, \"ptj-nav\" : GCNav\r\n    }\r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n <div :class=\"Class.getClass('ptj-accounthandler')\">\r\n    <h1>{{ store.title }}</h1>\r\n    <ptj-form />\r\n    <ptj-nav :action=\"store.actions\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCForm from \"./ptj-form.vue\"\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"./../js/classinjection.js\"\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-login',\r\n  setup() {\r\n      let store = Ctrl.getStore()\r\n      store.next = () => {\r\n           Ctrl.reloadFromBase();\r\n      }\r\n      return { store : store, Class }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-form\" : GCForm, \"ptj-nav\" : GCNav\r\n    }\r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n    <ptj-widget :title=\"title\" :active=\"active\">\r\n        <div :class=\"classes\">\r\n            <a @click=\"next\"><span class=\"material-icons\">view_carousel</span></a>\r\n            <div v-for=\"(field, index) in store.fields\" :key=\"index\" :class=\"rowclass + ' ' + field.name\">\r\n                <span :class=\"labelclass\">{{ field.label }}</span>&nbsp;<span :class=\"rowclass\">{{ field.val }}</span>\r\n            </div>\r\n        </div>\r\n    </ptj-widget>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-card',\r\n  props : {\r\n      store : Object,\r\n      active : {\r\n          type : Boolean,\r\n          default : false\r\n      }\r\n  },\r\n  methods : {\r\n      next() {\r\n          this.store.next();\r\n          Ctrl.buildLink();\r\n      }\r\n  },\r\n  computed : {\r\n      title() {\r\n          return this.store.title;\r\n      },\r\n      classes() {\r\n          return Class.getClass(\"ptj-card\")  + \" \" + this.store.classes;\r\n      },\r\n      rowclass() {\r\n          return Class.getClass(\"ptj-card-row\");\r\n      },\r\n      labelclass() {\r\n          return Class.getClass(\"ptj-card-label\");\r\n      },\r\n      valueclass() {\r\n          return Class.getClass(\"ptj-card-value\");\r\n      }\r\n  },\r\n  components : {\r\n    \"ptj-widget\" : GCWidget\r\n  }\r\n});\r\n    \r\n\r\n</script>","<template>\r\n    <ptj-widget :title=\"title\" :active=\"active\">\r\n        <div :class=\"classes\">\r\n            <a @click=\"next\"><span class=\"material-icons\">view_carousel</span></a>\r\n            <div v-for=\"(field, index) in store.fields\" :key=\"index\" :class=\"rowclass + ' ' + field.name\">\r\n                <span :class=\"labelclass\">{{ field.label }}</span>&nbsp;<span :class=\"rowclass\">{{ field.val }}</span>\r\n            </div>\r\n        </div>\r\n    </ptj-widget>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-card',\r\n  props : {\r\n      store : Object,\r\n      active : {\r\n          type : Boolean,\r\n          default : false\r\n      }\r\n  },\r\n  methods : {\r\n      next() {\r\n          this.store.next();\r\n          Ctrl.buildLink();\r\n      }\r\n  },\r\n  computed : {\r\n      title() {\r\n          return this.store.title;\r\n      },\r\n      classes() {\r\n          return Class.getClass(\"ptj-card\")  + \" \" + this.store.classes;\r\n      },\r\n      rowclass() {\r\n          return Class.getClass(\"ptj-card-row\");\r\n      },\r\n      labelclass() {\r\n          return Class.getClass(\"ptj-card-label\");\r\n      },\r\n      valueclass() {\r\n          return Class.getClass(\"ptj-card-value\");\r\n      }\r\n  },\r\n  components : {\r\n    \"ptj-widget\" : GCWidget\r\n  }\r\n});\r\n    \r\n\r\n</script>","<template>\r\n    <div :class=\"Class.getClass('ptj-tabs')\">\r\n        <div :class=\"Class.getClass('ptj-tabs-card')\" v-for=\"parent in parents\" :key=\"parent.name + '-parent'\">\r\n            <ptj-card :store=\"parent.store\" />\r\n        </div>\r\n      \r\n        <div :class=\"Class.getClass('ptj-tabs-tab')\" >\r\n            <component :key=\"store.index\" :is=\"store.component\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport GCForm from \"./ptj-form.vue\"\r\nimport GCRepo from \"./ptj-repo.vue\"\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCSingleItem from \"./ptj-single-item.vue\"\r\nimport GCAccountHandler from \"./ptj-accounthandler.vue\"\r\nimport GCCard from \"./ptj-card.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        index: {\r\n            type : Boolean,\r\n        }\r\n    },\r\n    setup(props) {\r\n        if (props.index) Ctrl.next();\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n    computed : {\r\n        parents() {\r\n            return this.store.parent_models.slice().reverse();\r\n        }\r\n    },\r\n    components : {\r\n        'ptj-form' : GCForm,\r\n        'ptj-nav' : GCNav,\r\n        'ptj-single-item' : GCSingleItem,\r\n        'ptj-account-handler' : GCAccountHandler,\r\n        'ptj-repo' : GCRepo,\r\n        'ptj-card' : GCCard\r\n    }\r\n\r\n});\r\n</script>","<template>\r\n    <div :class=\"Class.getClass('ptj-tabs')\">\r\n        <div :class=\"Class.getClass('ptj-tabs-card')\" v-for=\"parent in parents\" :key=\"parent.name + '-parent'\">\r\n            <ptj-card :store=\"parent.store\" />\r\n        </div>\r\n      \r\n        <div :class=\"Class.getClass('ptj-tabs-tab')\" >\r\n            <component :key=\"store.index\" :is=\"store.component\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport GCForm from \"./ptj-form.vue\"\r\nimport GCRepo from \"./ptj-repo.vue\"\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCSingleItem from \"./ptj-single-item.vue\"\r\nimport GCAccountHandler from \"./ptj-accounthandler.vue\"\r\nimport GCCard from \"./ptj-card.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        index: {\r\n            type : Boolean,\r\n        }\r\n    },\r\n    setup(props) {\r\n        if (props.index) Ctrl.next();\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n    computed : {\r\n        parents() {\r\n            return this.store.parent_models.slice().reverse();\r\n        }\r\n    },\r\n    components : {\r\n        'ptj-form' : GCForm,\r\n        'ptj-nav' : GCNav,\r\n        'ptj-single-item' : GCSingleItem,\r\n        'ptj-account-handler' : GCAccountHandler,\r\n        'ptj-repo' : GCRepo,\r\n        'ptj-card' : GCCard\r\n    }\r\n\r\n});\r\n</script>","<template>\r\n    <Teleport to=\"#ptj-accountdetails\">\r\n    <a :class=\"Class.getClass('ptj-account-details-logout')\" @click=\"logout\">Logout</a>\r\n    </Teleport>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Client from \"./../js/client.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"./../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { Class }\r\n    },\r\n    methods : {\r\n        logout() {\r\n            Client.post(\"/core-logout\")\r\n            .then(() => {\r\n                Ctrl.reloadFromBase();\r\n            });\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Teleport to=\"#ptj-accountdetails\">\r\n    <a :class=\"Class.getClass('ptj-account-details-logout')\" @click=\"logout\">Logout</a>\r\n    </Teleport>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Client from \"./../js/client.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"./../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { Class }\r\n    },\r\n    methods : {\r\n        logout() {\r\n            Client.post(\"/core-logout\")\r\n            .then(() => {\r\n                Ctrl.reloadFromBase();\r\n            });\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n  <ptj-account-details v-if=\"isaccount\" />\r\n  <div :class=\"Class.getClass('ptj-root')\" v-for=\"group in groups\" :key=\"group.index\">\r\n    <ptj-tabs  :index=\"true\"  />\r\n </div>\r\n</template>\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCTabs from \"./ptj-tabs.vue\"\r\nimport GCAccountDetails from \"./ptj-account-details.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    name : 'ptj-root',\r\n    setup() {\r\n        return { Class }\r\n    },\r\n    computed : {\r\n        groups() {\r\n            return Ctrl.store.models;\r\n        },\r\n        isaccount() {\r\n            return Ctrl.store.profile == \"public\" ? false : true;\r\n        }\r\n    },\r\n    components : {\r\n        'ptj-tabs' : GCTabs, \"ptj-account-details\" : GCAccountDetails\r\n\r\n    }\r\n});\r\n</script>","<template>\r\n  <ptj-account-details v-if=\"isaccount\" />\r\n  <div :class=\"Class.getClass('ptj-root')\" v-for=\"group in groups\" :key=\"group.index\">\r\n    <ptj-tabs  :index=\"true\"  />\r\n </div>\r\n</template>\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCTabs from \"./ptj-tabs.vue\"\r\nimport GCAccountDetails from \"./ptj-account-details.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    name : 'ptj-root',\r\n    setup() {\r\n        return { Class }\r\n    },\r\n    computed : {\r\n        groups() {\r\n            return Ctrl.store.models;\r\n        },\r\n        isaccount() {\r\n            return Ctrl.store.profile == \"public\" ? false : true;\r\n        }\r\n    },\r\n    components : {\r\n        'ptj-tabs' : GCTabs, \"ptj-account-details\" : GCAccountDetails\r\n\r\n    }\r\n});\r\n</script>","import Ctrl from \"./presstojam/src/js/controller.js\"\r\nimport PTJRoot from \"./presstojam/src/components/ptj-root.vue\"\r\nimport { createApp } from \"vue\"\r\n\r\nfunction runApp(mount) {\r\n    const app = createApp(PTJRoot);\r\n    app.mount(mount);\r\n    return app;\r\n}\r\n\r\nexport default { \r\n    Ctrl, runApp\r\n}\r\n\r\n\r\n"],"names":["main_url","last_status","last_ok","custom_headers","status_handlers","debug","regCustomHeader","name","value","regStatusHandler","status","handler","setURL","url","regDebug","is_debug","run","headers","mode","cache","credentials","fetch","then","response","ok","json","val","omethod","method","Error","catch","err","console","log","setDebug","data","get","this","params","URLSearchParams","graph","i","Array","isArray","append","JSON","stringify","indexOf","toString","getprimary","post","body","put","patch","delete","error_invalid_map","getError","code","Validator","constructor","_min","_max","_has","_has_not","_errors","min","max","has","push","nothas","nhas","validateSize","MIN_VALUE","MAX_VALUE","OK","validate","isNaN","length","match","HAS_NOT","HAS","Field","obj","_name","_value","ref","_type","_is_primary","_is_parent","_valid","_atts","_confirm","_readonly","_placeholder","_conditions","_link","_reference","_error","_label","_on","_summary","_default","_validator","_multiple","_is_validate_on","_options","reactive","_asset","_display_value","computed","set","on","x","field","validation","confirm","readonly","placeholder","atts","default","def","asset","conditions","display_value","link","type","multiple","mult","is_primary","is_parent","reference","error","label","summary","validateon","options","isprimary","required","isparent","Errors","showError","saveAsset","id","saveFile","Promise","resolve","setOptions","Client","__data","key","e","opt","clean","Boolean","exp","calcValue","Asset","_size","_blob","_uploaded","_chunk_size","_url","_key","_key_field","chunk_size","chunk","blob","keyfield","size","uploaded","getChunk","index","start","end","view","DataView","buffer","n","byteLength","getInt8","join","loadFile","alert","delFile","file","reject","fr","FileReader","_self","onload","target","result","onerror","readAsArrayBuffer","promises","chunks","Math","ceil","__chunk","__blob","all","DataCell","display","_display","Model","_active_children","_active_state","_change_intention","_children","_circular","_default_state","_key_states","parent_key","primary_key","_parent_key","_primary_key","_settings","_states","_main_model","_to","store","fields","parent_models","title","component","rawcomponent","actions","next","primarykeyname","parentkeyname","circular","model","siblings","children","stage","groups","classes","currentstate","_siblings","state","settings","applySettings","loadState","main_model","to","change_intention","intention","injectCustomSettings","snakeCase","replace","loadurl","saveurl","__to","_state","parentkey","primarykey","map","getSummary","sum","tb","disable_filter","disable_selectfields","buildIntention","setting","mapResponse","child","r","sibling","states","default_state","par","pmodel","load","client","__status","mapRepoData","mapData","parent","keymanager","rLoadObj","indexData","indexes","row","group","ckey","contains","buildlink","action","submiturl","addKeys","resolveKeys","reload","active_repo","async","login","encodeParams","cstr","encodeURIComponent","Object","keys","decodeParams","window","location","search","param_obj","forEach","graph_obj","parse","decodeURIComponent","mapParams","regex","RegExp","action_map","CtrlGroupMap","_model","swap","convertToURL","convertFromURL","parts","split","parseInt","pop","maps","trigger_cb","route_base","createMap","trigger","trig","resetMaps","str_parts","param_str","Params","setBase","base","getMaps","cb","runRoute","uri","pathname","onpopstate","document","setRoute","history","pushState","hardSetRoute","route","regCallback","callback","_store","profile","_models","_seeker","buildModel","model_name","Map","models","splice","promise","Router","setSettings","mapper","initProfile","__profile","assumeRole","role","request","removeRole","buildLink","omaps","changes","change","ni","unshift","omap","cmap","runLink","runData","reloadFromBase","getStore","classes_dict","regClass","getClass","defineComponent","props","String","setup","Class","styleInject","css","insertAt","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","_createElementBlock","class","_ctx","components","GCError","_createElementVNode","onBlur","_createVNode","cval","isvalidateon","setValidateOn","_hoisted_2","option","methods","html","setFile","files","onChange","total","Number","progress","num","floor","fstate","globalerror","Ctrl","clearErrors","num_chunks","submit","message","statusText","GCInput","GCConfirm","GCSelect","GCRadio","GCCheckbox","GCTextarea","GCAssetField","GCProgressBar","onSubmit","_createBlock","stores","_createCommentVNode","onClick","val1","val2","active","show","toggleWidget","_hoisted_3","_renderSlot","GCFormSelect","GCFilterFormTime","GCFilterFormCheckbox","GCWidget","max_page_limit","pages","current_group","firstindex","max_options","maxoptions","showPages","Controller","current_route","query","GCNav","GCFilterForm","GCPagination","GCSelectFields","branch","draggable","ischild","toggle_state","toggle","setDraggable","closest","setAttribute","endDraggable","selectRow","getRowClass","str","sortable","arr","activechildren","concat","stop","onMousedown","onMouseup","cindex","GCDragNDrop","_handle","handle","_drop_target","drop_target","_drag_target","drag_target","_call_back","_x","_y","_offset_x","_offset_y","_judder","judder","_drag_node","_drop_node","_tree","tree","isJudder","y","dx","dy","getDirection","offset","elem","rect","getBoundingClientRect","win","ownerDocument","defaultView","top","pageYOffset","left","pageXOffset","insertAfter","drag_id","getAttribute","drop_id","sort","nextElementSibling","node","dragStart","ev","targ","dataTransfer","dropEffect","clientX","clientY","isDroppable","dragEnter","preventDefault","dir","dragOver","dragEnd","drop","initDD","drag","querySelectorAll","el","addAttribute","addEventListener","main","treeroot","onMounted","GCDragDrop","saveSort","GCTreeNode","orderBy","cell","order","orderby","xval","yval","overlimit","rowclass","rindex","getCombinations","tag","combos","ncombos","d","tags","c","filter","includes","getIndexCombinations","combinations","_Fragment","PTJRepoHeader","PTJTree","PTJTable","PTJList","editnav","delnav","runDel","runDelete","GCForm","labelclass","valueclass","parents","slice","reverse","GCSingleItem","GCAccountHandler","GCRepo","GCCard","logout","isaccount","GCTabs","GCAccountDetails","runApp","mount","app","createApp","PTJRoot"],"mappings":"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"}