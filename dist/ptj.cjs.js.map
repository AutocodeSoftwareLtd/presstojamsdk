{"version":3,"file":"ptj.cjs.js","sources":["../presstojam/src/components/ptj-modal.vue","../node_modules/style-inject/dist/style-inject.es.js","../presstojam/src/js/client.js","../presstojam/src/js/map.js","../presstojam/src/js/route.js","../presstojam/src/components/ptj-button.vue","../presstojam/src/components/ptj-multiple-input.vue","../presstojam/src/components/ptj-multiple-select.vue","../presstojam/src/js/dictionary.js","../presstojam/src/components/ptj-string.vue","../presstojam/src/js/user.js","../presstojam/src/js/dragndrop.js","../presstojam/src/js/error.js","../presstojam/src/js/field.js","../presstojam/src/js/metarow.js","../presstojam/src/js/datacell.js","../presstojam/src/js/datarow.js","../presstojam/src/js/repo.js","../presstojam/src/components/ptj-tree-node.vue","../presstojam/src/components/ptj-tree.vue","../presstojam/src/components/ptj-flag.vue","../presstojam/src/components/ptj-id.vue","../presstojam/src/components/ptj-time.vue","../presstojam/src/components/ptj-table.vue","../presstojam/src/components/ptj-list.vue","../presstojam/src/components/ptj-filter-form.vue","../presstojam/src/components/ptj-pagination.vue","../presstojam/src/components/ptj-progress-bar.vue","../presstojam/src/components/ptj-create-form.vue","../presstojam/src/components/ptj-repo.vue","../presstojam/src/components/ptj-delete.vue","../presstojam/src/components/ptj-primary.vue","../presstojam/src/components/ptj-account-handler.vue","../presstojam/src/components/ptj-router.vue","../presstojam/src/js/controller.js","../import.js"],"sourcesContent":["<template>\r\n  <a @click=\"toggleShow\" class=\"ptj-modal-button\"><slot name=\"button\"></slot></a>\r\n  <teleport :disabled=\"disabled\" :to=\"location\">\r\n  <div class=\"ptj-modal-backdrop\" v-show=\"active\" :class=\"getClass\" :style=\"relstyle\">\r\n    <div class=\"ptj-modal\" :class=\"cls\">\r\n        <header>\r\n            <button\r\n          type=\"button\"\r\n          class=\"btn-close\"\r\n          @click=\"toggleShow\"\r\n        >\r\n          x\r\n        </button>\r\n        </header>\r\n      <slot :toggleShow=\"toggleShow\" name=\"default\">\r\n      </slot>\r\n    </div>\r\n  </div>\r\n  </teleport>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from \"vue\"\r\n\r\nconst props = defineProps({\r\n    location : {\r\n        default : 'body'\r\n    },\r\n    relative : {\r\n        default : false\r\n    },\r\n    cls : String\r\n});\r\n\r\nlet active = ref(false);\r\n\r\nfunction toggleShow() {\r\n    active.value = (active.value) ? false : true;\r\n}\r\n\r\nfunction getOffsetToWrapper(el) {\r\n    let obj = {\r\n        left : 0,\r\n        top : 0,\r\n        width : el.offsetWidth,\r\n        height : el.offsetHeight,\r\n        wrapper : 0\r\n    };\r\n    \r\n    while(!el.classList.contains('ptj-table-wrapper')) {\r\n        obj.left += el.offsetLeft;\r\n        obj.top += el.offsetTop;\r\n        el=el.parentNode;\r\n    }\r\n\r\n    obj.wrapper = el.offsetWidth;\r\n\r\n    return obj;\r\n}\r\n\r\nlet relstyle = computed(() => {\r\n    if (props.relative) {\r\n        let obj = getOffsetToWrapper(props.relative);\r\n        let right = obj.wrapper - (obj.left + obj.width);\r\n        return \"position:absolute;top:\" + (obj.top + obj.height) + \"px;right:0px;\";\r\n    } else {\r\n        return \"\";\r\n    }\r\n});\r\n\r\n\r\nlet disabled = computed(() => {\r\n    return (props.location) ? false : true;\r\n});\r\n\r\n\r\nlet getClass = computed(() => {\r\n    if (props.location == 'body') {\r\n        return \"ptj-modal-backdrop-full\";\r\n    } else {\r\n        return \"\";\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n</script>\r\n<style>\r\n.ptj-modal-backdrop-full {\r\n    position : absolute;\r\n    top : 0;\r\n    left : 0;\r\n    height : 100vh;\r\n    width : 100vw;\r\n}\r\n</style>","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","let custom_headers  = {};\r\nlet main_url;\r\n\r\nexport default {\r\n\r\n    initSettings(settings) {\r\n        main_url = settings.url;\r\n\r\n        if (settings.custom_headers) {\r\n            for(let name in settings.custom_headers) {\r\n                custom_headers[name] = settings.custom_headers[name];\r\n            }\r\n        }\r\n    },\r\n\r\n    run(method, url, params, body) {\r\n        const headers = new Headers();\r\n        if (params) {\r\n            headers.set('Content-Type', 'application/json');\r\n            body = params;\r\n        }\r\n\r\n        for(let i in custom_headers) {\r\n            headers.set(i, custom_headers[i]);\r\n        }\r\n\r\n        const options = {\r\n            method  : method,\r\n            mode : 'cors',\r\n            cache : 'no-cache',\r\n            credentials : 'include',\r\n            headers  : headers,\r\n            body : body\r\n        }\r\n\r\n        const _self = this;\r\n\r\n        return fetch(main_url + url, options)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw response;\r\n            }\r\n        });\r\n    }, \r\n    get(url, data) {\r\n        if (data) {\r\n            const params = new URLSearchParams();\r\n            for(let i in data) {\r\n                if (Array.isArray(data[i]) || (typeof data[i] == 'object' && data[i] !== null)) {\r\n                   params.append(i, JSON.stringify(data[i]));\r\n                } else params.append(i, data[i]);\r\n            }\r\n\r\n            if (url.indexOf(\"?\") == -1) url += \"?\";\r\n            else url += \"&\";\r\n            url += params.toString();\r\n        }\r\n        return  this.run('GET', url);\r\n    },\r\n\r\n    getprimary(url, data) {\r\n        return this.get(url, data);\r\n    },\r\n\r\n    post(url, data) {\r\n        //call our fetch response and return\r\n        return this.run('POST', url, JSON.stringify(data));\r\n    },\r\n\r\n    put(url, data) {\r\n        return this.run('PUT', url, JSON.stringify(data));\r\n    },\r\n\r\n    patch(url, data) {\r\n        return this.run('PATCH', url, null, data);\r\n    },\r\n\r\n    delete(url, data) {\r\n        return this.run('DELETE', url, JSON.stringify(data));\r\n    }\r\n}\r\n","class MapModel {\r\n\r\n    constructor() {\r\n        this._route = '';\r\n        this._model = '';\r\n        this._state = '';\r\n        this._key = 0;\r\n        this._to = '';\r\n        this._params = {};\r\n        this._base = \"/\";\r\n        this._default = false;\r\n    \r\n        const keys = Object.keys(this);\r\n\r\n        keys.forEach(property => {\r\n          if (property[0] == \"_\") {\r\n            Object.defineProperty(this, property.substring(1), {\r\n                get: function() { \r\n                    return this[property];\r\n                },\r\n                set: function(newValue) {\r\n                    if (newValue != this[property]) {\r\n                        this[property] = newValue;\r\n                    }\r\n                }\r\n            });\r\n          } \r\n        });\r\n\r\n\r\n        this.action_map = {\r\n            'post' : '-create',\r\n            'put' : '-update',\r\n            'delete' : '-delete',\r\n            'login' : '-login',\r\n            'logout' : '-logout',\r\n            'primary' : '-primary',\r\n            'parent' : '-parent',\r\n            'get' : ''\r\n        };\r\n\r\n    }\r\n\r\n    get id() {\r\n        return this.model + \"-\" + this.state + \"-\" + this.to;\r\n    }\r\n\r\n    reset() {\r\n        this.route = '';\r\n        this.model = '';\r\n        this.state = '';\r\n        this.key = 0;\r\n        this.to = '';\r\n        this.params = {};\r\n    }\r\n\r\n\r\n    convertToURL() {\r\n        let url = this._base + this.route + \"/\" + this.model + this.action_map[this.state];\r\n        if (this.key) url += \"-\" + this.key;\r\n        if (this.to) url += \"-to-\" + this.to;\r\n\r\n        let params = new URLSearchParams();\r\n        for(const i in this.params) {\r\n            if (!this.params[i]) continue;\r\n            if (typeof this.params[i] == 'object') {\r\n                let pts = [];\r\n                for(let x in this.params[i]) {\r\n                    pts.push(this.params[i][x]);\r\n                }\r\n                params.append(i, pts.join(\",\"));\r\n            } else {\r\n                params.append(i, this.params[i]);\r\n            }\r\n        }\r\n\r\n        let param_str = params.toString();\r\n        if (param_str) url += \"?\" + param_str;\r\n\r\n        return url;\r\n    }\r\n    \r\n    initSettings(settings) {\r\n        if (settings) this._base = settings.base;\r\n        this.convertFromURL();\r\n    }\r\n\r\n    convertFromURL() {\r\n        let url_obj = new URL(window.location.href);\r\n        let url = url_obj.pathname.replace(this.base, \"\");\r\n        url = url.replace(/^\\/+|\\/+$/g, '');\r\n\r\n        if (!url) return;\r\n\r\n\r\n        let parts = url.split(\"/\");\r\n\r\n        if (parts.length >= 2) {\r\n            this.route = parts[0];\r\n            url = parts[1];\r\n        }\r\n        \r\n        const _self = this;\r\n        url_obj.searchParams.forEach(function(value, key) {\r\n            _self.params[key] = (value.indexOf(\",\") > -1) ? value.split(\",\") : value;\r\n        });\r\n\r\n       \r\n        parts = url.split(\"-to-\");\r\n        if (parts.length > 1) {\r\n            this.to = parts[1];\r\n            url = parts[0];\r\n        }\r\n\r\n       \r\n        parts = url.split(\"-\");\r\n        let key = parts[parts.length - 1];\r\n        if (key == \"first\") {\r\n            this.key = key;\r\n            parts.pop();\r\n        } else if (!isNaN(key)) {\r\n            this.key = parseInt(key);\r\n            parts.pop();\r\n        }\r\n            \r\n        if (parts.length == 0) {\r\n            throw new Error(\"Can't convert this url string: \" + url);\r\n        }\r\n    \r\n        this.state = \"get\";\r\n        for(let i in this.action_map) {\r\n            if (this.action_map[i] == \"-\" + parts[parts.length - 1]) {\r\n                this.state = i\r\n                parts.pop();\r\n                break;\r\n            }\r\n        }\r\n        this.model = parts.join(\"-\");\r\n        if (!this.route) this.route = this.model;\r\n    }\r\n\r\n    getAll() {\r\n        return {\r\n            route : this.route,\r\n            model : this.model,\r\n            state : this.state,\r\n            key : this.key,\r\n            to : this.to,\r\n            params : this.params,\r\n            base : this.base,\r\n            default : this.default\r\n        };\r\n    }\r\n\r\n    apply(route) {\r\n        for(let i in route) {\r\n            this[i] = route[i];\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const Map = new MapModel();\r\n\r\n","import { reactive } from \"vue\"\r\nimport client from \"./client.js\"\r\nimport { Map } from \"./map.js\"\r\n\r\n\r\nlet model_settings = {};\r\n\r\nwindow.onpopstate = function() {\r\n    Map.reset();\r\n    Map.convertFromURL();\r\n    runRoute();\r\n}\r\n\r\nexport const RouteStore = reactive({ \r\n    component : '', \r\n    title : '',\r\n    name : '',\r\n    route : { \"children\" : [], parent : null, \"perms\" : []}, \r\n    slug : []\r\n});\r\n\r\nfunction setComponent() {\r\n    if (Map.state == \"get\" || Map.state == \"parent\") {\r\n        RouteStore.component = \"ptj-repo\";\r\n    } else if (Map.state == \"primary\") {\r\n        RouteStore.component = \"ptj-primary\";\r\n    } else if (Map.state == \"login\") {\r\n        RouteStore.component = \"ptj-account-handler\";\r\n    }\r\n}\r\n\r\n\r\nexport function initSettings(settings) {\r\n    if (settings) model_settings = settings;\r\n}\r\n\r\n\r\nexport function getModelSettings() {\r\n    if (model_settings[Map.model] && model_settings[Map.model][Map.state]) {\r\n        return model_settings[Map.model][Map.state];\r\n    }\r\n    return {};\r\n}\r\n\r\n\r\nexport function loadRoute() {\r\n    RouteStore.component = \"\";\r\n    RouteStore.route.children = [];\r\n    RouteStore.route.parent = null;\r\n    RouteStore.route.perms = [];\r\n    RouteStore.route.title = \"\";\r\n    RouteStore.route.name = \"\";\r\n    return client.get(\"/nav/route-points/\" + Map.route + \"/\" + Map.model)\r\n    .then(response => {   \r\n        RouteStore.route.children = response.children;\r\n        RouteStore.route.perms = response.perms;\r\n        RouteStore.route.parent = response.parent;\r\n        RouteStore.title = response.title;\r\n        RouteStore.name = response.name;\r\n        setComponent();\r\n    })\r\n    .then(response => {\r\n\r\n    })\r\n    .catch(e => console.log(e));\r\n}\r\n\r\nexport function loadSlugTrail() {\r\n    RouteStore.slug = [];\r\n    let params = {};\r\n    if (Map.key) {\r\n        if (Map.state == \"parent\") params[\"--parentid\"] = Map.key;\r\n        else if (Map.state == \"primary\") params[\"--id\"] = Map.key;\r\n    } else {\r\n        return;\r\n    }\r\n\r\n    return client.get(\"/slug/\" + Map.route + \"/\" + Map.model, params)\r\n    .then(response => {\r\n        RouteStore.slug = response;\r\n        for(let i in RouteStore.slug) {\r\n            i=parseInt(i);\r\n            if (i > 0) {\r\n                RouteStore.slug[i].route = {\r\n                    model : RouteStore.slug[i].model,\r\n                    state : 'parent',\r\n                    key : RouteStore.slug[i].id\r\n                }\r\n            } else {\r\n                RouteStore.slug[i].route = {\r\n                    model : RouteStore.slug[i].model,\r\n                    state : 'get',\r\n                    key : 0\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\nexport function refresh() {\r\n    if (location.href == Map.base) location.reload();\r\n    else location.href = Map.base;\r\n}\r\n\r\nexport function redirect() {\r\n    addToHistory();\r\n    runRoute();\r\n}\r\n\r\nexport function addToHistory() {\r\n    const url_str = window.location.protocol + \"//\" + window.location.host +  Map.convertToURL();\r\n    const url = new URL(url_str);\r\n    window.history.pushState({'name' : url.pathname}, document.title, url);\r\n}\r\n\r\nexport function runRoute() {\r\n    loadRoute();\r\n    loadSlugTrail();\r\n}\r\n","<template>\r\n  <a class=\"ptj-button\" :key=\"route\" @click=\"run\">\r\n    <slot />\r\n  </a> \r\n</template>\r\n\r\n<script setup>\r\n\r\n\r\nimport { redirect } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\nconst props = defineProps({\r\n    route : Object\r\n});\r\n\r\n\r\nfunction run() {\r\n    for(let i in props.route) {\r\n        Map[i] = props.route[i];\r\n    }\r\n    Map.params = {};\r\n    redirect();\r\n}\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n    <div class=\"ptj-multiple-select\">\r\n        <div class=\"ptj-multiple-select-display\">\r\n            <div class=\"ptj-multiple-select-values\">\r\n                <div class=\"ptj-multiple-select-val\" v-for=\"val in field.change1\" :key=\"val\">\r\n                    {{ val }}\r\n                    <a class=\"ptj-multiple-select-val-remove\" @click=\"remove(val)\"><span class=\"material-icons\">close</span></a>\r\n                </div>\r\n            </div>\r\n            <input type=\"text\" v-model=\"custom_val\" />\r\n            <a @click=\"selectCustom\" class=\"ptj-multiple-select-add\">add</a>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script setup>\r\n\r\nimport { ref } from \"vue\"\r\n\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n});\r\n\r\nconst custom_val = ref(\"\");\r\n\r\nfunction remove(key) {\r\n    props.field.change = props.field.change.filter(function(item) {\r\n        return item !== key\r\n    });\r\n}\r\n\r\nfunction selectCustom() {\r\n    props.field.change1 = custom_val.value;\r\n    custom_val.value = \"\";\r\n}\r\n\r\n\r\n</script>\r\n<style scoped>\r\n.ptj-multiple-select-val {\r\n    display : inline-block;\r\n    border : 1px solid green;\r\n    margin-left : 2px;\r\n    margin-right : 2px;\r\n    padding : 2px;\r\n    background-color : green;\r\n}\r\n\r\n\r\n.ptj-multiple-select-val-remove {\r\n    color : red;\r\n}\r\n\r\n\r\n.ptj-multiple-select-display {\r\n    position :relative;\r\n    background-color : #fff;\r\n    border : 1px solid #cdcdcd;\r\n    min-height : 35px;\r\n\r\n}\r\n\r\n</style>","<template>\r\n    <div class=\"ptj-multiple-select\">\r\n        <div class=\"ptj-multiple-select-display\">\r\n            <div class=\"ptj-multiple-select-values\">\r\n                <div class=\"ptj-multiple-select-val\" v-for=\"val in field.change\" :key=\"val\">\r\n                    {{ field.getOption(val) }}\r\n                    <a class=\"ptj-multiple-select-val-remove\" @click=\"remove(val)\"><span class=\"material-icons\">close</span></a>\r\n                </div>\r\n            </div>\r\n            <a class=\"ptj-multiple-select-arrow\" @click=\"toggleList\">\r\n            <span class=\"material-icons\">{{ show_list.symbol }}</span>\r\n            </a>\r\n        </div>\r\n        <ul class=\"ptj-multiple-select-options\" v-show=\"show_list.display\" @click=\"select\">\r\n            <li v-for=\"option in field.options\" :key=\"option.key\" :data-key=\"option.key\">{{ option.value }}</li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n<script setup>\r\n\r\nimport { reactive, onMounted } from \"vue\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n});\r\n\r\nonMounted(() => {\r\n    if (props.field.reference) {\r\n        let url = \"/reference/\" + Map.model + \"/\" + props.field.name;\r\n        props.field.setReferenceOptions(url, {\"--parentid\":Map.key});\r\n    }\r\n});\r\n\r\n\r\nconst show_list = reactive({\r\n    display : false,\r\n    symbol : 'keyboard_arrow_down'\r\n});\r\n\r\n\r\nfunction toggleList() {\r\n    if (show_list.display) {\r\n        show_list.display = false;\r\n        show_list.symbol = 'keyboard_arrow_down';\r\n    } else {\r\n        show_list.display = true;\r\n        show_list.symbol = 'keyboard_arrow_up';\r\n    }\r\n}\r\n\r\n\r\nfunction remove(key) {\r\n    props.field.change = props.field.change.filter(function(item) {\r\n        return item !== key\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction select(e) {\r\n    props.field.change1 = e.target.getAttribute(\"data-key\");\r\n    toggleList();\r\n}\r\n</script>\r\n<style scoped>\r\n.ptj-multiple-select-val {\r\n    display : inline-block;\r\n    border : 1px solid green;\r\n    margin-left : 2px;\r\n    margin-right : 2px;\r\n    padding : 2px;\r\n    background-color : green;\r\n}\r\n\r\n\r\n.ptj-multiple-select-val-remove {\r\n    color : red;\r\n}\r\n\r\n.ptj-multiple-select-arrow {\r\n    position :absolute;\r\n    right : 2px;\r\n    top : 3px;\r\n}\r\n\r\n.ptj-multiple-select-display {\r\n    position :relative;\r\n    background-color : #fff;\r\n    border : 1px solid #cdcdcd;\r\n    min-height : 35px;\r\n\r\n}\r\n\r\n.ptj-multiple-select-options li {\r\n    list-style: none;\r\n    cursor: pointer;\r\n    margin-top : 2px;\r\n    border : 1px solid #cdcdcd;\r\n    background-color : #fff;\r\n}\r\n\r\n.ptj-multiple-select-options li:hover {\r\n    background-color : #f9f9fb;\r\n    transition : background-color .2s ease-out,border .2s ease-out;\r\n}\r\n</style>","let dictionary = {};\r\n\r\nexport function setDictionary(dict) {\r\n    dictionary = dict;\r\n}\r\n\r\n\r\nexport function getDictionary(id, vals) {\r\n    let str = \"\";\r\n    if (!vals) {\r\n        if (dictionary[id]) str = dictionary[id];\r\n        return str;\r\n    }\r\n    \r\n    if (vals.model) {\r\n        if (vals.field) {\r\n            if (dictionary.models[vals.model] && dictionary.models[vals.model].fields[vals.field]) {\r\n                str= dictionary.models[vals.model].fields[vals.field][id];\r\n            }\r\n        } else {\r\n            if ( dictionary.models[vals.model]) {\r\n                str = dictionary.models[vals.model][id];\r\n            }\r\n        }\r\n    } else if (vals.type) {\r\n        if (dictionary[id][vals.type]) str = dictionary[id][vals.type];\r\n        else str = dictionary[id].def;\r\n    } else {\r\n        str = dictionary[id];\r\n    }\r\n\r\n    if (vals.val) {\r\n        str = str.replace( /\\{\\{(.*?)\\}\\}/g, vals.val);    \r\n\r\n        //s.replace( /\\{\\{(.*?)\\}\\}/g, function(x){          // this grabs replacement tags\r\n          //  return x.replace( /\\[(\\d+)\\]/g,'.$1' )});      \r\n    }\r\n\r\n    if (!str && vals.default) str = vals.default;\r\n    return str;\r\n}","<template>\r\n   <textarea v-if=\"tag=='textarea' && ctype=='edit'\"\r\n        v-bind=\"atts\" \r\n        :name=\"field.name\" \r\n        v-model=\"field.change\"></textarea>\r\n   <div v-else-if=\"tag=='textarea' && ctype=='view'\">{{ field.val }}</div>\r\n   <ptj-multiple-select v-else-if=\"tag=='select' && ctype == 'filter'\" :field=\"field\" />\r\n  <select v-else-if=\"tag=='select' && ctype=='edit'\" \r\n        v-model=\"field.change\"\r\n        :name=\"field.name\"\r\n        v-bind=\"atts\"\r\n         @blur=\"field.validateon = true\"\r\n        >\r\n        <option value=\"\" selected disabled>{{ getDictionary('ptj-string-default') }}</option>\r\n        <option v-for=\"option in field.options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <input v-else-if=\"ctype=='edit'\" v-bind=\"atts\"\r\n        :name=\"field.name\"\r\n        v-model=\"field.change\" \r\n        @blur=\"field.validateon = true\" />\r\n   <ptj-multiple-input :field=\"field\" v-else-if=\"ctype=='filter'\"/>\r\n  <span v-else-if=\"ctype=='view' && field.reference\">\r\n    <ptj-button :route=\"{model : field.reference, key : field.val, state:'primary' }\">{{ field.val }}</ptj-button>\r\n  </span>\r\n  <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n<script setup>\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjMultipleInput from \"./ptj-multiple-input.vue\"\r\nimport PtjMultipleSelect from \"./ptj-multiple-select.vue\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\nimport { computed } from \"vue\"\r\nconst props = defineProps({\r\n    field : {\r\n        type : Object,\r\n        required : true\r\n    },\r\n    type : {\r\n        type : String,\r\n        default : 'view'\r\n    }\r\n});\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n\r\nfunction isEnum(contains) {\r\n    if (contains.length == 0) return null;\r\n    let enums=[];\r\n    const regEx = new RegExp(/^[a-zA-Z]+[a-zA-Z0-9._]+$/);\r\n    for(let exp of contains) {\r\n        if (!exp) continue;\r\n        if (regEx.test(exp)) {\r\n            enums.push(exp);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    return enums;\r\n}\r\n\r\nconst tag = computed(() => {\r\nif (isEnum(props.field.contains)) {\r\n    props.field.setContainsAsOptions();\r\n    return \"select\";\r\n} else if (props.field.encrypted) {\r\n    return \"input\";\r\n} else if (props.field.html || props.field.max > 300) {\r\n    return \"textarea\";\r\n} else {\r\n    return \"input\";\r\n}\r\n});\r\n\r\n\r\nconst atts = computed(() => {\r\nlet atts = {};\r\nif (props.field.encrypted) {\r\n    atts.type = \"password\";\r\n}\r\n\r\nif (props.field.atts.readonly) {\r\n    atts.readonly = true;\r\n}\r\n\r\nif (props.field.atts.placeholder) {\r\n    atts.placeholder = field.meta.placeholder;\r\n}\r\n\r\nif (props.field.atts.html) {\r\n    atts[\"data-html\"] = 1;\r\n}\r\nreturn atts;\r\n});\r\n\r\n\r\n</script>\r\n","import { reactive } from \"vue\"\r\nimport { refresh } from \"./route.js\"\r\nimport Client from \"./client.js\"\r\nimport { Map } from \"./map.js\"\r\nimport { setDictionary } from \"./dictionary.js\"\r\n\r\nexport const User = reactive({init : false, login : false, user : \"public\" });\r\n\r\nexport const NavStore = reactive({\r\n    cats : {}, \r\n    routes : [], \r\n});\r\n\r\nexport function logout() {\r\n    Client.post(\"/core/logout\")\r\n    .then(() => {\r\n        refresh();\r\n    });\r\n}\r\n\r\nfunction getDefault() {\r\n    for(let cat in NavStore.cats) {\r\n        for(let route of NavStore.cats[cat]) {\r\n            if (route.default) {\r\n                return route;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst user_check = 600000;\r\n\r\nexport function checkLoginStatus() {\r\n    Client.get(\"/core/check-user\")\r\n    .then(response => {\r\n        if (response.is_expired) {\r\n            return Client.put(\"/core/switch-tokens\")\r\n            .then(() => {\r\n                checkLoginStatus();\r\n            });\r\n        }\r\n    }).then(response => {\r\n        if (User.user != \"public\") setTimeout(checkLoginStatus, user_check);\r\n    }).catch(e => {\r\n        User.login = true;\r\n    });\r\n}\r\n\r\nexport function initUser(role = \"\") {\r\n    return Client.get(\"/core/check-user\")\r\n    .then(response => {\r\n        if (response.is_expired) {\r\n            return Client.put(\"/core/switch-tokens\")\r\n            .then(() => {\r\n                return Client.get(\"/core/check-user\");\r\n            });\r\n        } else {\r\n            return response;\r\n        }\r\n    })\r\n    .then(response => {\r\n        User.user = response.user;\r\n        User.role = response.role;\r\n        User.init = true;\r\n\r\n        if (User.role != role) {\r\n            let url = \"/core/change-role\";\r\n            if (role) url += \"/\" + role;\r\n            return Client.post(url)\r\n            .then(response => {\r\n                User.role = role;\r\n            });\r\n        }\r\n    }).then(() => {\r\n        checkLoginStatus();\r\n    }).then(() => {\r\n        return Client.get(\"/dictionary\")\r\n        .then(response => {\r\n            setDictionary(response);\r\n            return true;\r\n        });\r\n    }).catch(e => console.log(e));\r\n}\r\n\r\nexport function loadNav() {\r\n    NavStore.cats = {};\r\n    NavStore.routes = [];\r\n    return Client.get(\"/nav/site-map\")\r\n    .then(response => {\r\n        for(let cat in response) {\r\n            for(let route_name in response[cat]) {\r\n                const route = { model : route_name, state : response[cat][route_name].state };\r\n                if (response[cat][route_name].default) route.default = true;\r\n                route.route = route_name;\r\n                NavStore.routes.push(route);\r\n\r\n                if (!NavStore.cats[cat]) NavStore.cats[cat] = [];\r\n                NavStore.cats[cat].push(route);\r\n            }\r\n        }\r\n    })\r\n    .then(() => {\r\n        if (!Map.model) {\r\n            Map.apply(getDefault());\r\n        }\r\n        return true;\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n","class PTJDragNDrop {\r\n\r\n    constructor(props = {}) {\r\n        this._handle = props.handle;\r\n        this._drop_target = props.drop_target;\r\n        this._drag_target = props.drag_target;\r\n        this._call_back = props.callback;\r\n        this._x = 0;\r\n        this._y = 0;\r\n        this._offset_x = 0;\r\n        this._offset_y = 0;\r\n        this._judder = (props.judder) ? props.judder : 5;\r\n        this._drag_node;\r\n        this._drop_node;\r\n        this._tree = props.tree;\r\n    }\r\n\r\n    isJudder(x, y) {\r\n        const dx = x - this._x;\r\n        const dy = y - this._y;\r\n      \r\n        if (dx < -5 || dx > 5) return false;\r\n        else if (dy < -5 || dy > 5) return false;\r\n        else return true;\r\n    }\r\n\r\n    getDirection(x, y) {\r\n        const dir_x = (x == this._x) ? 0 : (x > this._x) ? 1 : -1;\r\n        const dir_y = (y == this._y) ? 0 : (y > this._y) ? 1 : -1;\r\n      \r\n        return { x : dir_x, y : dir_y };\r\n    }\r\n\r\n    offset(elem) {\r\n        var rect = elem.getBoundingClientRect();\r\n        var win = elem.ownerDocument.defaultView;\r\n\r\n        return {\r\n            top: rect.top + win.pageYOffset,\r\n            left: rect.left + win.pageXOffset\r\n        };\r\n    }\r\n\r\n    insertAfter() {\r\n        let drag_id = this._drag_node.getAttribute(\"id\");\r\n        let drop_id = this._drop_node.getAttribute(\"id\");\r\n\r\n        let circular = 0;\r\n        let sort = 0;\r\n        if (this._drop_node.nextElementSibling) {\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drop_id) {\r\n                    circular = node.circular;\r\n                    sort = node.sort;\r\n                    break;\r\n                } \r\n            }\r\n\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drag_id) {\r\n                    node.circular = circular;\r\n                    node.sort = sort + 1;\r\n                } else if (node.circular == circular && node.sort > sort) {\r\n                    ++node.sort;\r\n                }\r\n            }\r\n        } else {\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drag_id) {\r\n                    node.circular = circular;\r\n                    node.sort = 0;\r\n                } \r\n            }\r\n        }\r\n    }\r\n\r\n    insertBefore() {\r\n        let drag_id = this._drag_node.getAttribute(\"id\");\r\n        let drop_id = this._drop_node.getAttribute(\"id\");\r\n\r\n        let circular = 0;\r\n        let sort = 0;\r\n        for(let i in this._tree) {\r\n            let node = this._tree[i];\r\n            if (node.id == drop_id) {\r\n                circular = node.circular;\r\n                sort = node.sort;\r\n                ++node.sort;\r\n                break;\r\n            } \r\n        }\r\n\r\n        for(let i in this._tree) {\r\n            let node = this._tree[i];\r\n            if (node.id == drag_id) {\r\n                node.circular = circular;\r\n                node.sort = sort;\r\n            } else if (node.circular == circular && node.sort > sort) {\r\n                ++node.sort;\r\n            }\r\n        }\r\n    }\r\n\r\n    dragStart(ev) {\r\n        const targ = ev.target.closest('[id]');\r\n        this._drag_node = targ;\r\n        const { top, left } = this.offset(targ);\r\n\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n\r\n        this._x = ev.clientX;\r\n        this._y = ev.clientY;\r\n    \r\n        this._offset_x = ev.clientX - left;\r\n        this._offset_y = ev.clientY - top;\r\n    }\r\n\r\n    isDroppable(ev) {\r\n        let cont = ev.target.closest(this._drop_target);\r\n        return (cont) ? true : false;\r\n    }\r\n\r\n    dragEnter(ev) {\r\n        if (!this.isDroppable(ev)) return true;\r\n        ev.preventDefault();\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n\r\n        this._drop_node = ev.target.closest(this._drag_target);\r\n\r\n        if (!this._drop_node || this._drop_node.getAttribute(\"id\") == this._drag_node.getAttribute(\"id\")) {\r\n            return;\r\n        }\r\n\r\n        const dir = this.getDirection(ev.clientX, ev.clientY);\r\n\r\n        if (dir.y == 1) {\r\n            this.insertAfter();\r\n        } else if (dir.y == -1) {\r\n            this.insertBefore();\r\n        }\r\n        this._x = ev.clientX;\r\n        this._y = ev.clientY;\r\n    }\r\n\r\n    dragOver(ev) {\r\n        if (!this.isDroppable(ev)) return true;\r\n        ev.preventDefault();\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n    }\r\n\r\n\r\n    dragEnd() {\r\n        if (this._drag_node) this._drag_node.setAttribute(\"draggable\", false);\r\n        this._drag_node = null;\r\n    }\r\n\r\n    drop(ev) {\r\n        if (!this._drop_node) return true;\r\n        ev.preventDefault();\r\n        if (this._call_back) this._call_back(this._tree);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction initDD(props) {\r\n    let drag = new PTJDragNDrop(props);\r\n    let handles = document.querySelectorAll(props.handle);\r\n    handles.forEach(el => el.addAttribute(\"draggable\", true));\r\n\r\n    if (props.handle) {\r\n\r\n        let handles = document.querySelectorAll(props.handle);\r\n\r\n        handles.forEach(el => {\r\n            el.addEventListener(\"mousedown\", e => {\r\n                let cont = e.target.closest(props.drag_target);\r\n                cont.addAttribute(\"draggable\", true);\r\n            });            \r\n        });\r\n    }\r\n\r\n    props.main.addEventListener(\"dragstart\", e => drag.dragStart(e));\r\n    props.main.addEventListener(\"dragenter\", e => drag.dragEnter(e));\r\n    props.main.addEventListener(\"dragover\", e => drag.dragOver(e));\r\n    props.main.addEventListener(\"drop\", e => drag.drop(e));\r\n    props.main.addEventListener(\"dragend\", e => drag.dragEnd(e));\r\n}\r\n\r\nexport default {\r\n    initDD\r\n}","const error_invalid_map = {\r\n            1 : \"too small\",\r\n            2 : \"too large\",\r\n            3 : \"contains incorrect characters\",\r\n            4 : \"doesn't contain required characters\",\r\n            5 : \"not unique\"\r\n}\r\n\r\nexport function getError(code) {\r\n    return error_invalid_map[code];\r\n}\r\n\r\nexport const Errors = {\r\n    OK : 0,\r\n    MIN_VALUE : 1,\r\n    MAX_VALUE : 2,\r\n    HAS : 3,\r\n    HAS_NOT : 4\r\n}\r\n","\r\nimport { Errors } from \"./error.js\"\r\nimport { reactive, computed } from \"vue\"\r\nimport Client from \"./client.js\"\r\n\r\n\r\nexport class Field {\r\n\r\n    constructor(name, obj = null) {\r\n        this._name = name;\r\n        this._type = \"\";\r\n        this._atts={}\r\n        this._confirm = false;\r\n        this._reference = \"\";\r\n        this._label = \"\";\r\n        this._store = reactive({ summary : 0, options : []});\r\n        this._default_val = null;\r\n        this._immutable = false;\r\n        this._encrypted = false;\r\n        this._min = null;\r\n        this._max = null;\r\n        this._contains = [];\r\n        this._notcontains = [];\r\n        this._recursive = false;\r\n        this._error = {\r\n            'OK' : 0,\r\n            'MIN_VALUE' : 1,\r\n            'MAX_VALUE' : 2,\r\n            'HAS' : 3,\r\n            'HAS_NOT' : 4\r\n        }\r\n\r\n        const keys = Object.keys(this);\r\n       \r\n        keys.forEach(property => {\r\n          if (property != \"_store\" && property[0] == \"_\") {\r\n            Object.defineProperty(this, property.substring(1), {\r\n                get: function() { \r\n                   return this[property];\r\n                },\r\n                set: function(newValue) {\r\n                    if (property == \"_type\") this._type = newValue.toLowerCase();\r\n                    else this[property] = newValue;\r\n                }\r\n            })\r\n          }\r\n        });\r\n      \r\n      \r\n        this.summary = computed({\r\n            get : () => {\r\n                return this._store.summary;\r\n            },\r\n            set : (val) => {\r\n                this._store.summary = (val) ? 1 : 0;\r\n            }\r\n        })\r\n\r\n        this.options = computed({\r\n            get : () => {\r\n                return this._store.options;\r\n            },\r\n            set : (options) => {\r\n                this._store.options = options;\r\n            }\r\n        });\r\n\r\n       \r\n        if (obj) {\r\n            for (let x in obj) {\r\n                if (x == \"summary\") this.summary = (obj[x]) ? 1 : 0;\r\n                else if (x == \"validation\") continue;\r\n                else if (x == \"type\") this.type = obj[x].toLowerCase();\r\n                else this[\"_\" + x] = obj[x];\r\n            }\r\n\r\n            this._min = obj.validation.min;\r\n            this._max = obj.validation.max;\r\n            if (obj.validation.contains) this._contains = obj.validation.contains.split(\"|\");\r\n            if (obj.validation.notcontains) this._notcontains = obj.validation.notcontains.split(\"|\");\r\n        }\r\n    }\r\n\r\n\r\n    getOption(key) {\r\n        for(let opt of this._store.options) {\r\n            if (opt.key == key) return opt.value;\r\n        }\r\n    }\r\n\r\n    setReferenceOptions(url, params) {\r\n        this._store.options = [];\r\n        return Client.get(url, params)\r\n        .then(response => {\r\n            for (let i in response) {\r\n                let key = response[i][\"--id\"];\r\n                let vals = [];\r\n                for(let x  in response[i]) {\r\n                    if (x != \"--id\") {\r\n                        vals.push(response[i][x]);\r\n                    }\r\n                }\r\n                this._store.options.push({ key: key, value: vals.join(\" \", vals) });\r\n            }\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    setContainsAsOptions() {\r\n        this._store.options = [];\r\n        for(let exp of this._contains) {\r\n            this._store.options.push({ key : exp, value : exp});\r\n        }\r\n    }\r\n\r\n    clean(val) {\r\n        if (this._type == \"checkbox\") return (val) ? 1 : 0;\r\n        else return val;\r\n    }\r\n\r\n\r\n    calcValue(value) {\r\n        if (!value) return \"\";\r\n        else return value;\r\n    }\r\n\r\n\r\n    validateSize(val) {\r\n        if (val < this._min) return Errors.MIN_VALUE;\r\n        else if (val > this._max) return Errors.MAX_VALUE;\r\n        else return Errors.OK;\r\n    }\r\n\r\n\r\n    validate(val) {\r\n        if (val === null) return;\r\n        let err;\r\n        if (isNaN(val)) {\r\n            const length = (val) ? val.length : 0;\r\n            err = this.validateSize(length);\r\n        } else {\r\n            err = this.validateSize(val);\r\n        }\r\n        if (err != Errors.OK) return err;\r\n\r\n        for(let nhas of this._notcontains) {\r\n            if (val.match(nhas)) return Errors.HAS_NOT;\r\n        }\r\n\r\n        if (this._contains.length == 0) return Errors.OK;\r\n        \r\n        for(let has of this._contains) {\r\n            if (val.match(has)) return Errors.OK;\r\n        }\r\n        return Errors.HAS;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Field } from \"./field.js\"\r\nimport { Asset } from \"./asset.js\"\r\nimport { reactive } from \"vue\"\r\n\r\nexport class MetaRow {\r\n\r\n    constructor() {\r\n        this._cells = {};\r\n        this._children = {};\r\n        this._states = {};\r\n        this._active = 0;\r\n        this._init = false;\r\n        this._store = reactive({index : null});\r\n      \r\n        const keys = Object.keys(this);\r\n\r\n        keys.forEach(property => {\r\n          if (property[0] == \"_\") {\r\n            Object.defineProperty(this, property.substring(1), {\r\n                get: function() { \r\n                    return this[property];\r\n                },\r\n                set: function(newValue) {\r\n                    this[property] = newValue;\r\n                }\r\n            });\r\n          } \r\n        });\r\n    }\r\n\r\n\r\n    addChild(name, child) {\r\n        this._children[name] = child;\r\n    }\r\n\r\n    addState(name, action) {\r\n        this._actions[name] = action;\r\n    }\r\n\r\n\r\n    resetSummary(arr) {\r\n\r\n        for(let i in this._cells) {\r\n            this._cells[i].summary = false;\r\n        }\r\n        \r\n        for(let i in arr) {\r\n            if (this._cells[arr[i]]) {\r\n                this._cells[arr[i]].summary = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    mapField(field, obj) {\r\n        this._cells[field] = new Field(field, obj);\r\n        if (this._cells[field].recursive) this._store.index = field;\r\n    }\r\n\r\n    map(fields, limited_fields = []) {\r\n        if (limited_fields.length > 0) {\r\n            for(let field of limited_fields) {\r\n                this.mapField(field, fields[field]);\r\n            }\r\n        } else {\r\n            for (let i in fields) {\r\n                this.mapField(i, fields[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    getCellByType(type) {\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].type == type) cells[i] = this._cells[i];\r\n        }\r\n        return cells;\r\n    }\r\n\r\n    showAll() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].summary = true;\r\n        }\r\n    }\r\n\r\n}","import { reactive, computed } from \"vue\"\r\nimport { getError } from \"./error.js\"\r\n\r\nexport class DataCell {\r\n\r\n    constructor(meta) {\r\n        this._meta = meta;\r\n        this._store = reactive({ value: null, change: null, display: null, error: 0, is_validate_on: false });\r\n\r\n\r\n        const meta_keys = Object.getOwnPropertyNames(this._meta);\r\n        const keys = Object.keys(this);\r\n\r\n        meta_keys.forEach(property => {\r\n            if (property[0] != \"_\" && !keys.includes(property)) {\r\n                Object.defineProperty(this, property, {\r\n                    get: function () {\r\n                        return this._meta[property];\r\n                    },\r\n                    set: function (newValue) {\r\n                        this._meta[property] = newValue;\r\n                    }\r\n                })\r\n            }\r\n        });\r\n\r\n\r\n        this.error = computed({\r\n            get: () => { getError(this._store.error); },\r\n            set: val => { this._store.error = val }\r\n        });\r\n\r\n        this.showError = computed(() => {\r\n            return this._store.is_validate_on && this._store.error ? true : false;\r\n        });\r\n\r\n        if (this._meta.default_val) this._store.value = this._meta.default_val;\r\n        else if (this._meta.type == \"select\") this._store.value = 0;\r\n\r\n        this.val = computed({\r\n            get: () => {\r\n                return this._store.value;\r\n            },\r\n            set: (val) => {\r\n                this._store.value = this._meta.clean(val);\r\n                this._store.error = this._meta.validate(val);\r\n            }\r\n        });\r\n\r\n        this.change = computed({\r\n            get: () => {\r\n                if (this._store.change == null) return this._store.value;\r\n                else return this._store.change;\r\n            },\r\n            set: (val) => {\r\n                this._store.change = this._meta.clean(val);\r\n                this._store.error = this._meta.validate(val);\r\n            }\r\n        });\r\n\r\n        this.addParam = obj => {\r\n            if (this._store.value) {\r\n                obj[this.name] = this._store.value;\r\n            }\r\n        }\r\n\r\n\r\n        if (this.type == \"time\") {\r\n\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.min;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null };\r\n                    this._store.change.min = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.change2 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.max;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null };\r\n                    this._store.change.max = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.filter = computed({\r\n                get: () => {\r\n                    return this._store.value;\r\n                },\r\n                set:(val) => {\r\n                    if (val) {\r\n                        this._store.value = val;\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                let cobj = {};\r\n                if (this._store.value) {\r\n                    if (this._store.value.min) cobj.min = this._store.value.min;\r\n                    if (this._store.value.max) cobj.max = this._store.value.max;\r\n                    if (Object.keys(cobj).length > 0) {\r\n                        obj[this.name] = cobj;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type == \"flag\") {\r\n\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (this._store.change == null) return 0;\r\n                    else if (!this._store.change) return 2;\r\n                    else return this._store.change;\r\n                },\r\n                set: (val) => {\r\n                    if (val == 0) {\r\n                        this._store.change = null;\r\n                        return;\r\n                    }\r\n                    if (val == 2) val = 0;\r\n                    this._store.change = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.filter = computed({\r\n                get: () => {\r\n                    return this._store.value;\r\n                },\r\n                set:(val) => {\r\n                    this._store.value = val;\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value) {\r\n                    obj[this.name] = this._store.value;\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type == \"id\") {\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    let val = (this._store.change == null) ? [] : this._store.change;\r\n                    return val;\r\n                },\r\n                set: (val) => {\r\n                    if (this._store.change == null) this._store.change = [];\r\n                    if (this._store.change.includes(val)) return;\r\n                    this._store.change.push(this._meta.clean(val));\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.filter = computed({\r\n                get: () => {\r\n                    return this._store.value;\r\n                },\r\n                set:(val) => {\r\n                    this._store.value = val;\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value!= null) {\r\n                    obj[this.name] = this._store.value;\r\n                }\r\n            }\r\n\r\n            \r\n        } else if (this.type == \"number\") {\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.min;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null }\r\n                    this._store.change.min = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.filter = computed({\r\n                get: () => {\r\n                    return this._store.value;\r\n                },\r\n                set:(val) => {\r\n                    this._store.value = val;\r\n                }\r\n            });\r\n\r\n            this.change2 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.max;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null }\r\n                    this._store.change.max = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value!= null) {\r\n                    obj[this.name] = this._store.value;\r\n                }\r\n            }\r\n\r\n        } else if (this.type == \"string\") {\r\n\r\n            this.change = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) return \"\";\r\n                    else return this._store.change;\r\n                },\r\n                set: (val) => {\r\n                    this._store.change = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (this._store.change == null) return [];\r\n                    else return this._store.change;\r\n                },\r\n                set: (val) => {\r\n                    if (this._store.change == null) this._store.change = [];\r\n                    this._store.change.push(this._meta.clean(val));\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n\r\n            this.filter = computed({\r\n                get: () => {\r\n                    return this._store.value;\r\n                },\r\n                set:(val) => {\r\n                    if (Array.isArray(val)) this._store.value = val;\r\n                    else if (val) this._store.value = [val];\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value) {\r\n                    let arr = [];\r\n                    for(let i in this._store.value) {\r\n                        if (this._store.value[i]) arr.push(\"%\" + this._store.value[i] + \"%\");\r\n                    }\r\n                    if (arr.length > 0) obj[this.name] = arr;\r\n                }\r\n            }\r\n\r\n        } \r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n\r\n    get meta() {\r\n        return this._meta;\r\n    }\r\n\r\n    set validateon(on) {\r\n        this._store.is_validate_on = on;\r\n    }\r\n\r\n    set display(display) {\r\n        this._store.display = display;\r\n    }\r\n\r\n    get display() {\r\n        if (this._store.display) return this._store.display;\r\n        else return this._store.value;\r\n    }\r\n\r\n    get store() {\r\n        return this._store;\r\n    }\r\n\r\n    toString() {\r\n        return this._store.display;\r\n    }\r\n\r\n    isSummary() {\r\n        return this._meta.summary;\r\n    }\r\n\r\n    setReferenceOptions(url, params) {\r\n        this._meta.setReferenceOptions(url, params);\r\n    }\r\n\r\n    setContainsAsOptions() {\r\n        this._meta.setContainsAsOptions();\r\n    }\r\n\r\n    reset() {\r\n        this._store.change = null;\r\n        this._store.value = null;\r\n    }\r\n\r\n    getOption(key) {\r\n        if (this._meta.type == 'string') return key;\r\n        else return this._meta.getOption(key);\r\n    }\r\n\r\n    \r\n}\r\n","import { DataCell } from \"./datacell.js\"\r\nimport { reactive, computed, ref } from \"vue\"\r\n\r\n\r\nexport class DataRow {\r\n\r\n    constructor(metarow) {\r\n        this._metarow = metarow;\r\n        this._cells = reactive({});\r\n        this._children = {};\r\n        this._ids = reactive({});\r\n        \r\n        \r\n\r\n\r\n        if (metarow) {\r\n            this.applyMetaRow(metarow);\r\n        }\r\n\r\n        this.cells = computed(() => {\r\n            return this._cells;\r\n        });\r\n        \r\n    }\r\n\r\n    \r\n\r\n    set children(children) {\r\n        this._children = children;\r\n    }\r\n\r\n    get children() {\r\n        return this._children;\r\n    }\r\n\r\n    get primary() {\r\n        return this._ids[\"--id\"];\r\n    }\r\n\r\n    get parent() {\r\n        return this._ids[\"--parentid\"];\r\n    }\r\n\r\n\r\n    clone() {\r\n        const data = new DataRow(this._metarow);\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            cells[i].val = this._cells[i].val;\r\n        }\r\n    \r\n        let children = {};\r\n        for(let i in data.children) {\r\n            children[i] = data.children[i].clone();\r\n        }\r\n        data.children = children;\r\n        return data;\r\n    }\r\n\r\n    \r\n    applyMetaRow(metarow) {\r\n        for(const i in metarow.cells) {\r\n            const field = metarow.cells[i];\r\n            this._cells[field.name] = new DataCell(field);\r\n        }\r\n\r\n        for(const i in metarow.children) {\r\n            this._children[i] = metarow.children[i];\r\n        }\r\n    }\r\n\r\n\r\n    addChild(name, child) {\r\n        if (!this._children[name]) {\r\n            this._children[name] = [];\r\n        }\r\n        this._children[name].push(child);\r\n    }\r\n\r\n    set row(row) {\r\n        if (!row) return;\r\n\r\n        if (row[\"--id\"]) this._ids[\"--id\"] = row[\"--id\"];\r\n        if (row[\"--parentid\"]) this._ids[\"--parentid\"] = row[\"--parentid\"];\r\n\r\n        for(let field in this._cells) {\r\n            if (row.hasOwnProperty(field)) this._cells[field].val = row[field];\r\n        }\r\n\r\n        for(let child in this._children) {\r\n            this._children[child].row = row[child];\r\n        }\r\n    }\r\n\r\n\r\n    set filter(row) {\r\n        if (!row) return;\r\n\r\n        for(let field in this._cells) {\r\n            if (row.hasOwnProperty(field)) this._cells[field].filter = row[field];\r\n        }\r\n    }\r\n\r\n\r\n    getSummary() {\r\n        let str = [];\r\n        for(let i in this._cells) {\r\n            const cell = this._cells[i];\r\n            if (cell.isSummary()) {\r\n                const display = cell.display;\r\n                str.push(display);\r\n            }\r\n        }\r\n        return str.join(\" \");\r\n    }\r\n\r\n    toString() {\r\n        let str = [];\r\n        for(let i in this._cells) {\r\n            str.push(this._cells[i].display);\r\n        }   \r\n        return str.join(\" \");\r\n    }\r\n\r\n\r\n    serialize(changes_only = false) {\r\n        let data = {};\r\n        for(let i in this._cells) {\r\n            if (changes_only) {\r\n                if (this._cells[i].change != this._cells[i].val) {\r\n                    data[i] = this._cells[i].change;\r\n                }\r\n            } else {\r\n                if (this._cells[i].change != null) data[i] = this._cells[i].change;\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n\r\n    getCellByType(type) {\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].type == type) cells[i] = this._cells[i];\r\n        }\r\n        return cells;\r\n    }\r\n\r\n    clearErrors() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].error = 0;\r\n        }\r\n    }\r\n\r\n\r\n    reset() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].error = 0;\r\n            this._cells[i].change = null;\r\n        }\r\n    }\r\n\r\n    setErrors(err) {\r\n        for(let i in err) {\r\n            if (i.indexOf(\"__\") === 0) continue;\r\n            if (this._cells[i]) {\r\n                this._cells[i].error = err[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    convertToParams() {\r\n        let obj = {};\r\n        for(let i in this._cells) {\r\n            this._cells[i].addParam(obj);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    convertToAPIParams() {\r\n        let obj = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].type == \"asset\") continue;\r\n            this._cells[i].addAPIParam(obj);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    applyChangeData() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].val = this._cells[i].change;\r\n        }\r\n    }\r\n\r\n}","import { MetaRow } from \"./metarow.js\"\r\nimport { DataRow } from \"./datarow.js\"\r\nimport { Map } from \"./map.js\"\r\nimport { reactive } from \"vue\"\r\nimport client from \"./client.js\"\r\nimport { getModelSettings } from \"./route.js\" \r\n\r\n\r\nexport const RepoStore = reactive({meta : new MetaRow, data : [], indexes : {}, search : new DataRow() });\r\n\r\nexport function applySettings(settings) {\r\n    meta_settings = settings;\r\n}\r\n\r\nfunction indexData() {\r\n    RepoStore.indexes = {};\r\n    \r\n    for(const key in RepoStore.data) {\r\n        const row = RepoStore.data[key];\r\n        let ckey = row.cells[RepoStore.meta.store.index].val;\r\n        if (!RepoStore.indexes[ckey]) RepoStore.indexes[ckey] = [];\r\n        RepoStore.indexes[ckey].push(key);\r\n    }\r\n}\r\n\r\n\r\nfunction mapRepoData(response) {\r\n    RepoStore.data = [];\r\n    for (const i in response) {\r\n        let obj= new DataRow(RepoStore.meta);\r\n        obj.row = response[i];\r\n        RepoStore.data.push(obj);\r\n    }\r\n}\r\n\r\n\r\nfunction buildParams(meta_settings) {\r\n    let params = {};\r\n    if (!params) params = {};\r\n    if (Map.to) params.__to = Map.to;\r\n    if (meta_settings.to) params.__to = meta_settings.to;\r\n    if (Map.key) params[\"--parentid\"] = Map.key;\r\n    if (meta_settings.limit) params.__limit = meta_settings.limit;\r\n    if (meta_settings.fields) params.__fields = meta_settings.fields;\r\n    if (meta_settings.group) params.group = meta_settings.group;\r\n    if (Map.params._page) params.__limit = ((Map.params._page - 1) * params.__limit) + \",\" + params.__limit;\r\n    return params;\r\n}\r\n\r\nexport function resetRepo() {\r\n    RepoStore.meta = new MetaRow();\r\n    RepoStore.data = [];\r\n    RepoStore.indexes = {};\r\n    RepoStore.search = new DataRow();\r\n    RepoStore.component = \"\";\r\n    RepoStore.max_pages = 0;\r\n}\r\n\r\n\r\nexport const loadRepo = async() => {\r\n    let meta_settings = getModelSettings();\r\n    \r\n    resetRepo();\r\n    let params = buildParams(meta_settings);\r\n    let url = \"/\" + Map.route + \"/\" + Map.model;\r\n    if (Map.state == \"parent\") url += \"/parent\";\r\n    return client.get(\"/route\" +url, params)\r\n    .then(response => {\r\n        RepoStore.meta.map(response.fields, meta_settings.fields);\r\n        if (meta_settings.show == 'all') {\r\n            RepoStore.meta.showAll();\r\n        }\r\n        \r\n        RepoStore.search.applyMetaRow(RepoStore.meta);\r\n        RepoStore.search.filter = Map.params;\r\n        RepoStore.meta.init = true;\r\n\r\n        if (meta_settings.component) RepoStore.component = meta_settings.component;\r\n        else if (!RepoStore.meta.cells) RepoStore.component = \"\";\r\n        else RepoStore.component = (RepoStore.meta.store.index || RepoStore.meta.children.length > 0) ? \"tree\" : \"table\";\r\n    }).then(() => {\r\n        params = { ...params, ...RepoStore.search.convertToAPIParams()};\r\n        if (meta_settings.limit > 0) {\r\n            return client.get(\"/count/\" + Map.route + \"/\" + Map.model, params)\r\n            .then(response => {\r\n                RepoStore.max_pages = Math.ceil(response.count / meta_settings.limit);\r\n            })\r\n            .then(() => {\r\n                return client.get(\"/data\" + url, params);\r\n            })\r\n            .then(response => {\r\n                mapRepoData(response);\r\n                if (RepoStore.meta.store.index) indexData();\r\n                return response;\r\n            });\r\n        } else {\r\n            return client.get(\"/data\" + url, params)\r\n            .then(response => {\r\n                mapRepoData(response);\r\n                if (RepoStore.meta.store.index) indexData();\r\n                return response;\r\n            });\r\n        }\r\n    })\r\n    .catch(e => console.log(e));\r\n}\r\n","<template >\r\n    <div class=\"ptj-tree-node ptj-draggable\" :id=\"primary\" draggable=\"false\">\r\n        <div class=\"ptj-tree-node-row\">  \r\n            <div>\r\n                <a v-if=\"ischild\" data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle()\">\r\n                    <span class=\"material-icons\">subdirectory_arrow_right</span>\r\n                </a>\r\n                <a v-else data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle()\">\r\n                    <span class=\"material-icons\">keyboard_arrow_right</span>\r\n                </a>\r\n            </div>\r\n            <div v-if=\"RepoStore.meta.sortable\">\r\n                <a data-action=\"more\" class=\"button\" @click=\"prevent.stop\" @mousedown=\"setDraggable\" @mouseup=\"endDraggable\">\r\n                    <span class=\"material-icons\">drag_handle</span>\r\n                </a>\r\n            </div>\r\n            <div>{{ summary }}</div>\r\n            <ptj-button :route=\"{state:'primary', key:primary }\"><span class=\"material-icons\">arrow_forward_ios</span></ptj-button>\r\n        </div>\r\n        <ptj-tree-node v-for=\"(key, index) in children\" :row=\"key\" :ischild=\"true\"  :key=\"index\" v-show=\"store.toggle_state[primary]\" />\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, computed, onMounted } from \"vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport { RepoStore } from \"./../js/repo.js\"\r\n\r\nconst props = defineProps({\r\n    row : { \r\n        type : [String, Number],\r\n        required : true\r\n    },\r\n    draggable : Boolean,\r\n    ischild : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n});\r\n\r\nconst store = reactive({ toggle_state : {}, branch : null });\r\n\r\nfunction toggle() {\r\n    const index = store.branch.primary;\r\n    store.toggle_state[index] = (store.toggle_state[index]) ? false : true;\r\n}\r\n\r\nconst children = computed(() => {\r\n    if (!store.branch) return [];\r\n    const id = store.branch.primary;\r\n    return (RepoStore.indexes[id]) ? RepoStore.indexes[id] : [];\r\n});\r\n\r\nconst primary = computed(() => {\r\n    if (!store.branch) return 0;\r\n    return store.branch.primary;\r\n});\r\n\r\nconst summary = computed(() => {\r\n    if (!store.branch) return \"\";\r\n    return store.branch.getSummary();\r\n});\r\n\r\nonMounted(() => {\r\n    store.branch = RepoStore.data[props.row];\r\n});\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.model-tree.branch {\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  margin: 6px 0;\r\n  background-color:#111111;\r\n}\r\n\r\n.tree .ide-block {\r\n\tdisplay : none;\r\n}\r\n\r\n.dragArea {\r\n  min-height: 50px;\r\n  outline: 1px solid #777777;\r\n}\r\n\r\n\r\n</style>","<template >\r\n  <div class=\"ptj-tree ptj-drop-target'\" ref=\"treeroot\">\r\n    <ptj-tree-node v-for=\"(key, index) in RepoStore.indexes['0']\" :key=\"index\" :row=\"key\"  />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted } from 'vue'\r\nimport PTJDragDrop from \"./../js/dragndrop.js\"\r\nimport PtjTreeNode from \"./ptj-tree-node.vue\"\r\nimport { RepoStore } from \"./../js/repo.js\"\r\n\r\n\r\nonMounted(() => {\r\n    if (RepoStore.meta.sortable) {\r\n        PTJDragDrop.initDD({\r\n            handle : '.ptj-drag-handle',\r\n            drag_target : '.ptj-draggable',\r\n            drop_target : '.ptj-drop-target',\r\n            callback : saveSort\r\n        });\r\n    }\r\n});\r\n\r\n\r\nfunction saveSort() {\r\n\r\n}\r\n\r\n</script>\r\n","<template>\r\n    <input class=\"ptj-checkbox\" type=\"checkbox\" :true-value=\"1\" :false-value=\"0\" :name=\"field.name\" v-model=\"field.change\" v-if=\"ctype=='edit'\">\r\n    <select v-else-if=\"ctype=='filter'\" :name=\"field.name\" v-model=\"field.change1\" class=\"ptj-filter-form-checkbox\">\r\n        <option :value='0'>{{ \"All\" }}</option>\r\n        <option :value='1'>{{ \"Checked\" }}</option>\r\n        <option :value='2'>{{ \"Unchecked\" }}</option>\r\n    </select>\r\n    <a v-else @click=\"submit()\"><span class=\"material-icons\">{{ icon }}</span></a>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from \"vue\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport client from \"./../js/client.js\"\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        type : String,\r\n        default : 'view'\r\n    }\r\n});\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n\r\nfunction submit() {\r\n    let params = {};\r\n    params[\"--id\"] = Map.key;\r\n    params[props.field.name] = (props.field.val == 1) ? 0 : 1;\r\n    if (Map.key) params[\"--id\"] = Map.key;\r\n    return client.put(\"/data/\" + Map.route + \"/\" + Map.model, params)\r\n    .then(() => {\r\n        props.field.val = (props.field.val == 1) ? 0 : 1;\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n\r\nlet icon = computed(() => {\r\n    if (props.field.val == 1) {\r\n        return \"check_circle_outline\";\r\n    } else {\r\n        return \"highlight_off\"\r\n    }\r\n});\r\n</script>","<template>\r\n    <select v-if=\"ctype=='edit'\" \r\n        v-model=\"field.change\"\r\n        v-bind=\"field.atts\"\r\n        :name=\"field.name\"\r\n         @blur=\"field.validateon = true\"\r\n        >\r\n        <option value=\"0\" selected>{{ getDictionary('ptj-id-default') }}</option>\r\n        <option v-for=\"option in field.options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <ptj-multiple-select v-else-if=\"ctype=='filter'\" :field=\"field\" />\r\n  <span v-else>{{ field.getOption(field.val) }}</span>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { computed } from \"vue\"\r\nimport PtjMultipleSelect from \"./ptj-multiple-select.vue\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        default : 'view',\r\n        type : String\r\n    }\r\n});\r\n\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n\r\nlet options = computed(() => {\r\n    return props.field.options;\r\n});\r\n\r\n\r\n\r\n</script>","<template>\r\n  <input v-if=\"ctype=='edit'\"\r\n        :name=\"field.name\" \r\n        type=\"datetime-local\" \r\n        v-model=\"field.change\" \r\n        v-bind=\"field.atts\"\r\n        @blur=\"field.validateon = true\">\r\n   <div v-else-if=\"ctype=='filter'\">\r\n      <input \r\n        type=\"datetime-local\" \r\n        :name=\"field.name + 'min'\"\r\n        v-bind=\"field.atts\"\r\n        v-model=\"field.change1\">\r\n        -\r\n        <input \r\n            type=\"datetime-local\" \r\n            :name=\"field.name + 'max'\"\r\n            v-bind=\"field.atts\"\r\n            v-model=\"field.change2\"\r\n        >\r\n   </div>\r\n   <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from \"vue\"\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        default : 'view',\r\n        type : String\r\n    }\r\n});\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n</script>\r\n","<template>\r\n  <div class=\"ptj-table-wrapper\">\r\n    <table class=\"ptj-table\" :class=\"Map.model\">\r\n    <thead>\r\n        <tr class=\"ptj-table-header\" ref=\"tableheader\">\r\n        <th v-for=\"cell in RepoStore.meta.cells\" \r\n            v-show=\"cell.summary\" \r\n            :key=\"cell.name\" \r\n            class=\"ptj-table-header-cell\"\r\n            :class=\"cell.name\"\r\n            @click=\"orderBy(cell.name);\"\r\n        >{{ getDictionary('label', { \"model\" : Map.model, \"field\" : cell.name, def : cell.label }) }}\r\n            <span v-if=\"order.name == cell.name && order.dir == 'asc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_up</span>\r\n            <span v-if=\"order.name == cell.name && order.dir == 'desc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_down</span>\r\n        </th>\r\n        <th class=\"ptj-actions\">\r\n            <ptj-modal v-if=\"settings.disable_selectfields != true\" :location=\"false\" :relative=\"tableheader\">\r\n                <template #button>\r\n                    <span class=\"material-icons\">add</span> \r\n                </template>\r\n                <template #default>\r\n                    <ptj-selectfields ></ptj-selectfields> \r\n                </template>\r\n            </ptj-modal>\r\n        </th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"(obj, rindex) in RepoStore.data\" :key=\"rindex\" class=\"ptj-table-row\">\r\n        <td v-for=\"(field, name) in obj.cells\" :key=\"name\" v-show=\"field.summary\" class=\"ptj-table-cell\" :class=\"field.meta.name\">\r\n          <ptj-asset v-if=\"field.type=='asset'\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" :field=\"field\" />\r\n          <ptj-id v-else-if=\"field.type=='id'\" :field=\"field\"  />\r\n          <ptj-time v-else-if=\"field.type=='time'\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" :field=\"field\"  />\r\n        </td>\r\n        <td class=\"ptj-actions\" >\r\n            <ptj-button :route=\"{state:'primary', key:obj.primary}\"><span class=\"material-icons\">arrow_forward_ios</span></ptj-button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjSelectfields from \"./ptj-selectfields.vue\"\r\nimport PtjModal from \"./ptj-modal.vue\"\r\nimport { reactive, ref } from \"vue\"\r\nimport { RepoStore } from \"./../js/repo.js\"\r\nimport { getModelSettings } from \"./../js/route.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\n\r\nlet settings = getModelSettings();\r\nlet order = reactive( { name : '', dir : ''});\r\nconst tableheader = ref(null);\r\n\r\nfunction orderBy(name) {\r\n    if (RepoStore.meta.pages > 0) {\r\n        order.dir = (!order.name != name || order.dir  == \"desc\") ? \"asc\" : \"desc\";\r\n        order.name = name;\r\n        let sort = [];\r\n        sort[order.name] = order.dir;\r\n        RepoStore.meta.sort = sort;\r\n        load();\r\n    } else {\r\n        //custom sort on the table\r\n        if (order.name != name || order.dir == \"desc\") {\r\n            RepoStore.data.sort(function(x, y) {\r\n                let xval = x.getCell(name).toVal();\r\n                let yval = y.getCell(name).toVal();\r\n                if (xval < yval) {\r\n                    return -1;\r\n                } else if (xval > yval) {\r\n                    return 1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n            order.name = name;\r\n            order.dir = \"asc\";\r\n        } else {\r\n            RepoStore.data.sort(function(x, y) {\r\n                let xval = x.getCell(name).toVal();\r\n                let yval = y.getCell(name).toVal();\r\n                if (xval < yval) {\r\n                    return 1;\r\n                } else if (xval > yval) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n            order.name = name;\r\n            order.dir = \"desc\";\r\n        }\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\ntable, thead, tbody, tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n.ptj-table-wrapper {\r\n    position : relative;\r\n}\r\n\r\n</style>","<template>\r\n    <div v-for=\"(combinations, index) in getIndexCombinations\" :key=\"index\">\r\n     <h3><span\r\n        v-for=\"(tag, index) in combinations.tags\"\r\n        :key=\"index\"\r\n        >{{ tag }}&nbsp;</span></h3>\r\n    <ul>\r\n       <li v-for=\"ckey in combinations.data\" :key=\"ckey\">\r\n         <ptj-button :route=\"route\">\r\n          {{  data[ckey].getSummary() }}\r\n         </ptj-button>\r\n       </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { computed, inject } from \"vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\ninject(\"data\");\r\ninject(\"indexes\");\r\n\r\nfunction getCombinations(tag, data, combos) {\r\n    const ncombos = [];\r\n    if (combos.length == 0) {\r\n        for(let d in data) {\r\n        ncombos.push({ tags : [ data[d].display ], data : data[d].contains});\r\n        }\r\n    } else {\r\n        for (let c of combos) {\r\n          for(let d in data) {\r\n            let tags = c.tags;\r\n            tags.push(d.display);\r\n            ncombos.push({ tags : tags, data : c.data.filter( value => data[d].contains.includes(value))});\r\n          }\r\n        }\r\n    }\r\n    return ncombos;\r\n}\r\n\r\nconst getIndexCombinations = computed(() => { \r\n    let combos = [];\r\n    for (let group in indexes) {\r\n        combos = this.getCombinations(group, indexes[group], combos);\r\n    }\r\n    return combos;\r\n});\r\n</script>\r\n\r\n","<template>\r\n   <form @submit.prevent=\"searchData\" class=\"ptj-filter-form\">\r\n      <h3>{{ getDictionary('ptj-filter-form-title')}}</h3>\r\n      <ptj-form-row v-for=\"field in RepoStore.search.cells\" :key=\"field.name\" :field=\"field\" v-show=\"field.type != 'id' || Object.keys(field.options).length > 0\">\r\n          <ptj-id v-if=\"field.type=='id'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.type=='time'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" type=\"filter\" :field=\"field\" />\r\n          <a class=\"ptj-filter-form-reset\" @click=\"field.reset()\">x</a>\r\n      </ptj-form-row>\r\n      <input type=\"submit\" :value=\"getDictionary('ptj-filter-form-btn')\" class=\"ptj-filter-form-submit\" @click=\"$emit('close');\">\r\n  </form>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport { addToHistory } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { RepoStore, loadRepo } from \"./../js/repo.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\n\r\nfunction searchData() {\r\n    RepoStore.search.applyChangeData();\r\n    Map.params = RepoStore.search.convertToParams();\r\n    addToHistory();\r\n    loadRepo();\r\n}\r\n\r\n\r\n</script>\r\n<style scoped>\r\n.error {\r\n  color : red;\r\n}\r\n\r\n</style>\r\n\r\n","<template>\r\n <div class=\"ptj-pagination\">\r\n     <a v-for=\"index in RepoStore.max_pages\" \r\n     :key=\"index\" \r\n     @click=\"changePage(index)\" \r\n     :class=\"getActiveClass(index)\">{{ index }}</a>\r\n </div>\r\n</template>\r\n<script setup>\r\nimport { addToHistory } from \"./../js/route.js\"\r\nimport { loadRepo, RepoStore } from \"./../js/repo.js\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\nfunction getActiveClass(index) {\r\n    return (index == Map.params._page ?? 1) ? \"ptj-pagination-active\" : \"\";\r\n}\r\n\r\nfunction changePage(page) {\r\n    Map.params._page = page;\r\n    addToHistory();\r\n    loadRepo();\r\n}\r\n</script>","<template>\r\n    <div class=\"ptj-progress-bar-wrapper\">\r\n        <div class=\"ptj-progress-holder\">\r\n            <div class=\"ptj-progress-bar\" :style=\"'width:' + num + 'px'\">&nbsp;</div> \r\n        </div>   \r\n        <span>{{ num }}%</span>\r\n    </div> \r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { computed } from \"vue\"\r\n\r\nconst props = defineProps({\r\n    total : Number,\r\n    progress : Number\r\n});\r\n\r\n\r\nconst num = computed(() => {\r\n    let num = Math.floor((props.progress / props.total) * 100);\r\n    return (isNaN(num)) ? 0 : num;\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n .ptj-progress-holder {\r\n     width : 100%;\r\n     min-height : 10px;\r\n     position : relative;\r\n     display : flex;\r\n     align-items: stretch;\r\n     padding : 2px;\r\n }\r\n\r\n .ptj-progress-bar {\r\n     width : 0;\r\n     height : 100%;\r\n     position : relative;\r\n     line-height : 100%;\r\n }\r\n\r\n\r\n</style>\r\n","<template>\r\n <form @submit.prevent=\"submit\" v-show=\"fstate==0\" class=\"ptj-form\" :class=\"Map.model + ' ' + Map.state\">\r\n    <div class=\"ptj-form-error\" v-show=\"globalerror\">{{ globalerror }}</div>\r\n    <ptj-form-row v-for=\"field in cdata.cells\" :key=\"field.name\" :field=\"field\">\r\n          <ptj-asset v-if=\"field.type=='asset'\" type=\"edit\"  :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" type=\"edit\"  :field=\"field\"/>\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" type=\"edit\"  :field=\"field\" />\r\n          <ptj-id v-else-if=\"field.type=='id'\" type=\"edit\"  :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.type=='time'\" type=\"edit\"   :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" type=\"edit\"  :field=\"field\" />\r\n    </ptj-form-row>\r\n    <input type=\"submit\" :value=\"getDictionary('ptj-create-form-btn')\" class=\"ptj-form-submit\">\r\n    <ptj-progress-bar v-show=\"fstate == 1\" :total=\"progress.total\" :progress=\"progress.progress\" />\r\n  </form>\r\n  \r\n</template>\r\n\r\n<script setup>\r\n\r\nimport {ref, reactive, onMounted } from \"vue\" \r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjProgressBar from \"./ptj-progress-bar.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport client from \"./../js/client.js\"\r\nimport { DataRow } from \"./../js/datarow.js\"\r\nimport { MetaRow } from \"./../js/metarow.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { loadRepo } from \"./../js/repo.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\nconst emit = defineEmits(['close']);\r\nlet globalerror = ref('');\r\n\r\nconst cdata = reactive(new DataRow());\r\n\r\n\r\nconst progress = reactive({ total : 0, progress : 0});\r\n\r\nlet fstate = 0;\r\n\r\n\r\n\r\nconst load = async() => {\r\n    return client.post(\"/route/\" + Map.route + \"/\" + Map.model)\r\n    .then(response => {\r\n        const meta = new MetaRow();\r\n        meta.map(response.fields);\r\n        cdata.applyMetaRow(meta);\r\n\r\n        let promises = [];\r\n        for(let i in meta.cells) {\r\n            if (meta.cells[i].type == 'id' && meta.cells[i].reference) {\r\n                let url = \"/reference/\" + Map.model + \"/\" + i;\r\n                promises.push(meta.cells[i].setReferenceOptions(url, {\"--parentid\":Map.key}));\r\n            }\r\n        }\r\n        return Promise.all(promises);\r\n    }).catch(e => console.log(e));\r\n}\r\n\r\n\r\nfunction submit() {\r\n\r\n    fstate = (progress.total > 0) ? 1 : 2;\r\n    cdata.clearErrors();\r\n    let key = 0;\r\n    let ndata = cdata.serialize();\r\n    if (Map.key) ndata[\"--parentid\"] = Map.key;\r\n    return client.post(\"/data/\" + Map.route + \"/\" + Map.model, ndata)\r\n    .then(response=>{\r\n        key = response[\"--id\"];\r\n        let promises = [];\r\n        let assets = cdata.getCellByType(\"asset\");\r\n        progress.total = 0;\r\n        for(let i in assets) {\r\n            const val = assets[i].val;\r\n            if (!val) continue;\r\n            ++progress.total;\r\n            const asset = new Asset();\r\n            asset.url = \"/asset/\" + Map.model + \"/\" + i + \"/\" + response[\"--id\"];\r\n            let promise = asset.saveFile(assets[i].val)\r\n            .then(() => {\r\n                ++progress.progress;\r\n            });\r\n            promises.push(promise);\r\n        }\r\n        return Promise.all(promises);\r\n    })\r\n    .then(() => {\r\n        cdata.reset();\r\n        loadRepo();\r\n        emit(\"close\");\r\n    })\r\n    .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n            console.log(err);\r\n        fstate = 0;\r\n        if (typeof err == \"string\") {\r\n            globalerror = err;\r\n        } else {\r\n            cdata.setErrors(err);\r\n        }\r\n    });\r\n}\r\n\r\nonMounted(async () => {\r\n    await load();\r\n});\r\n\r\n</script>\r\n","<template>\r\n  <div :class=\"[Map.model, Map.state]\">\r\n    <ptj-modal>\r\n        <template #button>\r\n            {{ getDictionary('ptj-repo-post') }}\r\n        </template>\r\n        <template #default=\"createScope\">\r\n            <ptj-create-form @close=\"createScope.toggleShow\" />\r\n        </template>\r\n    </ptj-modal>\r\n    <ptj-modal v-if=\"settings.disable_filter != true\">\r\n        <template #button>\r\n            {{ getDictionary('ptj-repo-search') }} <span class=\"material-icons\">search</span>\r\n        </template>\r\n        <template #default=\"filterScope\">\r\n            <ptj-filter-form @close=\"filterScope.toggleShow\" />\r\n        </template>\r\n    </ptj-modal>\r\n    <ptj-tree v-if=\"RepoStore.component=='tree'\" />\r\n    <ptj-list v-else-if=\"RepoStore.component=='list'\" />\r\n    <ptj-table v-else-if=\"RepoStore.component=='table'\" />\r\n    <ptj-pagination v-if=\"RepoStore.max_pages > 0\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { ref, onMounted, onBeforeUnmount } from \"vue\"\r\nimport PtjTree from \"./ptj-tree.vue\"\r\nimport PtjTable from \"./ptj-table.vue\"\r\nimport PtjList from \"./ptj-list.vue\"\r\nimport PtjFilterForm from \"./ptj-filter-form.vue\"\r\nimport PtjSelectfields from \"./ptj-selectfields.vue\"\r\nimport PtjPagination from \"./ptj-pagination.vue\"\r\nimport PtjModal from \"./ptj-modal.vue\"\r\nimport PtjCreateForm from \"./ptj-create-form.vue\"\r\nimport { RepoStore, loadRepo, resetRepo } from \"./../js/repo.js\"\r\nimport { getModelSettings } from \"./../js/route.js\" \r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\n\r\nlet settings = getModelSettings();\r\n\r\n\r\n\r\n\r\nonMounted(async () => {\r\n    await loadRepo();\r\n\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n    resetRepo();\r\n});\r\n\r\n</script>\r\n<script>\r\n\r\n</script>\r\n\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n</style>","<template>\r\n    <p>{{ title }}</p>\r\n    <input type=\"text\" :placeholder=\"check_str\" @keyup=\"checkStatus\" v-model=\"delval\">\r\n    <button :disabled=\"disabled\" @click=\"del\">{{ btn }}</button>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport client from \"./../js/client.js\"\r\nimport { ref, computed } from \"vue\";\r\nimport { redirect } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\nconst props = defineProps({\r\n    check_str : {\r\n        type : String,\r\n        default : \"delete\"\r\n    },\r\n    parentid : {\r\n        default : 0\r\n    }\r\n});\r\n\r\nconst emits = defineEmits(['close']);\r\n\r\nlet delval = ref(\"\");\r\nlet disabled = ref(true);\r\nlet title = computed(() => {\r\n    return getDictionary(\"ptj-delete-title\",  { val : props.check_str});\r\n});\r\n\r\nlet btn = computed(() => {\r\n    return getDictionary(\"ptj-delete-btn\");\r\n});\r\n\r\nfunction checkStatus() {\r\n    disabled.value = (delval.value == props.check_str) ? false : true;\r\n}\r\n\r\nfunction del() {\r\n    client.delete(\"/data/\" + Map.route + \"/\" + Map.model, {\"--id\":Map.key})\r\n    .then(res => {\r\n        Map.state = \"parent\";\r\n        Map.key = props.parentid.val;\r\n        redirect();\r\n    })\r\n    .catch(e => console.log(e));\r\n}\r\n    \r\n</script>\r\n","<template>\r\n    <a v-if=\"RouteStore.route.perms.includes('put')\" @click=\"toggleState\" class=\"ptj-edit-toggle\">{{ next_state }}</a>\r\n    <ptj-modal v-if=\"RouteStore.route.perms.includes('delete')\" cls=\"ptj-del-modal\">\r\n        <template #button>\r\n            {{ getDictionary('ptj-primary-delete') }}\r\n        </template>\r\n        <template #default=\"delScope\">\r\n            <ptj-delete :parentid=\"store.data.parent\" @close=\"delScope.toggleShow\" />\r\n        </template>\r\n    </ptj-modal>\r\n    <div class=\"ptj-primary\" :class=\"Map.model\">\r\n        <ptj-form-row v-for=\"field in store.data.cells\" :key=\"field.name\" :field=\"field\"> \r\n          <ptj-asset v-if=\"field.meta.type=='asset'\" :type=\"store.type\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.meta.type=='number'\" :type=\"store.type\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.meta.type=='flag'\" :type=\"store.type\" :field=\"field\" />\r\n          <ptj-id v-else-if=\"field.meta.type=='id'\" :type=\"store.type\" :field=\"field\"  />\r\n          <ptj-time v-else-if=\"field.meta.type=='time'\" :type=\"store.type\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.meta.type=='string'\" :type=\"store.type\" :field=\"field\"  />\r\n        </ptj-form-row>\r\n        <input v-if=\"store.type =='edit'\" type=\"submit\" :value=\"getDictionary('ptj-primary-put-btn')\" class=\"ptj-form-submit\" @click=\"submit\">\r\n    </div>\r\n    <div class=\"ptj-children\">\r\n        <ptj-button v-for=\"action in RouteStore.route.children\" :key=\"action\" :route=\"{ model : action, state : 'parent', key : Map.key}\">\r\n            {{ action }}\r\n        </ptj-button>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport client from \"./../js/client.js\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport { DataRow } from \"./../js/datarow.js\"\r\nimport { reactive, ref, computed, onMounted, onBeforeUnmount } from \"vue\"\r\nimport PtjDelete from \"./ptj-delete.vue\"\r\nimport PtjModal from \"./ptj-modal.vue\"\r\nimport PtjForm from \"./ptj-create-form.vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport { MetaRow } from \"./../js/metarow.js\"\r\nimport {RouteStore, getModelSettings } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n  \r\n\r\n\r\nconst store = reactive({ data : new DataRow(), fstate : 0,  type : 'view', show_def : false, progress : { total : 0, progress : 0} });\r\n\r\n\r\n\r\nfunction toggleState() {\r\n    store.type = (store.type == \"view\") ? \"edit\" : \"view\";\r\n}\r\n\r\nlet next_state = computed(() => {\r\n    return (store.type == \"edit\") ? \"view\" : \"edit\";\r\n});\r\n\r\n\r\n\r\nfunction buildParams(meta_settings) {\r\n    let params = {};\r\n    if (Map.to) params.__to = Map.to;\r\n    if (Map.key) {\r\n        if (Map.key == \"first\") params.__limit = 1;\r\n        else params[\"--id\"] = Map.key;\r\n    }\r\n    if (meta_settings.fields) params.__fields = meta_settings.fields;\r\n    return params;\r\n}\r\n\r\n\r\nfunction reset() {\r\n    store.data = new DataRow();\r\n    store.fstate = 0;\r\n    store.type = \"view\";\r\n    store.show_def = false;\r\n    store.progress = { total : 0, progress : 0};\r\n}\r\n\r\nconst load = async() => {\r\n    let meta_settings = getModelSettings();\r\n    let params = buildParams(meta_settings);\r\n   \r\n    return client.get(\"/route/\" + Map.route + \"/\" + Map.model + \"/primary\", params)\r\n    .then(response => {\r\n        const meta = new MetaRow();\r\n        meta.map(response.fields, meta_settings.fields ?? []);\r\n        store.data.applyMetaRow(meta);\r\n    }).then(() => {\r\n        return client.get(\"/data/\" + Map.route + \"/\" + Map.model + \"/primary\", params);\r\n    }).then(response => {\r\n        store.data.row = response;\r\n        //set the change values as well for each row\r\n        for(let i in store.data.cells) {\r\n            store.data.cells[i].change = store.data.cells[i].val;\r\n        }\r\n    }).then(response => {\r\n        for(let i in store.data.cells) {\r\n            if (store.data.cells[i].type == \"id\" && store.data.cells[i].reference) {\r\n                let url = \"/reference/\" + Map.model + \"/\" + i;\r\n                store.data.cells[i].setReferenceOptions(url, {\"--id\" : Map.key});\r\n            }\r\n        }\r\n    }).catch(e => console.log(e));\r\n\r\n}\r\n\r\n\r\nfunction submit() {\r\n\r\n    store.fstate = (store.progress.total > 0) ? 1 : 2;\r\n    store.data.clearErrors();\r\n    let key = 0;\r\n    let ndata = store.data.serialize(true);\r\n    if (Object.keys(ndata).length == 0) {\r\n        toggleState();\r\n        return;\r\n    }\r\n    ndata[\"--id\"] = Map.key;\r\n    return client.put(\"/data/\" + Map.route + \"/\" + Map.model, ndata)\r\n    .then(response=>{\r\n        let promises = [];\r\n        let assets = store.data.getCellByType(\"asset\");\r\n        store.progress.total = 0;\r\n        for(let i in assets) {\r\n            const val = assets[i].val;\r\n            if (!val) continue;\r\n            ++store.progress.total;\r\n            const asset = new Asset();\r\n            asset.url = \"/asset/\" + Map.model + \"/\" + i + \"/\" + response[\"--id\"];\r\n            let promise = asset.saveFile(assets[i].val)\r\n            .then(() => {\r\n                ++store.progress.progress;\r\n            });\r\n            promises.push(promise);\r\n        }\r\n        return Promise.all(promises);\r\n    })\r\n    .then(() => {\r\n        for(let i in store.data.cells) {\r\n            store.data.cells[i].val = store.data.cells[i].change;\r\n        }\r\n    })\r\n    .then(() => {\r\n        toggleState();\r\n    })\r\n    .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n        store.fstate = 0;\r\n        if (typeof err == \"string\") {\r\n            globalerror = err;\r\n        } else {\r\n            store.data.setErrors(err);\r\n        }\r\n    });\r\n}\r\n\r\nonMounted(async () => {\r\n await load();\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n    reset();\r\n});\r\n\r\n</script>","<template>\r\n <div class=\"ptj-account-handler\">\r\n    <form @submit.prevent=\"submit\" v-show=\"store.state=='login'\" class=\"ptj-login\">\r\n        <div class=\"ptj-form-error\" v-show=\"store.globalerror\">{{ store.globalerror }}</div>\r\n        <ptj-form-row v-for=\"field in store.login_data.cells\" :key=\"field.meta.name\" :field=\"field\">\r\n          <ptj-string type=\"edit\" :field=\"field\" />\r\n        </ptj-form-row>\r\n        <input type=\"submit\" :value=\"getDictionary('ptj-account-handler-btn-login')\" class=\"ptj-form-submit\">\r\n    </form>\r\n    <form  @submit.prevent=\"submit\" v-show=\"store.state=='create'\" class=\"ptj-register\">\r\n        <div class=\"ptj-form-error\" v-show=\"store.globalerror\">{{ store.globalerror }}</div>\r\n        <ptj-form-row v-for=\"field in store.register_data.cells\" :key=\"field.meta.name\" :field=\"field\">\r\n          <ptj-number v-if=\"field.meta.type=='number'\" type=\"edit\" :field=\"field\"/>\r\n          <ptj-flag v-else-if=\"field.meta.type=='flag'\" type=\"edit\" :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.meta.type=='time'\" type=\"edit\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.meta.type=='string'\" type=\"edit\" :field=\"field\" />\r\n        </ptj-form-row>\r\n        <input type=\"submit\" :value=\"getDictionary('ptj-account-handler-btn-create')\" class=\"ptj-form-submit\">\r\n    </form>\r\n </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport { refresh } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { reactive } from 'vue'\r\nimport { DataRow } from './../js/datarow.js';\r\nimport { MetaRow } from \"./../js/metarow.js\"\r\nimport client from \"./../js/client.js\"\r\nimport { getDictionary } from \"./../js/dictionary.js\"\r\n\r\nconst props = defineProps({\r\n    actions : []\r\n});\r\n\r\n\r\nconst store = reactive({\r\n    state : 'login',\r\n    active : true,\r\n    login_data : new DataRow(),\r\n    register_data : new DataRow(),\r\n    globalerror : ''\r\n});\r\n\r\n//load our modules\r\n\r\nclient.post(\"/route/\" + Map.route + \"/\" + Map.model)\r\n.then(response => {\r\n    let meta = new MetaRow();\r\n    meta.map(response.fields);\r\n    store.register_data.applyMetaRow(meta);\r\n});\r\n\r\nclient.post(\"/route/\" +  Map.route + \"/\" + Map.model + \"/login\")\r\n.then(response => {\r\n    let meta = new MetaRow();\r\n    meta.map(response.fields);\r\n    store.login_data.applyMetaRow(meta)\r\n});\r\n\r\n\r\nfunction submit() {\r\n    store.active = false;\r\n    store.globalerror = \"\";\r\n    if (store.state == \"login\") {\r\n        return client.post(\"/data/\" +  Map.route + \"/\" + Map.model + \"/login\", store.login_data.serialize(\"login\"))\r\n        .then(response => {\r\n            refresh();\r\n        })\r\n        .catch(e => {\r\n            store.globalerror = \"Incorrect username / password\";\r\n        })\r\n    } else {\r\n        return client.post(\"/data/\" + Map.route + \"/\" +  Map.model, store.register_data.serialize(\"post\"))\r\n        .then(response => {\r\n            refresh();\r\n        })\r\n        .catch(e => {\r\n            store.register_data.applyErrors(e);\r\n        });\r\n    }\r\n} \r\n</script>\r\n\r\n\r\n","<template>\r\n    <ptj-slug-trail />\r\n    <Suspense>\r\n        <template #default>\r\n            <div :class=\"[Map.model, Map.state]\">\r\n            <h1>{{ RouteStore.title }}</h1>\r\n            <component v-if=\"component\" :is=\"component\" />\r\n            </div>\r\n        </template>\r\n        <template #fallback>\r\n            <div>Loading ...</div>\r\n        </template>\r\n    </Suspense>\r\n</template>\r\n<script setup>\r\n\r\nimport { computed, onMounted } from \"vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjSlugTrail from \"./ptj-slug-trail.vue\"\r\nimport { RouteStore, loadRoute, loadSlugTrail } from \"./../js/route.js\"\r\nimport PtjRepo from \"./ptj-repo.vue\"\r\nimport PtjPrimary from \"./ptj-primary.vue\"\r\nimport PtjAccountHandler from \"./ptj-account-handler.vue\"\r\n\r\n\r\nconst component = computed(() => {\r\n    if (!RouteStore.component) return null;\r\n    else if (RouteStore.component == \"ptj-primary\") return PtjPrimary;\r\n    else if (RouteStore.component == \"ptj-repo\") return PtjRepo;\r\n    else if (RouteStore.component == \"ptj-account-handler\") return PtjAccountHandler;\r\n});\r\n\r\n\r\n\r\n\r\nonMounted(() => {\r\n    loadSlugTrail();\r\n    return loadRoute();\r\n});\r\n\r\n</script>","let settings = {};\r\nimport client from \"./client.js\"\r\nimport { Map } from \"./map.js\"\r\nimport { initUser } from \"./user.js\"\r\nimport { initSettings} from \"./route.js\"\r\n\r\n\r\nexport function PtjRun(settings = {}) {\r\n    if (!settings) settings = {};\r\n    if (!settings.client) {\r\n        throw \"Must set client settings\";\r\n    }\r\n\r\n    if (!settings.client.url) {\r\n        throw(\"No URL defined for client\");\r\n    }\r\n\r\n    client.initSettings(settings.client);\r\n\r\n    if (settings.map) {\r\n        Map.initSettings(settings.map);\r\n    }\r\n\r\n    initSettings(settings.models);\r\n\r\n    let role = (settings.user && settings.user.role) ? settings.user.role : \"\";\r\n    return initUser(role);\r\n}\r\n","import PTJUser from \"./presstojam/src/components/ptj-user.vue\"\r\nimport PTJRoute from \"./presstojam/src/components/ptj-router.vue\"\r\nimport { PtjRun } from \"./presstojam/src/js/controller.js\"\r\nimport Client from \"./presstojam/src/js/client.js\"\r\nimport { createApp } from \"vue\"\r\nimport { Map } from \"./presstojam/src/js/map.js\"\r\nimport { loadNav } from \"./presstojam/src/js/user.js\"\r\n \r\nexport function runApp(mount, user_settings) {\r\n    PtjRun(user_settings)\r\n    .then(() => {\r\n        return loadNav()\r\n    }).then(() => {\r\n        const app = createApp(PTJUser);\r\n        app.mount(mount);\r\n        return app;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n\r\nexport function runRoute(mount, user_settings) {\r\n    PtjRun(user_settings)\r\n    .then(() => {\r\n        const app = createApp(PTJRoute);\r\n        app.mount(mount);\r\n        return app;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n\r\n\r\nexport function getClient(settings) {\r\n\r\n    if (!settings.client) {\r\n        throw \"Must set client settings\";\r\n    }\r\n\r\n    if (!settings.client.url) {\r\n        throw(\"No URL defined for client\");\r\n    }\r\n\r\n    Client.initSettings(settings.client);\r\n    return Client;\r\n}\r\n\r\n"],"names":["active","ref","toggleShow","value","relstyle","computed","props","relative","obj","el","left","top","width","offsetWidth","height","offsetHeight","wrapper","classList","contains","offsetLeft","offsetTop","parentNode","getOffsetToWrapper","disabled","getClass","location","styleInject","css","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","main_url","custom_headers","initSettings","settings","url","name","run","method","params","body","headers","Headers","set","i","fetch","mode","cache","credentials","then","response","ok","json","get","data","URLSearchParams","Array","isArray","append","JSON","stringify","indexOf","toString","this","getprimary","post","put","patch","delete","Map","constructor","_route","_model","_state","_key","_to","_params","_base","_default","Object","keys","forEach","property","defineProperty","substring","newValue","action_map","id","model","state","to","reset","route","key","convertToURL","pts","x","push","join","param_str","base","convertFromURL","url_obj","URL","window","href","pathname","replace","parts","split","length","_self","searchParams","pop","isNaN","parseInt","Error","getAll","default","apply","model_settings","onpopstate","runRoute","RouteStore","reactive","component","title","parent","slug","getModelSettings","loadRoute","children","perms","client","catch","e","console","log","loadSlugTrail","refresh","reload","redirect","addToHistory","url_str","protocol","host","history","pushState","custom_val","selectCustom","field","change1","change","filter","item","onMounted","reference","setReferenceOptions","show_list","display","symbol","toggleList","select","target","getAttribute","dictionary","getDictionary","vals","str","models","fields","def","val","ctype","immutable","tag","enums","regEx","RegExp","exp","test","isEnum","setContainsAsOptions","encrypted","html","max","atts","readonly","placeholder","meta","User","init","login","user","NavStore","cats","routes","logout","Client","checkLoginStatus","is_expired","setTimeout","initUser","role","loadNav","cat","route_name","getDefault","PTJDragNDrop","_handle","handle","_drop_target","drop_target","_drag_target","drag_target","_call_back","callback","_x","_y","_offset_x","_offset_y","_judder","judder","_drag_node","_drop_node","_tree","tree","isJudder","y","dx","dy","getDirection","offset","elem","rect","getBoundingClientRect","win","ownerDocument","defaultView","pageYOffset","pageXOffset","insertAfter","drag_id","drop_id","circular","sort","nextElementSibling","node","dragStart","ev","targ","closest","dataTransfer","dropEffect","clientX","clientY","isDroppable","dragEnter","preventDefault","dir","dragOver","dragEnd","setAttribute","drop","initDD","drag","querySelectorAll","addAttribute","addEventListener","main","Errors","Field","_name","_type","_atts","_confirm","_reference","_label","_store","summary","options","_default_val","_immutable","_encrypted","_min","_max","_contains","_notcontains","_recursive","_error","toLowerCase","validation","min","notcontains","getOption","opt","clean","calcValue","validateSize","validate","err","nhas","match","has","MetaRow","_cells","_children","_states","_active","_init","index","addChild","child","addState","action","_actions","resetSummary","arr","mapField","recursive","map","limited_fields","getCellByType","cells","showAll","DataCell","_meta","error","is_validate_on","meta_keys","getOwnPropertyNames","includes","showError","default_val","addParam","change2","addAPIParam","cobj","validateon","on","store","isSummary","DataRow","metarow","_metarow","_ids","applyMetaRow","primary","clone","row","hasOwnProperty","getSummary","cell","serialize","changes_only","clearErrors","setErrors","convertToParams","convertToAPIParams","applyChangeData","RepoStore","indexes","search","indexData","ckey","mapRepoData","resetRepo","max_pages","loadRepo","async","meta_settings","__to","limit","__limit","__fields","group","_page","buildParams","show","Math","ceil","count","toggle_state","branch","toggle","saveSort","sortable","PTJDragDrop","icon","order","tableheader","pages","load","xval","getCell","toVal","yval","inject","getIndexCombinations","combos","getCombinations","searchData","getActiveClass","page","num","floor","progress","total","globalerror","cdata","fstate","submit","ndata","promises","assets","asset","Asset","promise","saveFile","Promise","all","emit","onBeforeUnmount","delval","check_str","btn","checkStatus","del","res","parentid","show_def","toggleState","next_state","login_data","register_data","applyErrors","PtjPrimary","PtjRepo","PtjAccountHandler","PtjRun","mount","user_settings","app","createApp","PTJUser","PTJRoute"],"mappings":"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"}