{"version":3,"file":"ptj.cjs.js","sources":["../presstojam/src/js/client.js","../presstojam/src/js/datacell.js","../presstojam/src/js/datarow.js","../presstojam/src/js/datatemplate.js","../presstojam/src/js/error.js","../presstojam/src/js/validator.js","../presstojam/src/js/field.js","../presstojam/src/js/asset.js","../presstojam/src/js/metarow.js","../presstojam/src/js/changeaction.js","../presstojam/src/js/modelinstance.js","../presstojam/src/js/model.js","../presstojam/src/js/ctrlmap.js","../presstojam/src/js/router.js","../presstojam/src/js/controller.js","../presstojam/src/js/classinjection.js","../presstojam/src/components/ptj-error.vue","../node_modules/style-inject/dist/style-inject.es.js","../presstojam/src/components/ptj-error.vue?vue&type=template&id=c05300a8&lang.js","../presstojam/src/components/ptj-form-input.vue","../presstojam/src/components/ptj-form-input.vue?vue&type=template&id=64b3afe6&lang.js","../presstojam/src/components/ptj-form-confirm.vue","../presstojam/src/components/ptj-form-confirm.vue?vue&type=template&id=62754d43&lang.js","../presstojam/src/components/ptj-form-select.vue","../presstojam/src/components/ptj-form-select.vue?vue&type=template&id=34644c49&lang.js","../presstojam/src/components/ptj-form-radio.vue","../presstojam/src/components/ptj-form-radio.vue?vue&type=template&id=2e1363be&lang.js","../presstojam/src/components/ptj-form-checkbox.vue","../presstojam/src/components/ptj-form-checkbox.vue?vue&type=template&id=0f4b9e50&lang.js","../presstojam/src/components/ptj-form-textarea.vue","../presstojam/src/components/ptj-form-textarea.vue?vue&type=template&id=0aa8b372&lang.js","../presstojam/src/components/ptj-form-asset.vue","../presstojam/src/components/ptj-form-asset.vue?vue&type=template&id=93648f9a&lang.js","../presstojam/src/components/ptj-progress-bar.vue","../presstojam/src/components/ptj-progress-bar.vue?vue&type=template&id=460b10ff&lang.js","../presstojam/src/components/ptj-form.vue","../presstojam/src/components/ptj-form.vue?vue&type=template&id=523d6cd0&lang.js","../presstojam/src/components/ptj-nav.vue","../presstojam/src/components/ptj-nav.vue?vue&type=template&id=262eb772&lang.js","../presstojam/src/components/ptj-filter-form-time.vue","../presstojam/src/components/ptj-filter-form-time.vue?vue&type=template&id=697f55ad&lang.js","../presstojam/src/components/ptj-filter-form-checkbox.vue","../presstojam/src/components/ptj-filter-form-checkbox.vue?vue&type=template&id=0743e0ba&lang.js","../presstojam/src/components/ptj-widget-window.vue","../presstojam/src/components/ptj-widget-window.vue?vue&type=template&id=da476e86&lang.js","../presstojam/src/components/ptj-filter-form.vue","../presstojam/src/components/ptj-filter-form.vue?vue&type=template&id=71ada21d&lang.js","../presstojam/src/components/ptj-pagination.vue","../presstojam/src/components/ptj-pagination.vue?vue&type=template&id=43dcd5a6&lang.js","../presstojam/src/components/ptj-selectfields.vue","../presstojam/src/components/ptj-selectfields.vue?vue&type=template&id=89ff5b7e&lang.js","../presstojam/src/components/ptj-repo-header.vue","../presstojam/src/components/ptj-repo-header.vue?vue&type=template&id=ba19bc28&lang.js","../presstojam/src/components/ptj-tree-node.vue","../presstojam/src/components/ptj-tree-node.vue?vue&type=template&id=1dcaa9f5&lang.js","../presstojam/src/js/dragndrop.js","../presstojam/src/components/ptj-tree.vue","../presstojam/src/components/ptj-tree.vue?vue&type=template&id=eebe52ac&lang.js","../presstojam/src/components/ptj-table.vue","../presstojam/src/components/ptj-table.vue?vue&type=template&id=15ab9672&lang.js","../presstojam/src/components/ptj-list.vue","../presstojam/src/components/ptj-list.vue?vue&type=template&id=f392d8ac&lang.js","../presstojam/src/components/ptj-repo.vue","../presstojam/src/components/ptj-repo.vue?vue&type=template&id=1c7fb47e&lang.js","../presstojam/src/components/ptj-single-item.vue","../presstojam/src/components/ptj-single-item.vue?vue&type=template&id=4f4c821c&lang.js","../presstojam/src/components/ptj-accounthandler.vue","../presstojam/src/components/ptj-accounthandler.vue?vue&type=template&id=fdfae9ee&lang.js","../presstojam/src/components/ptj-card.vue","../presstojam/src/components/ptj-card.vue?vue&type=template&id=3583d51c&lang.js","../presstojam/src/components/ptj-tabs.vue","../presstojam/src/components/ptj-tabs.vue?vue&type=template&id=00fda68a&lang.js","../presstojam/src/components/ptj-account-details.vue","../presstojam/src/components/ptj-account-details.vue?vue&type=template&id=c7cf5774&lang.js","../presstojam/src/components/ptj-root.vue","../presstojam/src/components/ptj-root.vue?vue&type=template&id=2c0fa1ee&lang.js","../import.js"],"sourcesContent":["let custom_headers  = {};\r\nlet main_url;\r\nlet status_handlers = {};\r\nlet debug = true;\r\nlet last_status;\r\nlet last_ok;\r\n\r\nexport default {\r\n\r\n    regCustomHeader(name, value) {\r\n        custom_headers[name] = value;\r\n    },\r\n\r\n    regStatusHandler(status, handler) {\r\n        status_handlers[status] = handler;\r\n    },\r\n\r\n    setURL(url) {\r\n        main_url = url;\r\n    },\r\n    regDebug(is_debug) {\r\n        debug = is_debug;\r\n    },\r\n\r\n    run(url, headers) {\r\n        \r\n        headers.mode = 'cors';\r\n        headers.cache = 'no-cache';\r\n        headers.credentials = 'include';\r\n        headers['Content-Type'] = 'application/json';\r\n        headers.headers = custom_headers;\r\n\r\n        const _self = this;\r\n\r\n        return fetch(main_url + url, headers)\r\n        .then(response => {\r\n            last_status = response.status;\r\n            last_ok = response.ok;\r\n            if (status_handlers[response.status]) {\r\n                status_handlers[response.status](response);\r\n            } else if (response.status == 401) {\r\n                return response.status;\r\n            } else {\r\n                return response.json();\r\n            }\r\n        })\r\n        .then(val => {\r\n            if (!last_ok) throw val;\r\n\r\n            if (last_status == 401) {\r\n                let omethod = headers.method;\r\n                headers.method = 'PUT';\r\n                return fetch(main_url + \"/core-switch-tokens\", headers)\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        headers.method = omethod;\r\n                        return fetch(main_url + url, headers)\r\n                        .then(response=> {\r\n                            if (response.status == 401) {\r\n                                throw new Error(\"Issue with refresh token\");\r\n                            } else if (response.ok) {\r\n                                return response.json();\r\n                            } else {\r\n                              //  profile.updateUser(\"public\", 0);\r\n                              //  throw Error(\"Logged out\");\r\n                            }\r\n                        });\r\n                    } else {\r\n                       // profile.updateUser(\"public\", 0);\r\n                       // throw Error(\"Logged out\");\r\n                    }\r\n                });\r\n            } else return val;\r\n        })\r\n        .catch(err => {\r\n            if (debug) console.log(err);\r\n            throw err;\r\n        });\r\n    }, \r\n    setDebug(data) {\r\n        if (!data) {\r\n            data = {\"__debug\" : true}\r\n        } else {\r\n            data[\"__debug\"] = true;\r\n        }\r\n        return data;\r\n    },\r\n    get(url, data) {\r\n        if (debug) data = this.setDebug(data);\r\n        if (data) {\r\n            const params = new URLSearchParams();\r\n            let graph = {};\r\n            for(let i in data) {\r\n                if (Array.isArray(data[i]) || (typeof data[i] == 'object' && data[i] !== null)) graph[i] = data[i];\r\n                else params.append(i, data[i]);\r\n            }\r\n\r\n            if (graph) {\r\n                params.append(\"graph\", JSON.stringify(graph));\r\n            }\r\n            if (url.indexOf(\"?\") == -1) url += \"?\";\r\n            else url += \"&\";\r\n            url += params.toString();\r\n        }\r\n        let headers = {};\r\n        headers.method = 'GET';\r\n        return  this.run(url, headers);\r\n    },\r\n\r\n    getprimary(url, data) {\r\n        return this.get(url, data);\r\n    },\r\n\r\n    post(url, data) {\r\n        //call our fetch response and return\r\n        if (debug) data = this.setDebug(data);\r\n        let headers = {};\r\n        headers.method = 'POST';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    },\r\n\r\n    put(url, data) {\r\n        if (debug) data = this.setDebug(data);\r\n        let headers = {};\r\n        headers.method = 'PUT';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    },\r\n\r\n    patch(url, data) {\r\n        if (debug) data = this.setDebug(data);\r\n        let headers = {};\r\n        headers.method = 'PATCH';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    },\r\n\r\n    delete(url, data) {\r\n        if (debug) data = this.setDebug(data);\r\n        let headers = {};\r\n        headers.method = 'DELETE';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    }\r\n}\r\n","import { reactive, computed } from \"vue\"\r\n\r\nexport class DataCell {\r\n\r\n    constructor(meta) {\r\n        this._meta = meta;\r\n        this._store = reactive({ value : null, display : null, error : 0, is_validate_on : false});\r\n\r\n        this.val = computed({ \r\n            get : () =>  {\r\n                return this._store.value;\r\n            },\r\n            set : (val) => {\r\n                this._store.value = this._meta.clean(val);\r\n                this._store.error = this._meta.validate(val);\r\n            }     \r\n        });\r\n\r\n        this.error = computed({\r\n            get : () => this._store.error,\r\n            set : val => { this._store.error = val }\r\n        });\r\n\r\n        this.showError = computed(() => {\r\n            return this._store.is_validate_on && this._store.error ? true : false;\r\n        });\r\n\r\n        if (this._meta.default) this._store.value = this._meta.default;\r\n        else if (this._meta.type == \"select\") this._store.value = 0; \r\n    }\r\n\r\n    get meta() {\r\n        return this._meta;\r\n    }\r\n\r\n    set validateon(on) {\r\n        this._store.is_validate_on = on;\r\n    }\r\n\r\n    set display(display) {\r\n        this._store.display = display;\r\n    }\r\n\r\n    get display() {\r\n        if (this._store.display) return this._store.display;\r\n        else return this._store.value;\r\n    }\r\n\r\n    toString() {\r\n        return this._store.display;\r\n    }\r\n\r\n    toVal() {\r\n        let cval = this._store.value;\r\n        return cval;\r\n    }\r\n\r\n    setVal(val) {\r\n        this._store.value = val;\r\n    }\r\n}\r\n","import { DataCell } from \"./datacell.js\"\r\n\r\n\r\nexport class DataRow {\r\n\r\n    constructor(metarow) {\r\n        this._cells = {};\r\n        this._references = {};\r\n        this._children = {};\r\n        this._parent;\r\n        this._primary;\r\n\r\n        if (metarow) this.applyMetaRow(metarow);\r\n        \r\n    }\r\n\r\n    \r\n    applyMetaRow(metarow) {\r\n        if (metarow.primary) this._primary = new DataCell(metarow.primary);\r\n        if (metarow.parent) this._parent = new DataCell(metarow.parent);\r\n\r\n        for(const i in metarow.fields) {\r\n            const field = metarow.fields[i];\r\n            this._cells[field.name] = new DataCell(field);\r\n        }\r\n\r\n        for(const i in metarow.references) {\r\n            this._references[i] = new DataRow(metarow.references[i]);\r\n        }\r\n\r\n        for(const i in metarow.children) {\r\n            this._children[i] = metarow.children[i];\r\n        }\r\n    }\r\n\r\n\r\n    appendPrimary(field) {\r\n        this._primary = new DataCell(field);\r\n    }\r\n\r\n\r\n\r\n    addChild(name, child) {\r\n        if (!this._children[name]) {\r\n            this._children[name] = [];\r\n        }\r\n        this._children[name].push(child);\r\n    }\r\n\r\n    set row(row) {\r\n\r\n        if (!row) return;\r\n\r\n        if (this._primary && row[this._primary.meta.name]) this._primary.setVal(row[this._primary.meta.name]);\r\n        if (this._parent && row[this._parent.meta.name]) this._parent.setVal(row[this._parent.meta.name]);\r\n        \r\n        for(let field in this._cells) {\r\n            if (!row[field]) continue;\r\n            this._cells[field].setVal(row[field]);\r\n        }\r\n\r\n        for(let ref in this._references) {\r\n            this._references[ref].row = row[ref];\r\n        }\r\n\r\n        for(let child in this._children) {\r\n            this._children[child].row = row[child];\r\n        }\r\n\r\n\r\n        if (this._parent && this._references[this._parent.meta.reference]) {\r\n            this._parent.display = this._references[this._parent.meta.reference].getSummary();\r\n        }\r\n        for(let cell in this._cells) {\r\n            let field = this._cells[cell].meta;\r\n            if (field.reference && this._references[field.reference]) {\r\n                this._cells[cell].display = this._references[field.reference].getSummary();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    get cells() {\r\n        return this._cells;\r\n    }\r\n\r\n\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n\r\n\r\n    get primary() {\r\n        return this._primary;\r\n    }\r\n\r\n    get children() {\r\n        return this._children;\r\n    }\r\n\r\n    getCell(name) {\r\n        if (this._primary && this._primary.meta.name == name) return this._primary;\r\n        else if (this._parent && this._parent.meta.name == name) return this._parent;\r\n        else return this._cells[name];\r\n    }\r\n\r\n\r\n    getSummary() {\r\n        let str = [];\r\n        for(let i in this._cells) {\r\n            const cell = this._cells[i];\r\n            if (cell.meta.isSummary()) {\r\n                const display = cell.display;\r\n                str.push(display);\r\n            }\r\n        }\r\n        return str.join(\" \");\r\n    }\r\n\r\n    toString() {\r\n        let str = [];\r\n        for(let i in this._cells) {\r\n            str.push(this._cells[i].display);\r\n        }   \r\n        return str.join(\" \");\r\n    }\r\n\r\n\r\n    serialize(state) {\r\n        let data = {};\r\n        if (state == \"post\") {\r\n            if (this._parent) data[this._parent.meta.name] = this._parent.toVal();\r\n        } else if (state == \"put\" || state == \"delete\") {\r\n            data[this._primary.meta.name] = this._primary.toVal();\r\n        }\r\n        for(let i in this._cells) {\r\n            data[i] = this._cells[i].toVal();\r\n        }\r\n        return data;\r\n    }\r\n\r\n\r\n    getCellByType(type) {\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].meta.type == type) cells[i] = this._cells[i];\r\n        }\r\n        return cells;\r\n    }\r\n}","import { DataCell } from \"./datacell.js\"\r\nimport { computed } from \"vue\"\r\n\r\nclass DataTemplateCell extends DataCell {\r\n    \r\n    constructor(meta) {\r\n\r\n        super(meta);\r\n    \r\n        if (this._meta.atts.type == \"datetime\") {\r\n            this._store.value = {min : null, max : null };\r\n\r\n            this.val = computed({\r\n                get : () =>  {\r\n                    return this._store.value;\r\n                },\r\n                set : (val) => {\r\n                    if (val.min) this._store.value.min = this._meta.clean(val.min);\r\n                    if (val.max) this._store.value.max = this._meta.clean(val.max);\r\n                    this._store.error = this._meta.validate(val);\r\n                }  \r\n            });\r\n\r\n            this.val1 = computed({\r\n                get : () =>  {\r\n                    return this._store.value.min;\r\n                },\r\n                set : (val) => {\r\n                    this._store.value.min = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }     \r\n            });\r\n\r\n            this.val2 = computed({\r\n                get : () =>  {\r\n                    return this._store.value.max;\r\n                },\r\n                set : (val) => {\r\n                    this._store.value.max = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }     \r\n            });\r\n\r\n            this.addParam = obj => {\r\n                let cobj = {};\r\n                if (this._store.value.min) cobj.min = this._store.value.min;\r\n                if (this._store.value.max) cobj.max = this._store.value.max;\r\n                if (Object.keys(cobj).length > 0) obj[this._meta.name] = cobj;\r\n            };\r\n\r\n\r\n        } else if (this._meta.type == \"checkbox\") {\r\n            this._store.value = 0;\r\n\r\n            this.addParam = (obj) => {\r\n                if (this._store.value == 1) {\r\n                    obj[this._meta.name] = 1;\r\n                } else if (this._store.value == 2) {\r\n                    obj[this._meta.name] = 0;\r\n                }\r\n            }\r\n\r\n        } else if (this._meta.type == \"select\") {\r\n            this._store.value = [];\r\n\r\n            this.addParam = obj => {\r\n                if (this._store.value.length > 0) obj[this._meta.name] = this._store.value;\r\n            }\r\n\r\n        } else {\r\n\r\n            this.addParam = obj => {\r\n                if (this._store.value) obj[this._meta.name] = [\"%\" + this._store.value + \"%\"];\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport class DataTemplate  {\r\n\r\n    constructor(metarow) {\r\n        this._cells = {};\r\n        this._primary;\r\n        this._parent;\r\n        this._limit = 0;\r\n        this._page = 0;\r\n        this._fields = [];\r\n        this._sort = {};\r\n        this._groups = [];\r\n        this._children = [];\r\n        this._active;\r\n        this._max_pages = 0;\r\n\r\n        if (metarow) this.applyMetaRow(metarow);\r\n    }\r\n    \r\n\r\n    applyMetaRow(metarow) {\r\n        if (metarow.primary) this._primary = new DataCell(metarow.primary);\r\n        if (metarow.parent) this._parent = new DataCell(metarow.parent);\r\n\r\n        for(const i in metarow.fields) {\r\n            const field = metarow.fields[i];\r\n            this._cells[field.name] = new DataTemplateCell(field);\r\n        }\r\n\r\n    }\r\n\r\n    get cells() {\r\n        return this._cells;\r\n    }\r\n\r\n\r\n    initField(field) {\r\n        this._data.initField(field);\r\n    }\r\n\r\n    set fields(fields) {\r\n        this._fields = fields;\r\n    }\r\n\r\n    get fields() {\r\n        return this._fields;\r\n    }\r\n\r\n    set limit(limit) {\r\n        this._limit = limit;\r\n    }\r\n\r\n    get limit() {\r\n        return this._limit;\r\n    }\r\n\r\n    set sort(sort) {\r\n        this._sort = sort;\r\n    }\r\n\r\n    get sort() {\r\n        return this._sort;\r\n    }\r\n\r\n    set page(page) {\r\n        this._page = page;\r\n    }\r\n\r\n    get page() {\r\n        return this._page;\r\n    }\r\n\r\n    set groups(groups) {\r\n        this._groups = groups;\r\n    }\r\n\r\n    get groups() {\r\n        return this._groups;\r\n    }\r\n\r\n    set children(children) {\r\n        this._children = children;\r\n    }\r\n\r\n    get children() {\r\n        return this._children;\r\n    }\r\n\r\n    get primary() {\r\n        return this._primary;\r\n    }\r\n\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n\r\n    get active() {\r\n        return this._active;\r\n    }\r\n\r\n    set active(active) {\r\n        this._active = active;\r\n    }\r\n\r\n    get max_pages() {\r\n        return this._max_pages;\r\n    }\r\n\r\n    set max_pages(pages) {\r\n        this._max_pages = pages;\r\n    }\r\n\r\n    convertToParams() {\r\n        let obj = {};\r\n        if (this._limit) obj._limit = this._limit;\r\n        if (this._page) obj._page = this._page;\r\n        if (this._fields.length > 0) obj._fields = this._fields;\r\n        if (Object.keys(this._sort).length > 0) obj._sort = this._sort;\r\n        for(let i in this._cells) {\r\n            let param = this._cells[i].toVal();\r\n            if (param) obj[i] = param;\r\n        }\r\n        return JSON.stringify(obj);\r\n    }\r\n\r\n    convertDataToParams() {\r\n        let obj = {};\r\n        for(let i in this._cells) {\r\n            obj[i] = this._cells[i].toVal();\r\n        }\r\n        return (Object.keys(obj).length > 0) ? JSON.stringify(obj) : null;\r\n    }\r\n\r\n\r\n    convertFromParams(str) {\r\n        const obj = JSON.parse(str);\r\n        if (obj._limit) this._limit = obj._limit;\r\n        if (obj._fields) this._fields = obj._fields;\r\n        if (obj.hasOwnProperty(\"_page\")) this._page = obj._page;\r\n        if (obj.hasOwnProperty(\"_sort\")) this._sort = obj._sort;\r\n        for(const i in this._cells) {\r\n            if (obj.hasOwnProperty(i)) this._cells[i].setVal(obj[i]);\r\n        }\r\n    }\r\n\r\n    convertToAPIParams(state) {\r\n        let obj = {};\r\n        if (this._limit) obj.__limit = this._limit;\r\n        if (this._page) obj.__page = (this._page * this._limit);\r\n        if (this._fields.length > 0) obj.__fields = this._fields;\r\n        if (Object.keys(this._sort).length > 0) obj.__sort = this._sort;\r\n        for(let i in this._cells) {\r\n            this._cells[i].addParam(obj);\r\n        }\r\n\r\n        if (state == \"get\" || state == \"post\") {\r\n            if (this._parent && this._parent.toVal()) obj[this._parent.meta.name] = this._parent.toVal();\r\n        } else if (state != \"login\") {\r\n            obj[this._primary.meta.name] = this._primary.toVal();\r\n        }\r\n        return (Object.keys(obj).length) ? obj : null;\r\n    }\r\n}","const error_invalid_map = {\r\n            1 : \"too small\",\r\n            2 : \"too large\",\r\n            3 : \"contains incorrect characters\",\r\n            4 : \"doesn't contain required characters\",\r\n            5 : \"not unique\"\r\n}\r\n\r\nfunction getError(code) {\r\n    return error_invalid_map[code];\r\n}\r\n\r\nexport default {\r\n    getError\r\n}","export class Validator {\r\n\r\n    constructor() {\r\n        this._min;\r\n        this._max;\r\n        this._has = [];\r\n        this._has_not = [];\r\n        this._errors = {\r\n            'OK' : 0,\r\n            'MIN_VALUE' : 1,\r\n            'MAX_VALUE' : 2,\r\n            'HAS' : 3,\r\n            'HAS_NOT' : 4\r\n        }\r\n    }\r\n\r\n    set min(min) {\r\n        this._min = min;\r\n    }\r\n\r\n    set max(max) {\r\n        this._max = max;\r\n    }\r\n\r\n    set has(has) {\r\n        this._has.push(has);\r\n    }\r\n\r\n    set nothas(nhas) {\r\n        this._has_not.push(nhas);\r\n    }\r\n\r\n\r\n    validateSize(val) {\r\n        if (val < this._min) return this._errors.MIN_VALUE;\r\n        else if (val > this._max) return this._errors.MAX_VALUE;\r\n        else return this._errors.OK;\r\n    }\r\n\r\n\r\n    validate(val) {\r\n        let err;\r\n        if (isNaN(val)) {\r\n            const length = (val) ? val.length : 0;\r\n            err = this.validateSize(length);\r\n        } else {\r\n            err = this.validateSize(val);\r\n        }\r\n        if (err != this._errors.OK) return err;\r\n\r\n        for(let nhas of this._has_not) {\r\n            if (val.match(nhas)) return this._errors.HAS_NOT;\r\n        }\r\n\r\n        if (this._has.length == 0) return this._errors.OK;\r\n        \r\n        for(let has of this._has) {\r\n            if (val.match(this._has)) return this._errors.OK;\r\n        }\r\n        return this._errors.HAS;\r\n    }\r\n\r\n}","\r\nimport Errors from \"./error.js\"\r\nimport { reactive, computed } from \"vue\"\r\nimport Client from \"./client.js\"\r\nimport { Validator } from \"./validator.js\"\r\n\r\nexport class Field {\r\n\r\n    constructor(name, obj = null) {\r\n        this._name = name;\r\n        this._type = \"\";\r\n        this._is_primary = false;\r\n        this._is_parent = false;\r\n        this._valid = 1;\r\n        this._atts={}\r\n        this._confirm = false;\r\n        this._readonly = false;\r\n        this._placeholder = \"\";\r\n        this._conditions;\r\n        this._link = \"\";\r\n        this._reference = \"\";\r\n        this._error = 0;\r\n        this._label = \"\";\r\n        this._on = true;\r\n        this._store = reactive({ summary : 0, options : null});\r\n        this._default = null;\r\n        this._validator = new Validator();\r\n        this._multiple = false;\r\n      \r\n      \r\n        this.summary = computed({\r\n            get : () => {\r\n                return this._store.summary;\r\n            },\r\n            set : (val) => {\r\n                this._store.summary = val;\r\n            }\r\n        })\r\n\r\n        this.options = computed({\r\n            get : () => {\r\n                return this._store.options;\r\n            },\r\n            set : (options) => {\r\n                this._store.options = options;\r\n            }\r\n        });\r\n\r\n       \r\n        if (obj) {\r\n            for (let x in obj) {\r\n                if (x == \"summary\") this._store.summary = obj[x];\r\n                else if (x == \"field\" || x == \"validation\") continue;\r\n                else this[x] = obj[x];\r\n            }\r\n\r\n            if (obj.field) {\r\n                for(let x in obj.field) {\r\n                    if (x == \"summary\") this._store.summary = obj.field[x];\r\n                    else this[x] = obj.field[x];\r\n                }\r\n            }\r\n\r\n            if (obj.validation) {\r\n                for(let x in obj.validation) {\r\n                    this._validator[x] = obj.validation[x];\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    set confirm(confirm) {\r\n        this._confirm = confirm;\r\n    }\r\n\r\n    set readonly(readonly) {\r\n        this._readonly = readonly;\r\n    }\r\n\r\n    set placeholder(placeholder) {\r\n        this._placeholder = placeholder;\r\n    }\r\n\r\n    set atts(atts) {\r\n        this._atts = atts;\r\n    }\r\n\r\n    set default(def) {\r\n        this._default = def;\r\n    }\r\n\r\n    set asset(asset) {\r\n        this._asset = asset;\r\n    }\r\n\r\n\r\n    set conditions(conditions) {\r\n        this._conditions = conditions;\r\n    }\r\n\r\n    set link(link) {\r\n        this._link = link;\r\n    }\r\n\r\n    set name(name) {\r\n        this._name = name;\r\n    }\r\n\r\n    set type(type) {\r\n        this._type = type;\r\n    }\r\n\r\n    set multiple(mult) {\r\n        this._multiple = mult;\r\n    }\r\n\r\n    set is_primary(val) {\r\n        this._is_primary = val;\r\n    }\r\n\r\n    set is_parent(val) {\r\n        this._is_parent = val;\r\n    }\r\n\r\n    set reference(ref) {\r\n        this._reference = ref;\r\n    }\r\n\r\n    set error(err) {\r\n        this._error = err;\r\n    }\r\n\r\n    set label(label) {\r\n        this._label = label;\r\n    }\r\n\r\n    \r\n    set on(on) {\r\n        this._on = on;\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    \r\n\r\n    get on() {\r\n        return this._on;\r\n    }\r\n\r\n\r\n    get isprimary() {\r\n        return this._is_primary;\r\n    }\r\n\r\n    get required() {\r\n        return (this._min > 0) ? true : false;\r\n    }\r\n\r\n    get readonly() {\r\n        return this._readonly;\r\n    }\r\n\r\n    get placeholder() {\r\n        return this._placeholder;\r\n    }\r\n\r\n    get default() {\r\n        return this._default;\r\n    }\r\n\r\n    get atts() {\r\n        return this._atts;\r\n    }\r\n\r\n    get conditions() {\r\n        return this._conditions;\r\n    }\r\n\r\n    get link() {\r\n        return this._link;\r\n    }\r\n\r\n    get isparent() {\r\n        return this._is_parent\r\n    }\r\n\r\n    get multiple() {\r\n        return this._multiple;\r\n    }\r\n    \r\n    get confirm() {\r\n        return this._confirm;\r\n    }\r\n\r\n    get reference() {\r\n        return this._reference;\r\n    }\r\n\r\n    get asset() {\r\n        return this._asset;\r\n    }\r\n\r\n    get error() {\r\n        if (!this._error) return \"\";\r\n        else if (isNaN(this._error)) return this._error;\r\n        else return Errors.getError(this._error);\r\n    }\r\n\r\n\r\n    get label() {\r\n        return this._label;\r\n    }\r\n\r\n    isSummary() {\r\n        return this._store.summary;\r\n    }\r\n\r\n\r\n    saveAsset(id) {\r\n        if (this._asset) {\r\n            let file = this.val;\r\n            if (file) return this._asset.saveFile(this.val, id);\r\n        } \r\n        return Promise.resolve();\r\n    }\r\n\r\n\r\n    setOptions(params) {\r\n        this._store.options = [];\r\n        if (this._reference) {\r\n            Client.get(this._reference, params)\r\n                .then(response => {\r\n                    for (let i in response.__data) {\r\n                        if (i.indexOf(\"__\") === 0) continue;\r\n                        this._store.options.push({ key: response.__data[i].id, value: response.__data[i].value });\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                });\r\n        } else {\r\n            try {\r\n                for (let opt of this._atts.options) {\r\n                    this._store.options.push({ key: opt, value: opt });\r\n                }\r\n            } catch (e) {\r\n                console.log(\"options not set for \", this._name);\r\n            }\r\n        }\r\n    }\r\n\r\n    clean(val) {\r\n        return (this._type == \"checkbox\") ? Boolean(val) : val;\r\n    }\r\n\r\n    validate(value) {\r\n        return this._validator.validate(value);\r\n    }\r\n\r\n    exp() {\r\n        return {\r\n            name : this._name,\r\n            type : this._type,\r\n            atts : this._atts\r\n        }\r\n    }\r\n\r\n    calcValue(value) {\r\n        if (!value) return \"\";\r\n        else return value;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","\r\nimport Client from \"./client.js\"\r\n\r\nexport class Asset {\r\n\r\n    constructor() {\r\n      this._size = 0;\r\n      this._blob = null;\r\n      this._uploaded = false;\r\n      this._chunk_size = 0;\r\n      this._url;\r\n      this._key = 0;\r\n      this._key_field;\r\n    }\r\n\r\n    set chunk_size(chunk) {\r\n      this._chunk_size = chunk;\r\n    }\r\n\r\n    set blob(blob) {\r\n      this._blob = blob;\r\n    }\r\n\r\n    set url(url) {\r\n        this._url = url;\r\n    }\r\n\r\n    set key(key) {\r\n        this._key = key;\r\n    }\r\n\r\n    set keyfield(field) {\r\n        this._key_field = field;\r\n    }\r\n\r\n    get blob() {\r\n      return this._blob;\r\n    }\r\n\r\n    get size() {\r\n      return this._size;\r\n    }\r\n\r\n    get uploaded() {\r\n      return this._uploaded;\r\n    }\r\n\r\n    get chunk_size() {\r\n      return this._chunk_size;\r\n    }\r\n\r\n\r\n    get url() {\r\n        return this._url;\r\n    }\r\n\r\n\r\n    getChunk(index) {\r\n      const start = (this._chunk_size == 0) ? 0 : index * this._chunk_size;\r\n      let end = (this._chunk_size == 0) ? this._size : (index + 1) * this._chunk_size;\r\n      if (end > this._size) end = this._size;\r\n      const view = new DataView(this._blob, start, end - start);\r\n      let buffer = [];\r\n      for(let i = 0, n=view.byteLength; i<n; ++i) {\r\n        buffer.push(view.getInt8(i));\r\n      }\r\n      return buffer.join('');\r\n    }\r\n\r\n\r\n    loadFile(id) {\r\n        let data = {};\r\n        data[this._key_field] = id;\r\n        return Client.get(this._url, data)\r\n        .catch(e => {\r\n            alert(e);\r\n        });\r\n    }\r\n\r\n    delFile(id) {\r\n        let data = {};\r\n        data[this._key_field] = id;\r\n        return Client.delete(this._url, data)\r\n        .catch(e => {\r\n            alert(e);\r\n        });\r\n    }\r\n\r\n    saveFile(file, id) {\r\n        //this needs to be a promise\r\n        this._size = file.size;\r\n        return new Promise(( resolve, reject) => {\r\n          const fr = new FileReader();\r\n          let _self = this;\r\n          fr.onload = function(e) {\r\n            _self.blob = e.target.result;\r\n            resolve(fr.result);\r\n          }\r\n          fr.onerror = reject;\r\n          fr.readAsArrayBuffer(file);  \r\n        })\r\n        .then(() => {\r\n          let promises = [];\r\n          //else, do we have any assets?\r\n          let chunks = (this.chunk_size == 0) ? 1 : Math.ceil(this.size / this.chunk_size);\r\n          for(let i=0; i<chunks; ++i) {\r\n              const data = {};\r\n              data.__chunk = i;\r\n              data.__blob = this.getChunk(i);\r\n              data.id = id;\r\n              promises.push(Client.put(this._url, data));\r\n          }\r\n          return Promise.all(promises);\r\n        });\r\n      }\r\n\r\n}","import { Field } from \"./field.js\"\r\nimport { Asset } from \"./asset.js\"\r\n\r\nexport class MetaRow {\r\n\r\n    constructor() {\r\n        this._fields = {};\r\n        this._parent;\r\n        this._primary;\r\n        this._references = {};\r\n        this._children = {};\r\n    }\r\n\r\n    set field(field) {\r\n        this._fields[field.name] = field;\r\n    }\r\n\r\n    get fields() {\r\n        return this._fields;\r\n    }\r\n\r\n    addReference(name, ref) {\r\n        this._references[name] = ref;\r\n    }\r\n\r\n    addChild(name, child) {\r\n        this._children[name] = child;\r\n    }\r\n\r\n    get references() {\r\n        return this._references;\r\n    }\r\n\r\n    get children() {\r\n        return this._children;\r\n    }\r\n\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n\r\n    get primary() {\r\n        return this._primary;\r\n    }\r\n\r\n    map(fields) {\r\n        for (let i in fields) {\r\n            if (fields[i].is_primary) this._primary = new Field(i, fields[i]);\r\n            else if (fields[i].is_parent) this._parent = new Field(i, fields[i]);\r\n            else {\r\n                this._fields[i] = new Field(i, fields[i]);\r\n                if (this._fields[i].type == \"asset\") {\r\n                    let asset = new Asset();\r\n                    asset.url = this._model + \"-\" + i;\r\n                    this._fields[i].asset = asset;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._primary) {\r\n            for(let i in this._fields) {\r\n                if (this._fields[i].type == \"asset\") {\r\n                    this._fields[i].asset.keyfield = this._primary.name;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    exportFields(state, store) {\r\n        let cfields = this._states[state].fields;\r\n        store.fields = [];\r\n        for(let i in cfields) {\r\n            if (this._limit_fields.length == 0 || this._limit_fields.contains(i)) {\r\n                store.fields.push(cfields[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    exportToStore(store) {\r\n       store.fields = this._fields;\r\n    }\r\n}","let _ctarget = {\r\n    orig : 0,\r\n    target : 0,\r\n    state : null,\r\n    key : null,\r\n    to : null,\r\n    model: null,\r\n    end : null,\r\n    param_str : {}\r\n}\r\n\r\nfunction resetIntention() {\r\n    for(let i in _ctarget) {\r\n        _ctarget[i] = null;\r\n    }\r\n}\r\n\r\nfunction updateIntention(orig, vals) {\r\n    resetIntention();\r\n    _ctarget.orig = parseInt(orig);\r\n\r\n    for(let i in vals) {\r\n        _ctarget[i] = vals[i];\r\n    }\r\n}\r\n\r\nfunction convertMaps(omaps) {\r\n    let ni = _ctarget.orig + _ctarget.target;\r\n    if (ni < 0) omaps.unshift({ ...omaps[i] });\r\n    else if (ni >= omaps.length) omaps.push({ ... omaps[omaps.length - 1]});\r\n\r\n    for(let i in _ctarget) {\r\n        if (_ctarget[i] !== null) {\r\n            if (i == \"_end\") omaps.splice(ni + 1, omaps.length);\r\n            else omaps[ni][i] = _ctarget[i];\r\n        }\r\n    }\r\n}\r\n\r\nexport default {\r\n    updateIntention,\r\n    convertMaps\r\n}\r\n","import { DataRow } from \"./datarow.js\"\r\nimport { DataTemplate } from \"./datatemplate.js\"\r\nimport { MetaRow } from \"./metarow.js\"\r\nimport ChangeAction from \"./changeaction.js\"\r\nimport client from \"./client.js\"\r\nimport { Field } from \"./field.js\"\r\nimport { reactive } from \"vue\"\r\nimport { Asset } from \"./asset.js\"\r\n\r\nexport class ModelInstance {\r\n    constructor(stage) {\r\n        this._label = '';\r\n        this._title = '';\r\n        this._component = '';\r\n        this._rawcomponent = '';\r\n        this._actions = [];\r\n        this._next = null;\r\n        this._index = 0;\r\n        this._primary_key_name = \"\";\r\n        this._parent_key_name = \"\";\r\n        this._circular = '';\r\n        this._model= \"\";\r\n        this._siblings = [];\r\n        this._children = [];\r\n        this._groups = [];\r\n        this._classes= \"\";\r\n        this._states = {};\r\n        this._default_state = \"\";\r\n        this._settings = {};\r\n        this._limit_fields = [];\r\n        this._meta_row = new MetaRow();\r\n        this._data_template = null;\r\n        this._data = null;\r\n        this._indexes = null;\r\n        this._stage = stage;\r\n        this._states;\r\n        this._primary_field;\r\n        this._to;\r\n        this._store = reactive({});\r\n    }\r\n\r\n    get currentstate() {\r\n        return (this._active_state) ? this._active_state : this._default_state;\r\n    }\r\n\r\n\r\n    get fields() {\r\n        return this._fields;\r\n    }\r\n\r\n    get default_state() {\r\n        return this._default_state;\r\n    }\r\n\r\n    get classes() {\r\n        return this._name.replace(\"_\", \"-\") + \" \" + this._state;\r\n    }\r\n\r\n    set to(to) {\r\n        this._to = to;\r\n    }\r\n\r\n    applySettings(settings) {\r\n        this._settings = settings;\r\n    }\r\n\r\n\r\n    \r\n    snakeCase(name) {\r\n        return name.replace(\"-\", \"_\");\r\n    }\r\n\r\n\r\n    buildMetaRow(response, state) {\r\n        this._meta_row = new MetaRow();\r\n\r\n        let cfields = response.states[state].fields;\r\n        if (!cfields) {\r\n            cfields = response.fields;\r\n        } else {\r\n            let use_fields = {};\r\n            for(let field of cfields) {\r\n                use_fields[field] = response.fields[field];\r\n            }\r\n            cfields = use_fields;\r\n        }\r\n        this._meta_row.map(cfields);\r\n\r\n        for(let field in response.fields) {\r\n            if (response.fields[field].is_primary) this._primary_field = new Field(response.fields[field]);\r\n        }\r\n\r\n        let par = response.to;\r\n        while(par) {\r\n            let p_meta = new MetaRow();\r\n            p_meta.map(par.fields);\r\n            this._meta_row.addReference(par.model, p_meta);\r\n            par = par.to;\r\n        }\r\n    }\r\n\r\n\r\n    initState(response, state) {\r\n        if (!state) state = response.default_state;\r\n        this._model = response.model;\r\n        this._primary_key_name = response.primarykey;\r\n        this._parent_key_name = response.parentkey;\r\n        this._children = response.children;\r\n        this._siblings = response.siblings;\r\n        this._circular = response.circular;\r\n        this._states = response.states;\r\n        this._default_state = response.default_state;\r\n        this.buildMetaRow(response, state);\r\n        this._children = response.children;\r\n        this._siblings = response.siblings;\r\n        this._states = response.states;\r\n    }\r\n\r\n\r\n    loadURL(state) {\r\n        let url = \"/\" + this._model;\r\n        if (state == \"getprimary\" ||  state == \"put\") url += \"-primary\";\r\n        return url;\r\n    }\r\n\r\n    saveURL() {\r\n        let url = \"/\" + this._model;\r\n        return url;\r\n    }\r\n\r\n    initDataTemplate(map) {\r\n        this._to = map.to;\r\n        this._data_template = new DataTemplate(this._meta_row);\r\n\r\n        if (map.state == \"get\" || map.state == \"post\") {\r\n            if (map.key) this._data_template.parent.setVal(map.key);\r\n        } else if (map.state != \"login\") {\r\n            this._data_template.primary.setVal(map.key);\r\n        }\r\n    \r\n        if (map.param_str) {\r\n            this._data_template.convertFromParams(map.param_str);\r\n        }\r\n    \r\n        if (this._settings.groups) {\r\n            this._data_template.groups = this._settings.groups;\r\n        }\r\n\r\n        if (this._settings.limit) {\r\n            this._data_template.limit = this._settings.limit;\r\n        }\r\n    \r\n    \r\n        if (map.state == \"post\" || map.state == \"put\") {\r\n            for(let name in this._meta_row.fields) {\r\n                if (this._meta_row.fields[name].type == \"select\") {\r\n                    let params = {};\r\n                    params[this._meta_primary_key_name] = this._key;\r\n                    this._meta_row.fields[name].setOptions(params);\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    load(state) {\r\n        if (state == \"get\") {\r\n            let params = this._data_template.convertToAPIParams(state);\r\n            if (this._to) params.__to = this._to;\r\n\r\n            if (this._data_template.limit > 0) {\r\n                return client.get(this.loadURL(\"get\") + \"-count\", params)\r\n                .then(response => {\r\n                    this._data_template.max_pages = Math.ceil(response.count / this._data_template.limit);\r\n                })\r\n                .then(() => {\r\n                    return client.get(this.loadURL(\"get\"), params);\r\n                })\r\n                .then(response => {\r\n                    if (response.__status != \"SUCCESS\") throw new Error(response);\r\n                    this._data = [];\r\n                    this.mapRepoData(response);\r\n                    return response;\r\n                });\r\n            } else {\r\n                return client.get(this.loadURL(\"get\"), params)\r\n                .then(response => {\r\n                    if (response.__status != \"SUCCESS\") throw new Error(response);\r\n                    this._data = [];\r\n                    this.mapRepoData(response);\r\n                    return response;\r\n                });\r\n           \r\n            }\r\n\r\n        } else if (state == \"getprimary\" ||state == \"put\") {\r\n            let params = this._data_template.convertToAPIParams(state);\r\n            if(this._to) params.__to = this._to;\r\n            return client.get(this.loadURL(state), params)\r\n            .then(response => {\r\n                if (response.__status != \"SUCCESS\") throw new Error(response);\r\n                    this._data = {};\r\n                    this.mapData(response);\r\n            });\r\n        } else if (state == \"post\") {\r\n            this._data = new DataRow(this._meta_row);\r\n            if (this._data_template.parent) this._data.parent.setVal(this._data_template.parent.toVal());\r\n        } else {\r\n            this._data = new DataRow(this._meta_row);\r\n            \r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n\r\n    reload() {\r\n        let params = this._data_template.convertToAPIParams(\"get\");\r\n        if (this._to) params.__to = this._to;\r\n        return client.get(this.loadURL(\"get\"), params)\r\n        .then(response => {\r\n            if (response.__status != \"SUCCESS\") throw new Error(response);\r\n            this._data = [];\r\n            this.mapRepoData(response);\r\n            return response;\r\n        })\r\n        .then(() => this._store.data = this._data);\r\n    }\r\n\r\n\r\n    rLoadObj(data) {\r\n        let obj= new DataRow(this._meta_row);\r\n        obj.row = data;\r\n\r\n        if (this._circular && data[this._model]) {\r\n            if (data[this._model]) {\r\n                for(const i in data[this._model]) {\r\n                    obj.addChild(this._model, this.rLoadObj(data[this._model][i]));\r\n                }\r\n            }\r\n        }\r\n\r\n        for(const i in this._active_children) {\r\n            const name = this._active_children[i];\r\n            if (data[name]) {\r\n                for(const x in data[name]) {\r\n                    obj.addChild(name, this.rLoadObj(data[name][x]));\r\n                }\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    indexData(data) {\r\n        let indexes = {};\r\n        for(const key in data) {\r\n            const row = data[key];\r\n            for(let group of this._data_template.groups) {\r\n                group = this.snakeCase(group);\r\n                if (!indexes[group]) indexes[group] = {};\r\n                let ckey = row.getCell(group).toVal();\r\n                if (!indexes[group][ckey]) {\r\n                    indexes[group][ckey] = {\"display\": \"\", \"contains\":[]};\r\n                    indexes[group][ckey].display= row.getCell(group).display;\r\n                }\r\n                indexes[group][ckey].contains.push(key);\r\n            }\r\n        }\r\n        return indexes;\r\n    }\r\n\r\n\r\n    submit(state) {\r\n        let data = this._data.serialize(state);\r\n        return client[state](this.saveURL(), data)\r\n        .then(request=>{\r\n            if (request.__status!= \"SUCCESS\") {\r\n                throw { message : request.statusText }\r\n            }\r\n            if (state == \"post\") {\r\n                this._store.data.primary.setVal(request[this._store.data.primary.meta.name]);\r\n            }\r\n        })\r\n        .then(() => {\r\n            let promises = [];\r\n            let assets = this._store.data.getCellByType(\"asset\");\r\n            this._store.progress.total = 0;\r\n            for(let i in assets) {\r\n                const val = assets[i].toVal();\r\n                if (!val) continue;\r\n                ++this._store.progress.total;\r\n                const asset = new Asset();\r\n                asset.url = this.saveURL() + \"-\" + i;\r\n                let promise = asset.saveFile(assets[i].toVal(), this._store.data.primary.toVal())\r\n                .then(() => {\r\n                    ++this._store.progress.progress;\r\n                });\r\n                promises.push(promise);\r\n            }\r\n            return Promise.all(promises);\r\n        });\r\n    }\r\n\r\n    mapRepoData(response) {\r\n        this._data = [];\r\n        for (const i in response.__data) {\r\n            const data = this.rLoadObj(response.__data[i]);\r\n            this._data.push(data);\r\n        }\r\n\r\n        \r\n        //now we need to group the data by\r\n        if (this._data_template.groups.length > 0) this._indexes = this.indexData(this._data);\r\n    }\r\n\r\n    mapData(data) {\r\n        this._data = new DataRow(this._meta_row);\r\n        this._data.row = data;\r\n    }\r\n\r\n\r\n    buildLink = (intention) => {\r\n        return key => {\r\n            if (key) intention.key = key;\r\n            for(let setting in this._change_settings) {\r\n                intention[setting] = this._change_settings[setting];\r\n            }\r\n            ChangeAction.updateIntention(this._stage, intention);\r\n        }\r\n    }\r\n\r\n    \r\n    exportToStore(state) {\r\n        this._store.actions = [];\r\n        this._store.stage = this._stage;\r\n        this._store.component = \"\";\r\n        this._store.rawcomponent = \"\";\r\n        this._store.title = this._states[state].title;\r\n        this._store.label = this._states[state].label;\r\n        this._store.action = state;\r\n        this._store.method = this._store.action;\r\n        this._store.submiturl = this.saveurl;\r\n        this._store.model = this._model;\r\n        this._store.classes = this._model + \" \" + state;\r\n        this._store.groups = this._data_template.groups;\r\n        if (!this._store.settings) this._store.settings = {};\r\n\r\n        if (this._settings.disable_filter) {\r\n            this._store.disable_filter = true;\r\n        }\r\n\r\n        if (this._settings.disable_selectfields) {\r\n            this._store.disable_selectfields = true;\r\n        }\r\n       \r\n        let states = {\r\n            'get': () => {\r\n                this._store.rawcomponent = (this._data_template.groups.length > 0) ? \"ptj-list\" : (this._circular || this._data_template.children.length > 0) ? \"ptj-tree\" : \"ptj-table\";\r\n                this._store.component = \"ptj-repo\";\r\n                this._store.index = this._model + \"-get\";\r\n                this._store.submiturl = this.loadurl;\r\n                this._store.reload = () => { \r\n                    this.buildLink({ param_str : this._data_template.convertToParams()})();\r\n                    this.reload();\r\n                };\r\n                if (this._states.post) {\r\n                    this._store.actions.push({ r: this.buildLink({ \"state\" : \"post\"}), n: this._states.get.actions.post });\r\n                }\r\n\r\n\r\n                if (this._states.getprimary) {\r\n                    this._store.next = this.buildLink({ param_str : \"\", state : \"getprimary\"});\r\n                } else if (this._states.put) {\r\n                    this._store.next = this.buildLink({ param_str : \"\", state : \"put\"});\r\n                }\r\n\r\n                this._store.siblings = [];\r\n                for (let sibling of this._siblings) {\r\n                    this._store.siblings.push({\r\n                        r: this.buildLink({ model : sibling.name, param_str : \"\"}), \r\n                        n: sibling.label\r\n                    });\r\n                }\r\n\r\n                if (this._data_template.limit > 0) {\r\n                    this._store.setPage = (page) => {\r\n                        this._store.data_template.page = page;\r\n                        this.buildLink({ param_str : this._data_template.convertToParams()})();\r\n                        this.reload();\r\n                    }\r\n                }\r\n            },\r\n            'getprimary': () => {\r\n                this._store.component = \"ptj-single-item\";\r\n                this._store.actions = [];\r\n                this._store.index = this._model + \"-getprimary\";\r\n                if (this._states.put) {\r\n                    this._store.actions.push({ \r\n                        r: this.buildLink({ state : \"put\"}), \r\n                        n: this._states.getprimary.actions.put \r\n                    });\r\n                }\r\n                if (this._states.delete) {\r\n                    this._store.actions.push({\r\n                        r: async () => {\r\n                            if (confirm(\"Are you sure you want to delete this record and all associated children?\")) {\r\n                                let data = {};\r\n                                data[this._primary_key] = this._store.key_states.primary_key;\r\n                                await client.delete(\"/\" + this._name, data);\r\n                                this.buildLink({ state : \"get\", key : this._store.key_states.parent_key});\r\n                            }\r\n                        }, n: this._states.getprimary.actions.delete\r\n                    });\r\n                }\r\n\r\n                this._store.children = [];\r\n                for (let child of this._children) {\r\n                    this._store.children.push({\r\n                        r: this.buildLink({ state : \"get\", model : child.name }), \r\n                        n: child.label\r\n                    });\r\n                }\r\n            },\r\n            'post': () => {\r\n                this._store.component = (this._states.login) ? \"ptj-account-handler\" : \"ptj-form\";\r\n                this._store.index = this._model + \"-post\";\r\n                this._store.progress = {total : 0, progress : 0};\r\n                this._store.actions = [];\r\n                if (this._states.login) {\r\n                    this._store.actions.push({r : this.buildLink({ state : \"login\"}), n: this._states.post.actions.login });\r\n                }\r\n\r\n                this._store.next = response => {\r\n                    this.buildLink({ state : \"getprimary\", key : response[this._primary_key_name]})();\r\n                }\r\n\r\n                this._store.createPrimaryKey = response => {\r\n                    this._store.data.appendPrimary(this._primary_field);\r\n                    this._store.data.primary.setVal(response[this._primary_field.name]);\r\n                }\r\n\r\n                this._store.submit = () => {\r\n                    return this.submit(\"post\");\r\n                }\r\n            },\r\n            'put': () => {\r\n                this._store.component = \"ptj-form\";\r\n                this._store.progress = {total : 0, progress : 0};\r\n                this._store.index = this._model + \"-put\";\r\n                this._store.actions = [];\r\n                if (this._states.getprimary) this._store.next = this.buildLink({ state : \"getprimary\"});\r\n                else this._store.next = this.buildLink({ state : \"get\", key : this._keys.parent_key});\r\n            \r\n                this._store.submit = () => {\r\n                    return this.submit(\"put\");\r\n                }\r\n            },\r\n            'login': () => {\r\n                this._store.component = \"ptj-account-handler\";\r\n                this._store.index = this._model + \"-login\";\r\n                this._store.method = \"post\";\r\n                this._store.submiturl += \"-login\";\r\n                this._store.actions = [];\r\n                if (this._states.post) {\r\n                    this._store.actions.push({ r: this.buildLink({ state : \"post\"}), n: this._states.login.actions.post });\r\n                }\r\n                this._store.next = null;\r\n            }\r\n        }\r\n\r\n        states[state]();\r\n\r\n        this._store.data = this._data;\r\n        this._store.indexes = this._indexes;\r\n        this._store.data_template = this._data_template;\r\n        this._meta_row.exportToStore(this._store);\r\n        return this._store;\r\n    }\r\n\r\n}\r\n","import client from \"./client.js\"\r\n\r\nimport { reactive } from \"vue\"\r\nimport { ModelInstance } from \"./modelinstance.js\";\r\n\r\n\r\nexport class Model {\r\n    constructor(stage) {\r\n        this._settings = {};\r\n        this._map;\r\n        this._previous_map;\r\n        this._response;\r\n        this._instance;\r\n        this._stage = stage;\r\n        this.store = reactive({\r\n            stage : stage\r\n        });\r\n    }\r\n\r\n    \r\n    get map() {\r\n        return this._map;\r\n    }\r\n\r\n    set map(map) {\r\n        this._previous_map = { ...this._map };\r\n        if (Object.keys(this._previous_map).length == 0) this._previous_map = null;\r\n        this._map = map.copy();\r\n    }\r\n\r\n    get stage() {\r\n        return this.store.stage;\r\n    }\r\n\r\n  \r\n\r\n\r\n    injectCustomSettings(settings) {\r\n        this._settings = settings;\r\n    }\r\n\r\n   \r\n    initModel(map, pmap) {\r\n        if (!pmap || pmap.model != map.model) {\r\n            pmap = null; //can clear so everything else happens\r\n            let url = (!map.model) ? \"/route-core-default\" : \"/route-\" + map.model;\r\n            let data = {};\r\n            if (map.to) data.__to = map.to;\r\n            return client.get(url, data)\r\n            .then(response => {\r\n                if (response.__status != \"SUCCESS\") {\r\n                    throw new Error(response);\r\n                }\r\n                this._response = response;\r\n                if (!map.state) map.state = this._response.default_state;\r\n                this._instance = new ModelInstance(this.store.stage);\r\n                if (this._settings && this._settings[map.state]) {\r\n                    this._instance.applySettings(this._settings[map.state]);\r\n                }\r\n            });\r\n\r\n        } else {\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n\r\n    init() {\r\n        return this.initModel(this._map, this._previous_map)\r\n        .then(() => {\r\n            if (!this._previous_map || this._previous_map.state != this._map.state) {\r\n                this._instance.initState(this._response, this._map.state);\r\n                this._previous_map = null;\r\n            }\r\n        })\r\n        .then(() => {\r\n            if (!this._previous_map || this._previous_map.key != this._map.key || this._previous_map.param_str != this._map.param_str) {\r\n                this._instance.initDataTemplate(this._map);\r\n                this._previous_map = null;\r\n            }\r\n        })\r\n        .then(() => {\r\n            if (this._previous_map) {\r\n                if (this._previous_map.to != this._map.to) {\r\n                    this._instance.to = this._map.to;\r\n                    this._previous_map = null;\r\n                }\r\n            }\r\n        })\r\n        .then(() => {\r\n            if (!this._previous_map) return this._instance.load(this._map.state);\r\n        })\r\n    }\r\n    \r\n\r\n\r\n   \r\n    exportToStore() {\r\n        return this._instance.exportToStore(this.map.state);\r\n    }\r\n}","const action_map = {\r\n    'post' : '-create',\r\n    'put' : '-update',\r\n    'delete' : '-delete',\r\n    'login' : '-login',\r\n    'logout' : '-logout',\r\n    'getprimary' : '-primary',\r\n    'get' : ''\r\n};\r\n\r\nclass CtrlGroupMap {\r\n\r\n    constructor() {\r\n        this._model;\r\n        this._state = \"\";\r\n        this._key = 0;\r\n        this._to;\r\n        this._param_str;\r\n    }\r\n\r\n    set model(model) {\r\n        this._model = model;\r\n    }\r\n\r\n    get model() {\r\n        return this._model;\r\n    }\r\n\r\n    set state(state) {\r\n        this._state = state;\r\n    }\r\n    \r\n    get state() {\r\n        return this._state;\r\n    }\r\n\r\n    set key(key) {\r\n        this._key = key;\r\n    }\r\n\r\n    get key() {\r\n        return this._key;\r\n    }\r\n\r\n    set to(to) {\r\n        this._to = to;\r\n    }\r\n\r\n    get to() {\r\n        return this._to;\r\n    }\r\n\r\n    set param_str(str) {\r\n        this._param_str = str;\r\n    } \r\n\r\n    get param_str() {\r\n        return this._param_str;\r\n    }\r\n\r\n    copy() {\r\n        return {\r\n            model : this._model,\r\n            state : this._state,\r\n            key : this._key,\r\n            to : this._to,\r\n            param_str : this._param_str\r\n        }\r\n    }\r\n\r\n\r\n    convertToURL() {\r\n        let model = this._model;\r\n        let state = this._state;\r\n        let key = this._key;\r\n        let to = this._to;\r\n\r\n        let url = model + action_map[state];\r\n        if (key) url += \"-\" + key;\r\n        if (to) url += \"-to-\" + to;\r\n        return url;\r\n    }\r\n\r\n    convertFromURL(url) {\r\n        if (!url) return;\r\n        let parts = url.split(\"-to-\");\r\n        if (parts.length > 1) {\r\n            this._to = parts[1];\r\n            url = parts[0];\r\n        }\r\n        parts = url.split(\"-\");\r\n        let key = parseInt(parts[parts.length - 1]);\r\n        if (isNaN(key)) this._key = 0;\r\n        else {\r\n            parts.pop();\r\n            this._key = key;\r\n        }\r\n        \r\n        if (parts.length == 0) {\r\n            throw new Error(\"Can't convert this url string: \" + url);\r\n        }\r\n        for(let i in action_map) {\r\n            if (action_map[i] == \"-\" + parts[parts.length - 1]) {\r\n                this._state = i\r\n                parts.pop();\r\n                break;\r\n            }\r\n        }\r\n        this._model = parts.join(\"-\");\r\n    }\r\n}\r\n\r\nlet maps = [];\r\nlet trigger_cb = null;\r\nlet route_base = \"/\";\r\n\r\n\r\nfunction decodeParams(param_str) {\r\n    const params = new URLSearchParams(param_str);\r\n    let param_obj = {};\r\n    params.forEach(function(value, key) {\r\n        param_obj[key] = value;\r\n    });\r\n    return param_obj;\r\n} \r\n\r\n\r\n\r\n\r\nfunction resetMaps() {\r\n    maps = [];\r\n}\r\n\r\nfunction trigger(trig) {\r\n    trigger_cb = trig;\r\n}\r\n\r\nfunction createMap() {\r\n    let map = new CtrlGroupMap();\r\n    maps.push(map);\r\n    return map;\r\n}\r\n\r\nfunction convertToURL() {\r\n    let str_parts = [];\r\n    for(let map of maps) {\r\n        str_parts.push(map.convertToURL());\r\n    }\r\n\r\n    console.log(window.location.protocol + \"//\" + window.location.host + route_base);\r\n    const base = new URL(window.location.protocol + \"//\" + window.location.host + route_base);\r\n    const url_str = str_parts.join(\"/\");\r\n    const url = new URL(url_str, base);\r\n\r\n\r\n    let cstr = [];\r\n    for(let i in maps) {\r\n        if (maps[i].param_str) {\r\n            url.searchParams.set(\"stage_\" + i, maps[i].param_str);\r\n        }\r\n    }\r\n    return url;\r\n}\r\n\r\nfunction convertFromURL(url_obj) {\r\n    let url = url_obj.pathname.replace(route_base, \"\");\r\n    url = url.replace(/^\\/+|\\/+$/g, '');\r\n    let parts = url.split(\"/\");\r\n    maps = [];\r\n    for(let i in parts) {\r\n        let map = createMap();\r\n        map.convertFromURL(parts[i]);\r\n    }\r\n\r\n    const param_obj = url_obj.searchParams;\r\n    for(let i in maps) {\r\n        const param = param_obj.get(\"stage_\" + i);\r\n        if (param) maps[i].param_str = param;\r\n    }\r\n\r\n    if (trigger_cb) trigger_cb();\r\n}\r\n\r\n\r\nfunction setBase(base) {\r\n    //trim any leading or trailing / so we can be sure we are dealing with the correct format\r\n    base = base.replace(/^\\/+|\\/+$/g, '');\r\n    route_base = \"/\" + base;\r\n}\r\n\r\nfunction getMaps() {\r\n    return maps;\r\n}\r\n\r\n\r\nexport default {\r\n    trigger,\r\n    resetMaps,\r\n    createMap,\r\n    convertToURL,\r\n    convertFromURL,\r\n    setBase,\r\n    getMaps\r\n}","let cb;\r\n\r\nfunction setRoute(uri, title = '') {\r\n    window.history.pushState({'name' : uri.pathname}, document.title, uri);\r\n    runRoute(uri);\r\n}\r\n\r\n\r\nfunction hardSetRoute(route) {\r\n    window.location = route;\r\n}\r\n\r\n\r\nwindow.onpopstate = function(event) {\r\n    runRoute(new URL(document.location.href));\r\n}\r\n\r\n\r\nfunction runRoute(uri) {\r\n    if (!uri) uri = new URL(window.location.href);\r\n    if (cb) cb(uri, window.location.search);\r\n}\r\n\r\nfunction softRoute(uri, title = '') {\r\n    window.history.pushState({'name' : uri.pathname}, document.title, uri);\r\n}\r\n\r\nfunction regCallback(callback) {\r\n    cb = callback;\r\n}\r\n\r\n\r\nexport default {\r\n    setRoute,\r\n    hardSetRoute,\r\n    runRoute,\r\n    regCallback,\r\n    softRoute\r\n}","import { reactive } from \"vue\"\r\nimport { Model } from \"./model.js\"\r\nimport Map from \"./ctrlmap.js\"\r\nimport Client from \"./client.js\"\r\nimport Router from \"./router.js\"\r\nimport ChangeAction from \"./changeaction.js\"\r\n\r\nlet _store = reactive({ 'models' : [], profile : null });\r\nlet _settings = {};\r\nlet _models = [];\r\nlet _seeker = -1;\r\n\r\n\r\nfunction setSettings(settings) {\r\n    if (settings.client) {\r\n        Client.setURL(settings.client.url);\r\n        if (settings.client.custom_headers) {\r\n            for(let i in settings.client.custom_headers) {\r\n                Client.regCustomHeader(i, settings.client.custom_headers[i]);\r\n            }\r\n        }\r\n    \r\n        if (settings.client.debug) {\r\n            Client.regDebug(true);\r\n        }\r\n    \r\n        Client.regStatusHandler(403, function() {\r\n            alert(\"Page not found\");\r\n        });\r\n    }\r\n    \r\n    if (settings.mapper) {\r\n        if (settings.mapper.base) Map.setBase(settings.mapper.base);\r\n    }\r\n\r\n    if (settings.models) _settings = settings.models;\r\n}\r\n\r\n\r\nfunction initProfile() {\r\n    return Client.get(\"/core-check-user\")\r\n    .then(response => {\r\n        _store.profile = response.__profile;\r\n        return _store.profile;\r\n    });\r\n}\r\n\r\nfunction assumeRole(role) {\r\n    return Client.post('/core-assume-role', { 'role' : role })\r\n    .then(request => {\r\n        _store.profile = request.__profile;\r\n        return _store.profile;\r\n    });\r\n}\r\n\r\nfunction removeRole() {\r\n    return Client.post('/core-remove-role')\r\n    .then(request => {\r\n        _store.profile = request.__profile;\r\n        return _store.profile;\r\n    });\r\n}\r\n\r\nfunction buildModel(map, stage) {\r\n    let model = new Model(stage);\r\n    model.map = map;\r\n    if (_settings[map.model]) model.injectCustomSettings(_settings[map.model]);\r\n    _models[stage] = model;\r\n    return _models[stage];\r\n   \r\n}\r\n\r\nfunction run() {\r\n    _seeker = -1;\r\n    let maps = Map.getMaps();\r\n    if (maps.length == 0) {\r\n        throw new Error(\"Error with controller run, no maps created\");\r\n    }\r\n    _store.models = [];\r\n    let promises = [];\r\n\r\n    if (_models.length > maps.length) _models.splice(maps.length, _models.length - maps.length);\r\n    for (let i in maps) {\r\n        const map = maps[i];\r\n        let model, promise;\r\n        if (i >= _models.length || _models[i].name != map.model) {\r\n            model = buildModel(map, i);\r\n        } else {\r\n            model = _models[i];\r\n        }\r\n        if (_settings && _settings[map.model]) {\r\n            model.injectCustomSettings(_settings[map.model]);\r\n        }\r\n        promise = model.init()\r\n        .catch(e => console.log(e));\r\n        promises.push(promise);\r\n    }\r\n\r\n    //check the last map to see if it needs a child group\r\n    //omap will be one before last\r\n    Promise.all(promises)\r\n    .then(() => {\r\n        for(let model of _models) {\r\n            _store.models.push(model.exportToStore());\r\n        }\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    })    \r\n}\r\n\r\nfunction buildLink(soft = false) {\r\n    Map.resetMaps();\r\n    let omaps = [];\r\n    for(let i in _models) {\r\n        let model = _models[i];\r\n        omaps.push(model.map);\r\n    }\r\n\r\n    ChangeAction.convertMaps(omaps);\r\n\r\n    for(const omap of omaps) {\r\n        let cmap = Map.createMap();\r\n        for(let i in omap) {\r\n            cmap[i] = omap[i];\r\n        }\r\n    }\r\n    let url = Map.convertToURL();\r\n    if (!soft) Router.setRoute(url);\r\n    else Router.softRoute(url);\r\n}\r\n\r\nfunction runLink() {\r\n    Map.runRoute();\r\n}\r\n\r\n\r\nfunction runData(uri = null) {\r\n    if (!uri) uri = new URL(window.location.href);\r\n    Map.convertFromURL(uri);\r\n}\r\n\r\n\r\n\r\nfunction reloadFromBase() {\r\n    Map.resetMaps();\r\n    let url = Map.convertToURL();\r\n    Router.setRoute(url);\r\n}\r\n\r\n\r\nfunction getStore() {\r\n    return _store.models[_seeker];\r\n}\r\n\r\n\r\nfunction next() {\r\n    ++_seeker;\r\n}\r\n\r\nMap.trigger(() => {\r\n    run();\r\n});\r\n\r\nRouter.regCallback(Map.convertFromURL)\r\n\r\nexport default {\r\n    store : _store,\r\n    models : _models,\r\n    setSettings,\r\n    initProfile,\r\n    assumeRole,\r\n    removeRole,\r\n    run,\r\n    buildModel,\r\n    buildLink,\r\n    runLink,\r\n    runData,\r\n    reloadFromBase,\r\n    getStore,\r\n    next\r\n}\r\n","let classes_dict = {\r\n    'ptj-account-details-logout' : \"ptj-account-details-logout\",\r\n    'ptj-account-handler' : 'ptj-account-handler',\r\n    'ptj-breadcrumbs' : 'ptj-breadcrumbs',\r\n    'ptj-card' : 'ptj-card',\r\n    'ptj-card-row' : 'ptj-card-row',\r\n    'ptj-card-label' : 'ptj-card-label',\r\n    'ptj-card-value' : 'ptj-card-value',\r\n    'ptj-form' : 'ptj-form',\r\n    'ptj-form-title' : 'ptj-form-title',\r\n    'ptj-form-error' : 'ptj-form-error',\r\n    'ptj-form-group' : 'ptj-form-group',\r\n    'ptj-form-submit' : 'ptj-form-submit',\r\n    'ptj-root' : 'ptj-root',\r\n    'ptj-tabs' : 'ptj-tabs',\r\n    'ptj-tabs-card' : 'ptj-tabs-card',\r\n    'ptj-tabs-tab' : 'ptj-tabs-tab',\r\n    'ptj-repo' : 'ptj-repo',\r\n    'ptj-nav' : 'ptj-nav',\r\n    'ptj-nav-link' : 'ptj-nav-link',\r\n    'ptj-single-item' : 'ptj-single-item',\r\n    'ptj-single-item-row' : 'ptj-single-item-row',\r\n    'ptj-single-item-label' : 'ptj-single-item-label',\r\n    'ptj-single-item-value' : 'ptj-single-item-value',\r\n    'ptj-single-item-actions' : 'ptj-single-item-actions',\r\n    'ptj-single-item-children' : 'ptj-single-item-children',\r\n    'ptj-widget-window' : 'ptj-widget-window',\r\n    'ptj-widget-window-header' : 'ptj-widget-window-header',\r\n    'ptj-widget-window-title' : 'ptj-widget-window-title',\r\n    'ptj-widget-window-toggle' : 'ptj-widget-window-toggle',\r\n    'ptj-widget-window-body' : 'ptj-widget-window-body',\r\n    'ptj-repo-header-title' : 'ptj-repo-header-title',\r\n    'ptj-repo-header-actions' : 'ptj-repo-header-actions',\r\n    'ptj-tree' : 'ptj-tree',\r\n    'ptj-form-row' : 'ptj-form-row',\r\n    'ptj-form-input-row' : 'ptj-form-input-row',\r\n    'ptj-form-input-label' : 'ptj-form-input-label',\r\n    'ptj-form-input' : 'ptj-form-input',\r\n    'ptj-table' : 'ptj-table',\r\n    'ptj-table-header' : 'ptj-table-header',\r\n    'ptj-table-header-cell' : 'ptj-table-header-cell',\r\n    'ptj-table-row' : 'ptj-table-row',\r\n    'ptj-table-cell' : 'ptj-table-cell',\r\n    'ptj-table-cell-sortable' : 'ptj-table-cell-sortable',\r\n    'ptj-form-confirm-row' : 'ptj-form-confirm-row',\r\n    'ptj-form-confirm-label' : 'ptj-form-confirm-label',\r\n    'ptj-form-confirm' : 'ptj-form-confirm',\r\n    'ptj-pagination' : 'ptj-pagination',\r\n    'ptj-filter-form' : 'ptj-filter-form',\r\n    'ptj-filter-form-group' : 'ptj-filter-form-group',\r\n    'ptj-filter-form-submit' : 'ptj-filter-form-submit',\r\n    'ptj-form-select-row' : 'ptj-form-select-row',\r\n    'ptj-form-select-label' : 'ptj-form-select-label',\r\n    'ptj-form-select' : 'ptj-form-select',\r\n    'ptj-tree-node' : 'ptj-tree-node',\r\n    'ptj-tree-node-row' : 'ptj-tree-node-row',\r\n    'ptj-selectfields' : 'ptj-selectfields',\r\n    'ptj-selectfields-checkbox' : 'ptj-selectfields-checkbox',\r\n    'ptj-selectfields-label' : 'ptj-selectfields-label',\r\n    'ptj-form-radio-row' : 'ptj-form-radio-row',\r\n    'ptj-form-radio-label' : 'ptj-form-radio-label',\r\n    'ptj-form-radio-option-label' : 'ptj-form-radio-option-label',\r\n    'ptj-checkbox-row' : 'ptj-checkbox-row',\r\n    'ptj-checkbox-label' : 'ptj-checkbox-label',\r\n    'ptj-checkbox' : 'ptj-checkbox',\r\n    'ptj-form-textarea-row' : 'ptj-form-textarea-row',\r\n    'ptj-form-textarea-label' : 'ptj-form-textarea-label',\r\n    'ptj-form-textarea' : 'ptj-form-textarea',\r\n    'ptj-form-asset-row' : 'ptj-form-asset-row',\r\n    'ptj-form-asset-label' : 'ptj-form-asset-label',\r\n    'ptj-form-asset' : 'ptj-form-asset',\r\n    'ptj-progress-bar-wrapper' : 'ptj-progress-bar-wrapper',\r\n    'ptj-progress-bar-holder' : 'ptj-progress-bar-holder',\r\n    'ptj-progress-bar' : 'ptj-progress-bar',\r\n    'ptj-error' : 'ptj-error',\r\n    'ptj-filter-form-time-row' : 'ptj-filter-form-time-row',\r\n    'ptj-filter-form-time-label' : 'ptj-filter-form-time-label',\r\n    'ptj-filter-form-time-1' : 'ptj-filter-form-time-1',\r\n    'ptj-filter-form-time-2' : 'ptj-filter-form-time-2',\r\n    'ptj-filter-form-checkbox-row' : 'ptj-filter-form-checkbox-row',\r\n    'ptj-filter-form-checkbox-label' : 'ptj-filter-form-checkbox-label',\r\n    'ptj-filter-form-checkbox' : 'ptj-filter-form-checkbox',\r\n    'ptj-account-details-logout' : 'ptj-account-details-logout',\r\n    'ptj-accounthandler' : 'ptj-accounthandler',\r\n    'ptj-list' : 'ptj-list'\r\n};\r\n\r\nfunction regClass(name, value) {\r\n    classes_dict[name] = value;\r\n}\r\n\r\nfunction getClass(name) {\r\n    return classes_dict[name];\r\n} \r\n\r\nexport default {\r\n    regClass,\r\n    getClass\r\n}","<template>\r\n    <p :class=\"Class.getClass('ptj-error')\">{{ error }}</p>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    name : 'ptj-error',\r\n    props : {\r\n        'error' : [Number, String]\r\n    },\r\n    setup() { \r\n        return { Class }\r\n    }\r\n});\r\n\r\n</script>\r\n\r\n<style>\r\n.error {\r\n  color : red;\r\n}\r\n</style>","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","<template>\r\n    <p :class=\"Class.getClass('ptj-error')\">{{ error }}</p>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    name : 'ptj-error',\r\n    props : {\r\n        'error' : [Number, String]\r\n    },\r\n    setup() { \r\n        return { Class }\r\n    }\r\n});\r\n\r\n</script>\r\n\r\n<style>\r\n.error {\r\n  color : red;\r\n}\r\n</style>","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-input-row') + ' ' + field.meta.name\">\r\n    <label v-if=\"field.meta.atts.type != 'hidden'\" :class=\"Class.getClass('ptj-form-input-label')\">{{ field.meta.label }}</label>\r\n    <input \r\n        :class=\"Class.getClass('ptj-form-input')\" \r\n        :name=\"field.meta.name\" \r\n        :type=\"field.meta.atts.type\" \r\n        v-model=\"field.val\" \r\n        @blur=\"field.validateon = true\" :readonly=\"field.meta.readonly\">\r\n    <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-input',\r\n  props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-input-row') + ' ' + field.meta.name\">\r\n    <label v-if=\"field.meta.atts.type != 'hidden'\" :class=\"Class.getClass('ptj-form-input-label')\">{{ field.meta.label }}</label>\r\n    <input \r\n        :class=\"Class.getClass('ptj-form-input')\" \r\n        :name=\"field.meta.name\" \r\n        :type=\"field.meta.atts.type\" \r\n        v-model=\"field.val\" \r\n        @blur=\"field.validateon = true\" :readonly=\"field.meta.readonly\">\r\n    <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-input',\r\n  props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-confirm-row')\">\r\n    <label :class=\"Class.getClass('ptj-form-confirm-label')\">{{ field.meta.label }}</label>\r\n    <input :class=\"Class.getClass('ptj-form-confirm')\" \r\n    :name=\"name\" \r\n    :type=\"field.meta.atts.type\" v-model=\"cval\" @blur=\"field.setValidateOn()\">\r\n    <ptj-error v-show=\"error\" :error=\"error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-confirm',\r\n  props : {\r\n    field : Object\r\n  },\r\n  data() {\r\n      return {\r\n          cval : \"\"\r\n      }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  computed : {\r\n    name() {\r\n        return this.field.name + \"_confirm\";\r\n    },\r\n    error() {\r\n        if (this.isvalidateon) {\r\n            if (this.field.val == this.cval) return \"\";\r\n            else return \"Doesn't match \" + this.field.name; \r\n        }      \r\n    }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-confirm-row')\">\r\n    <label :class=\"Class.getClass('ptj-form-confirm-label')\">{{ field.meta.label }}</label>\r\n    <input :class=\"Class.getClass('ptj-form-confirm')\" \r\n    :name=\"name\" \r\n    :type=\"field.meta.atts.type\" v-model=\"cval\" @blur=\"field.setValidateOn()\">\r\n    <ptj-error v-show=\"error\" :error=\"error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-confirm',\r\n  props : {\r\n    field : Object\r\n  },\r\n  data() {\r\n      return {\r\n          cval : \"\"\r\n      }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  computed : {\r\n    name() {\r\n        return this.field.name + \"_confirm\";\r\n    },\r\n    error() {\r\n        if (this.isvalidateon) {\r\n            if (this.field.val == this.cval) return \"\";\r\n            else return \"Doesn't match \" + this.field.name; \r\n        }      \r\n    }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-select-row')\">\r\n  <label :class=\"Class.getClass('ptj-form-select-label')\">{{ field.meta.label }}</label>\r\n  <select :class=\"Class.getClass('ptj-form-select')\" v-model=\"field.val\" :readonly=\"field.meta.readonly\" :name=\"field.meta.name\" :multiple=\"field.meta.multiple\">\r\n    <option value=\"0\" selected disabled>Select Option</option>\r\n    <option v-for=\"option in field.meta.options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup(props) {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-select-row')\">\r\n  <label :class=\"Class.getClass('ptj-form-select-label')\">{{ field.meta.label }}</label>\r\n  <select :class=\"Class.getClass('ptj-form-select')\" v-model=\"field.val\" :readonly=\"field.meta.readonly\" :name=\"field.meta.name\" :multiple=\"field.meta.multiple\">\r\n    <option value=\"0\" selected disabled>Select Option</option>\r\n    <option v-for=\"option in field.meta.options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup(props) {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n    <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-radio-row')\">\r\n      <label :class=\"Class.getClass('ptj-form-radio-label')\">{{ field.label }}</label>\r\n        <div v-for=\"option in field.options\" :key=\"option\">\r\n            <label :class=\"Class.getClass('ptj-form-radio-option-label')\">{{ option.option }}</label>\r\n            <input :name=\"cfield.name\" type=\"radio\" :value=\"option.value\" v-model=\"field.val\">\r\n        </div>\r\n        <ptj-error v-show=\"field.error\" :error=\"field.error\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-radio',\r\n  props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  data() {\r\n      return {\r\n          isvalidateon : false\r\n      }\r\n  },\r\n  methods : {\r\n      setValidateOn() {\r\n          this.isvalidateon = true;\r\n      }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n    <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-radio-row')\">\r\n      <label :class=\"Class.getClass('ptj-form-radio-label')\">{{ field.label }}</label>\r\n        <div v-for=\"option in field.options\" :key=\"option\">\r\n            <label :class=\"Class.getClass('ptj-form-radio-option-label')\">{{ option.option }}</label>\r\n            <input :name=\"cfield.name\" type=\"radio\" :value=\"option.value\" v-model=\"field.val\">\r\n        </div>\r\n        <ptj-error v-show=\"field.error\" :error=\"field.error\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-radio',\r\n  props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  data() {\r\n      return {\r\n          isvalidateon : false\r\n      }\r\n  },\r\n  methods : {\r\n      setValidateOn() {\r\n          this.isvalidateon = true;\r\n      }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-checkbox-row')\">\r\n    <label :class=\"Class.getClass('ptj-checkbox-label')\">{{ field.meta.label }}</label>\r\n    <input :class=\"Class.getClass('ptj-checkbox')\" type=\"checkbox\" :true-value=\"1\" :false-value=\"0\" :name=\"field.meta.name\" v-model=\"field.val\">\r\n    <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-checkbox',\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-checkbox-row')\">\r\n    <label :class=\"Class.getClass('ptj-checkbox-label')\">{{ field.meta.label }}</label>\r\n    <input :class=\"Class.getClass('ptj-checkbox')\" type=\"checkbox\" :true-value=\"1\" :false-value=\"0\" :name=\"field.meta.name\" v-model=\"field.val\">\r\n    <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-checkbox',\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n    <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-textarea-row') + ' ' + field.name.replace('_', '-')\">\r\n       <label :class=\"Class.getClass('ptj-form-textarea-label')\">{{ field.meta.label }}</label>\r\n       <textarea :class=\"Class.getClass('ptj-form-textarea')\" :name=\"field.meta.name\" v-model=\"field.val\" :readonly=\"field.meta.readonly\" :data-html=\"field.meta.atts.html\"></textarea>        \r\n       <ptj-error v-show=\"field.error\" :error=\"field.error\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-textarea',\r\n  props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n    <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-textarea-row') + ' ' + field.name.replace('_', '-')\">\r\n       <label :class=\"Class.getClass('ptj-form-textarea-label')\">{{ field.meta.label }}</label>\r\n       <textarea :class=\"Class.getClass('ptj-form-textarea')\" :name=\"field.meta.name\" v-model=\"field.val\" :readonly=\"field.meta.readonly\" :data-html=\"field.meta.atts.html\"></textarea>        \r\n       <ptj-error v-show=\"field.error\" :error=\"field.error\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-textarea',\r\n  props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-asset-row')\">\r\n  <label :class=\"Class.getClass('ptj-form-asset-label')\">{{ field.meta.label }}</label>\r\n  <input :class=\"Class.getClass('ptj-form-asset')\" ref=\"input\" @change=\"setFile\" :name=\"field.meta.name\" type=\"file\" >\r\n  <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-asset-field',\r\n  props : {\r\n    field : {\r\n        type : Object,\r\n        required : true\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  methods : {\r\n      setFile(e) {\r\n          if (e.target.files.length > 0) {\r\n            this.field.val = e.target.files[0];\r\n          } else {\r\n            this.field.val = null;\r\n          }\r\n          this.field.validateon = true;\r\n      }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>","<template>\r\n <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-form-asset-row')\">\r\n  <label :class=\"Class.getClass('ptj-form-asset-label')\">{{ field.meta.label }}</label>\r\n  <input :class=\"Class.getClass('ptj-form-asset')\" ref=\"input\" @change=\"setFile\" :name=\"field.meta.name\" type=\"file\" >\r\n  <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-asset-field',\r\n  props : {\r\n    field : {\r\n        type : Object,\r\n        required : true\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  methods : {\r\n      setFile(e) {\r\n          if (e.target.files.length > 0) {\r\n            this.field.val = e.target.files[0];\r\n          } else {\r\n            this.field.val = null;\r\n          }\r\n          this.field.validateon = true;\r\n      }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>","<template>\r\n    <div :class=\"Class.getClass('ptj-progress-bar-wrapper')\">\r\n        <div :class=\"Class.getClass('ptj-progress-bar-holder') + ' ptj-progress-holder'\">\r\n            <div :class=\"Class.getClass('ptj-progress-bar') + ' ptj-bar'\" :style=\"style\">&nbsp;</div> \r\n        </div>   \r\n        <span>{{ num }}%</span>\r\n    </div> \r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent} from \"vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-progress-bar',\r\n  props : {\r\n      total : Number,\r\n      progress : Number\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  computed : {\r\n      num() {\r\n          let num = Math.floor((this.progress / this.total) * 100);\r\n          return (isNaN(num)) ? 0 : num;\r\n      },\r\n      style() {\r\n          return \"width:\" +  this.num + \"%;\";\r\n      }\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n .ptj-progress-holder {\r\n     width : 100%;\r\n     min-height : 10px;\r\n     position : relative;\r\n     display : flex;\r\n     align-items: stretch;\r\n     padding : 2px;\r\n }\r\n\r\n .ptj-bar {\r\n     width : 0;\r\n     height : 100%;\r\n     position : relative;\r\n     line-height : 100%;\r\n }\r\n\r\n\r\n</style>\r\n","<template>\r\n    <div :class=\"Class.getClass('ptj-progress-bar-wrapper')\">\r\n        <div :class=\"Class.getClass('ptj-progress-bar-holder') + ' ptj-progress-holder'\">\r\n            <div :class=\"Class.getClass('ptj-progress-bar') + ' ptj-bar'\" :style=\"style\">&nbsp;</div> \r\n        </div>   \r\n        <span>{{ num }}%</span>\r\n    </div> \r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent} from \"vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-progress-bar',\r\n  props : {\r\n      total : Number,\r\n      progress : Number\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  computed : {\r\n      num() {\r\n          let num = Math.floor((this.progress / this.total) * 100);\r\n          return (isNaN(num)) ? 0 : num;\r\n      },\r\n      style() {\r\n          return \"width:\" +  this.num + \"%;\";\r\n      }\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n .ptj-progress-holder {\r\n     width : 100%;\r\n     min-height : 10px;\r\n     position : relative;\r\n     display : flex;\r\n     align-items: stretch;\r\n     padding : 2px;\r\n }\r\n\r\n .ptj-bar {\r\n     width : 0;\r\n     height : 100%;\r\n     position : relative;\r\n     line-height : 100%;\r\n }\r\n\r\n\r\n</style>\r\n","<template>\r\n <form @submit.prevent=\"submit\" v-show=\"fstate==0\" :class=\"Class.getClass('ptj-form') + ' ' + store.classes\">\r\n    <div :class=\"Class.getClass('ptj-form-error')\" v-show=\"globalerror\">{{ globalerror }}</div>\r\n    <div v-for=\"field in store.data.cells\" :key=\"field.meta.name\" :class=\"Class.getClass('ptj-form-group')\">\r\n          <ptj-select v-if=\"field.meta.type=='select'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-radio v-else-if=\"field.meta.type=='radio'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-checkbox v-else-if=\"field.meta.type=='checkbox'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-textarea v-else-if=\"field.meta.type=='textarea'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-asset-field v-else-if=\"field.meta.type=='asset'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-input v-else :field=\"field\" :stores=\"store\" />\r\n          <div v-if=\"field.meta.confirm\">\r\n            <ptj-confirm :field=\"field\" :stores=\"store\"/> \r\n          </div>\r\n          <!-- REMOVED: -->\r\n    </div>\r\n    <input type=\"submit\" value=\"Submit\" :class=\"Class.getClass('ptj-form-submit')\">\r\n\r\n  </form>\r\n  <ptj-progress-bar v-show=\"fstate == 1\" :total=\"store.progress.total\" :progress=\"store.progress.progress\" />\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCInput from \"./ptj-form-input.vue\"\r\nimport GCConfirm from \"./ptj-form-confirm.vue\"\r\nimport GCSelect from \"./ptj-form-select.vue\"\r\nimport GCRadio from \"./ptj-form-radio.vue\"\r\nimport GCCheckbox from \"./ptj-form-checkbox.vue\"\r\nimport GCTextarea from \"./ptj-form-textarea.vue\"\r\nimport GCAssetField from \"./ptj-form-asset.vue\"\r\nimport GCProgressBar from \"./ptj-progress-bar.vue\"\r\nimport Errors from \"../js/error.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-form',\r\n  data() {\r\n      return {\r\n          fstate : 0,\r\n          globalerror : ''\r\n      }\r\n  },\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  methods : {\r\n    clearErrors() {\r\n        this.globalerror = \"\";\r\n        for(let i in this.store.data.cells) {\r\n            this.store.data.cells[i].error = 0;\r\n        }\r\n    },\r\n    submit() {\r\n        this.fstate = (this.total > 0) ? 1 : 2;\r\n        this.clearErrors();\r\n        return this.store.submit()\r\n        .then(() => {\r\n            this.store.next();\r\n            Ctrl.buildLink();\r\n        })\r\n        .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n            this.fstate = 0;\r\n            console.log(err);\r\n            if (typeof err == \"string\") {\r\n                this.globalerror = err;\r\n            } else {\r\n                for(let i in err) {\r\n                    if (i.indexOf(\"__\") === 0) continue;\r\n                    const cell = this.store.data.cells[i];\r\n                    if (cell) {\r\n                        cell.error = Errors.getError(err[i]);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-input\" : GCInput,\r\n      \"ptj-confirm\" : GCConfirm,\r\n      \"ptj-select\" : GCSelect,\r\n      \"ptj-radio\" : GCRadio,\r\n      \"ptj-checkbox\" : GCCheckbox,\r\n      \"ptj-textarea\": GCTextarea,\r\n      \"ptj-asset-field\" : GCAssetField,\r\n      \"ptj-progress-bar\" : GCProgressBar\r\n    }\r\n       \r\n  \r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n <form @submit.prevent=\"submit\" v-show=\"fstate==0\" :class=\"Class.getClass('ptj-form') + ' ' + store.classes\">\r\n    <div :class=\"Class.getClass('ptj-form-error')\" v-show=\"globalerror\">{{ globalerror }}</div>\r\n    <div v-for=\"field in store.data.cells\" :key=\"field.meta.name\" :class=\"Class.getClass('ptj-form-group')\">\r\n          <ptj-select v-if=\"field.meta.type=='select'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-radio v-else-if=\"field.meta.type=='radio'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-checkbox v-else-if=\"field.meta.type=='checkbox'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-textarea v-else-if=\"field.meta.type=='textarea'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-asset-field v-else-if=\"field.meta.type=='asset'\" :field=\"field\" :stores=\"store\" />\r\n          <ptj-input v-else :field=\"field\" :stores=\"store\" />\r\n          <div v-if=\"field.meta.confirm\">\r\n            <ptj-confirm :field=\"field\" :stores=\"store\"/> \r\n          </div>\r\n          <!-- REMOVED: -->\r\n    </div>\r\n    <input type=\"submit\" value=\"Submit\" :class=\"Class.getClass('ptj-form-submit')\">\r\n\r\n  </form>\r\n  <ptj-progress-bar v-show=\"fstate == 1\" :total=\"store.progress.total\" :progress=\"store.progress.progress\" />\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCInput from \"./ptj-form-input.vue\"\r\nimport GCConfirm from \"./ptj-form-confirm.vue\"\r\nimport GCSelect from \"./ptj-form-select.vue\"\r\nimport GCRadio from \"./ptj-form-radio.vue\"\r\nimport GCCheckbox from \"./ptj-form-checkbox.vue\"\r\nimport GCTextarea from \"./ptj-form-textarea.vue\"\r\nimport GCAssetField from \"./ptj-form-asset.vue\"\r\nimport GCProgressBar from \"./ptj-progress-bar.vue\"\r\nimport Errors from \"../js/error.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-form',\r\n  data() {\r\n      return {\r\n          fstate : 0,\r\n          globalerror : ''\r\n      }\r\n  },\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  methods : {\r\n    clearErrors() {\r\n        this.globalerror = \"\";\r\n        for(let i in this.store.data.cells) {\r\n            this.store.data.cells[i].error = 0;\r\n        }\r\n    },\r\n    submit() {\r\n        this.fstate = (this.total > 0) ? 1 : 2;\r\n        this.clearErrors();\r\n        return this.store.submit()\r\n        .then(() => {\r\n            this.store.next();\r\n            Ctrl.buildLink();\r\n        })\r\n        .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n            this.fstate = 0;\r\n            console.log(err);\r\n            if (typeof err == \"string\") {\r\n                this.globalerror = err;\r\n            } else {\r\n                for(let i in err) {\r\n                    if (i.indexOf(\"__\") === 0) continue;\r\n                    const cell = this.store.data.cells[i];\r\n                    if (cell) {\r\n                        cell.error = Errors.getError(err[i]);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-input\" : GCInput,\r\n      \"ptj-confirm\" : GCConfirm,\r\n      \"ptj-select\" : GCSelect,\r\n      \"ptj-radio\" : GCRadio,\r\n      \"ptj-checkbox\" : GCCheckbox,\r\n      \"ptj-textarea\": GCTextarea,\r\n      \"ptj-asset-field\" : GCAssetField,\r\n      \"ptj-progress-bar\" : GCProgressBar\r\n    }\r\n       \r\n  \r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n  <span :class=\"Class.getClass('ptj-nav') + ' ' + classes\">\r\n  <a v-for=\"route in actions\" v-bind:key=\"route\" @click=\"setRoute(route);\" :class=\"Class.getClass('ptj-nav-link')\">\r\n    {{ route.n }}\r\n  </a> \r\n  </span>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-nav',\r\n  props: {\r\n    actions : Array,\r\n    classes : {\r\n        type : String,\r\n        default : \"\"\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  methods : {\r\n      setRoute(route) {\r\n          route.r();\r\n          Ctrl.buildLink();\r\n      }\r\n  }   \r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n  <span :class=\"Class.getClass('ptj-nav') + ' ' + classes\">\r\n  <a v-for=\"route in actions\" v-bind:key=\"route\" @click=\"setRoute(route);\" :class=\"Class.getClass('ptj-nav-link')\">\r\n    {{ route.n }}\r\n  </a> \r\n  </span>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-nav',\r\n  props: {\r\n    actions : Array,\r\n    classes : {\r\n        type : String,\r\n        default : \"\"\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  methods : {\r\n      setRoute(route) {\r\n          route.r();\r\n          Ctrl.buildLink();\r\n      }\r\n  }   \r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-filter-form-time-row')\">\r\n  <label :class=\"Class.getClass('ptj-filter-form-time-label')\">{{ field.meta.label }}</label>\r\n  <input :class=\"Class.getClass('ptj-filter-form-time-1')\" type=\"datetime-local\" v-model=\"field.val1\">\r\n  <input :class=\"Class.getClass('ptj-filter-form-time-2')\" type=\"datetime-local\" v-model=\"field.val2\">\r\n  <ptj-error v-show=\"field.error\" :error=\"field.error\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport GCError from \"./ptj-error.vue\"\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-time-range',\r\n props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-filter-form-time-row')\">\r\n  <label :class=\"Class.getClass('ptj-filter-form-time-label')\">{{ field.meta.label }}</label>\r\n  <input :class=\"Class.getClass('ptj-filter-form-time-1')\" type=\"datetime-local\" v-model=\"field.val1\">\r\n  <input :class=\"Class.getClass('ptj-filter-form-time-2')\" type=\"datetime-local\" v-model=\"field.val2\">\r\n  <ptj-error v-show=\"field.error\" :error=\"field.error\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport GCError from \"./ptj-error.vue\"\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-time-range',\r\n props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-filter-form-checkbox-row')\">\r\n    <label :class=\"Class.getClass('ptj-filter-form-checkbox-label')\">{{ field.meta.label }}</label>\r\n    <select :name=\"field.meta.name\" v-model=\"field.val\" :class=\"Class.getClass('ptj-filter-form-checkbox')\">\r\n        <option :value='0'>{{ \"All\" }}</option>\r\n        <option :value='1'>{{ \"Checked\" }}</option>\r\n        <option :value='2'>{{ \"Unchecked\" }}</option>\r\n    </select>\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-checkbox',\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n <div :class=\"Class.getClass('ptj-form-row') + ' ' + Class.getClass('ptj-filter-form-checkbox-row')\">\r\n    <label :class=\"Class.getClass('ptj-filter-form-checkbox-label')\">{{ field.meta.label }}</label>\r\n    <select :name=\"field.meta.name\" v-model=\"field.val\" :class=\"Class.getClass('ptj-filter-form-checkbox')\">\r\n        <option :value='0'>{{ \"All\" }}</option>\r\n        <option :value='1'>{{ \"Checked\" }}</option>\r\n        <option :value='2'>{{ \"Unchecked\" }}</option>\r\n    </select>\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-checkbox',\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n    <div :class=\"Class.getClass('ptj-widget-window') + ' ' +  classes\">\r\n        <div :class=\"Class.getClass('ptj-widget-window-header')\">\r\n            <h1 :class=\"Class.getClass('ptj-widget-window-title')\">{{ title }}\r\n            <a :class=\"Class.getClass('ptj-widget-window-toggle')\" @click=\"toggleWidget\"><span class=\"material-icons\">more_horiz</span></a>\r\n            </h1>\r\n        </div>\r\n        <div class=\"Class.getClass('ptj-widget-window-body')\" v-show=\"show\">\r\n            <slot />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        title : String,\r\n        active : {\r\n            type : Boolean,\r\n            default : false\r\n        },\r\n        classes : {\r\n            type : String,\r\n            default : ''\r\n        }\r\n    },\r\n    setup() {\r\n       return { Class };\r\n    },\r\n    data() {\r\n        return {\r\n            show : this.active\r\n        }\r\n    },\r\n    methods : {\r\n        toggleWidget() {\r\n            this.show = (this.show) ? false : true;\r\n        }\r\n    }\r\n});\r\n\r\n</script>","<template>\r\n    <div :class=\"Class.getClass('ptj-widget-window') + ' ' +  classes\">\r\n        <div :class=\"Class.getClass('ptj-widget-window-header')\">\r\n            <h1 :class=\"Class.getClass('ptj-widget-window-title')\">{{ title }}\r\n            <a :class=\"Class.getClass('ptj-widget-window-toggle')\" @click=\"toggleWidget\"><span class=\"material-icons\">more_horiz</span></a>\r\n            </h1>\r\n        </div>\r\n        <div class=\"Class.getClass('ptj-widget-window-body')\" v-show=\"show\">\r\n            <slot />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        title : String,\r\n        active : {\r\n            type : Boolean,\r\n            default : false\r\n        },\r\n        classes : {\r\n            type : String,\r\n            default : ''\r\n        }\r\n    },\r\n    setup() {\r\n       return { Class };\r\n    },\r\n    data() {\r\n        return {\r\n            show : this.active\r\n        }\r\n    },\r\n    methods : {\r\n        toggleWidget() {\r\n            this.show = (this.show) ? false : true;\r\n        }\r\n    }\r\n});\r\n\r\n</script>","<template>\r\n <ptj-widget title=\"search\">\r\n   <form @submit.prevent=\"submit\" :class=\"Class.getClass('ptj-filter-form')\">\r\n      <h1>Search {{ store.title }}</h1>\r\n      <div v-for=\"field in store.data_template.cells\" :key=\"field.meta.name\" :class=\"Class.getClass('ptj-filter-form-group')\">\r\n          <ptj-select v-if=\"field.meta.type=='select'\" :field=\"field\" :multiple=\"true\"  :stores=\"store\"/>\r\n          <ptj-filter-checkbox v-else-if=\"field.meta.type=='checkbox'\" :field=\"field\"  :stores=\"store\"/>\r\n          <ptj-time-range v-else-if=\"field.meta.atts.type=='datetime'\" :field=\"field\"  :stores=\"store\"/>\r\n          <ptj-input v-else :field=\"field\" :stores=\"store\" />\r\n               \r\n          <!-- REMOVED: -->\r\n      </div>\r\n      <input type=\"submit\" value=\"Submit\" :class=\"Class.getClass('ptj-filter-form-submit')\">\r\n  </form>\r\n </ptj-widget>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCInput from \"./ptj-form-input.vue\"\r\nimport GCFormSelect from \"./ptj-form-select.vue\"\r\nimport GCCheckbox from \"./ptj-form-checkbox.vue\"\r\nimport GCFilterFormTime from \"./ptj-filter-form-time.vue\"\r\nimport GCFilterFormCheckbox from \"./ptj-filter-form-checkbox.vue\"\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-filter-form',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  methods : {\r\n    submit() {\r\n      this.store.reload();\r\n      Ctrl.buildLink(true);\r\n    }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-input\" : GCInput,\r\n      \"ptj-select\" : GCFormSelect,\r\n      \"ptj-checkbox\" : GCCheckbox,\r\n      \"ptj-time-range\" : GCFilterFormTime,\r\n      \"ptj-filter-checkbox\" : GCFilterFormCheckbox,\r\n      \"ptj-widget\" : GCWidget\r\n    }\r\n       \r\n  \r\n});\r\n</script>\r\n<style scoped>\r\n.error {\r\n  color : red;\r\n}\r\n\r\n</style>\r\n\r\n","<template>\r\n <ptj-widget title=\"search\">\r\n   <form @submit.prevent=\"submit\" :class=\"Class.getClass('ptj-filter-form')\">\r\n      <h1>Search {{ store.title }}</h1>\r\n      <div v-for=\"field in store.data_template.cells\" :key=\"field.meta.name\" :class=\"Class.getClass('ptj-filter-form-group')\">\r\n          <ptj-select v-if=\"field.meta.type=='select'\" :field=\"field\" :multiple=\"true\"  :stores=\"store\"/>\r\n          <ptj-filter-checkbox v-else-if=\"field.meta.type=='checkbox'\" :field=\"field\"  :stores=\"store\"/>\r\n          <ptj-time-range v-else-if=\"field.meta.atts.type=='datetime'\" :field=\"field\"  :stores=\"store\"/>\r\n          <ptj-input v-else :field=\"field\" :stores=\"store\" />\r\n               \r\n          <!-- REMOVED: -->\r\n      </div>\r\n      <input type=\"submit\" value=\"Submit\" :class=\"Class.getClass('ptj-filter-form-submit')\">\r\n  </form>\r\n </ptj-widget>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCInput from \"./ptj-form-input.vue\"\r\nimport GCFormSelect from \"./ptj-form-select.vue\"\r\nimport GCCheckbox from \"./ptj-form-checkbox.vue\"\r\nimport GCFilterFormTime from \"./ptj-filter-form-time.vue\"\r\nimport GCFilterFormCheckbox from \"./ptj-filter-form-checkbox.vue\"\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-filter-form',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  methods : {\r\n    submit() {\r\n      this.store.reload();\r\n      Ctrl.buildLink(true);\r\n    }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-input\" : GCInput,\r\n      \"ptj-select\" : GCFormSelect,\r\n      \"ptj-checkbox\" : GCCheckbox,\r\n      \"ptj-time-range\" : GCFilterFormTime,\r\n      \"ptj-filter-checkbox\" : GCFilterFormCheckbox,\r\n      \"ptj-widget\" : GCWidget\r\n    }\r\n       \r\n  \r\n});\r\n</script>\r\n<style scoped>\r\n.error {\r\n  color : red;\r\n}\r\n\r\n</style>\r\n\r\n","<template>\r\n <div :class=\"Class.getClass('ptj-pagination')\">\r\n     <a v-for=\"index in store.data_template.max_pages\" :key=\"index\" @click=\"setPage(index)\" :class=\"getActiveClass(index)\">{{ index }}</a>\r\n </div>\r\n</template>\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n    methods : {\r\n        setPage(index) {\r\n            this.store.setPage(index - 1);\r\n            Ctrl.buildLink(true);\r\n        },\r\n        getActiveClass(index) {\r\n            return (index - 1 == this.store.data_template.page) ? \"ptj-pagination-active\" : \"\";\r\n        }\r\n    }\r\n});\r\n</script>","<template>\r\n <div :class=\"Class.getClass('ptj-pagination')\">\r\n     <a v-for=\"index in store.data_template.max_pages\" :key=\"index\" @click=\"setPage(index)\" :class=\"getActiveClass(index)\">{{ index }}</a>\r\n </div>\r\n</template>\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n    methods : {\r\n        setPage(index) {\r\n            this.store.setPage(index - 1);\r\n            Ctrl.buildLink(true);\r\n        },\r\n        getActiveClass(index) {\r\n            return (index - 1 == this.store.data_template.page) ? \"ptj-pagination-active\" : \"\";\r\n        }\r\n    }\r\n});\r\n</script>","<template>\r\n    <ptj-widget title=\"select fields\" :classes=\"Class.getClass('ptj-selectfields')\">\r\n        <div v-for=\"field, name in store.fields\" :key=\"name\"> \r\n            <input \r\n                type=\"checkbox\" \r\n                v-model=\"field.summary\" \r\n                :true-value=\"1\" :false-value=\"0\"\r\n                :class=\"Class.getClass('ptj-selectfields-checkbox')\"> \r\n            <label :class=\"Class.getClass('ptj-selectfields-label')\">{{ field.name }}</label>\r\n        </div>\r\n    </ptj-widget>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },   \r\n    components : {\r\n        \"ptj-widget\" : GCWidget\r\n    }\r\n});\r\n</script>\r\n\r\n","<template>\r\n    <ptj-widget title=\"select fields\" :classes=\"Class.getClass('ptj-selectfields')\">\r\n        <div v-for=\"field, name in store.fields\" :key=\"name\"> \r\n            <input \r\n                type=\"checkbox\" \r\n                v-model=\"field.summary\" \r\n                :true-value=\"1\" :false-value=\"0\"\r\n                :class=\"Class.getClass('ptj-selectfields-checkbox')\"> \r\n            <label :class=\"Class.getClass('ptj-selectfields-label')\">{{ field.name }}</label>\r\n        </div>\r\n    </ptj-widget>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },   \r\n    components : {\r\n        \"ptj-widget\" : GCWidget\r\n    }\r\n});\r\n</script>\r\n\r\n","<template>\r\n    <h1 :class=\"Class.getClass('ptj-repo-header-title')\">{{ store.title }}</h1>\r\n    <ptj-nav :actions=\"store.actions\" :class=\"Class.getClass('ptj-repo-header-actions')\"/>\r\n    <ptj-filter-form  v-if=\"store.disable_filter != true\"/>\r\n    <ptj-selectfields v-if=\"store.disable_selectfields != true\" />\r\n</template>\r\n\r\n<script>\r\n\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCFilterForm from \"./ptj-filter-form.vue\"\r\nimport GCPagination from \"./ptj-pagination.vue\"\r\nimport GCSelectFields from \"./ptj-selectfields.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-header',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n    components : {\r\n        \"ptj-nav\" : GCNav,\r\n        \"ptj-filter-form\" : GCFilterForm,\r\n        \"ptj-pagination\" : GCPagination,\r\n        \"ptj-selectfields\" : GCSelectFields\r\n    }\r\n});\r\n</script>\r\n","<template>\r\n    <h1 :class=\"Class.getClass('ptj-repo-header-title')\">{{ store.title }}</h1>\r\n    <ptj-nav :actions=\"store.actions\" :class=\"Class.getClass('ptj-repo-header-actions')\"/>\r\n    <ptj-filter-form  v-if=\"store.disable_filter != true\"/>\r\n    <ptj-selectfields v-if=\"store.disable_selectfields != true\" />\r\n</template>\r\n\r\n<script>\r\n\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCFilterForm from \"./ptj-filter-form.vue\"\r\nimport GCPagination from \"./ptj-pagination.vue\"\r\nimport GCSelectFields from \"./ptj-selectfields.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-header',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n    components : {\r\n        \"ptj-nav\" : GCNav,\r\n        \"ptj-filter-form\" : GCFilterForm,\r\n        \"ptj-pagination\" : GCPagination,\r\n        \"ptj-selectfields\" : GCSelectFields\r\n    }\r\n});\r\n</script>\r\n","<template >\r\n    <div :class=\"Class.getClass('ptj-tree-node') + ' ptj-draggable' + this.getRowClass()\" :id=\"branch.primary.toVal()\" draggable=\"false\">\r\n        <div :class=\"Class.getClass('ptj-tree-node-row')\" @click=\"selectRow(branch);\">  \r\n            <div>\r\n                <a v-if=\"ischild\" data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle(branch.primary.toVal(), false)\">\r\n                    <span class=\"material-icons\">subdirectory_arrow_right</span>\r\n                </a>\r\n                <a v-else data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle(branch.primary.toVal(), true)\">\r\n                    <span class=\"material-icons\">keyboard_arrow_right</span>\r\n                </a>\r\n            </div>\r\n            <div v-if=\"sortable\">\r\n                <a data-action=\"more\" class=\"button\" @click=\"prevent.stop\" @mousedown=\"setDraggable\" @mouseup=\"endDraggable\">\r\n                    <span class=\"material-icons\">drag_handle</span>\r\n                </a>\r\n            </div>\r\n            <div>{{ branch.getSummary() }}</div>\r\n            \r\n        </div>\r\n        <ptj-tree-node v-for=\"(obj, index) in children\" :branch=\"obj\" :ischild=\"true\"  :key=\"index\" v-show=\"toggle_state[branch.primary.toVal()]\" :store=\"store\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n\tname : \"ptj-tree-node\",\r\n\tprops : {\r\n\t\tbranch : {\r\n            type : Object,\r\n            required : true\r\n        },\r\n        draggable : Boolean,\r\n        ischild : {\r\n            type : Boolean,\r\n            default : false\r\n        }\r\n\r\n\t},\r\n    data() {\r\n        return {\r\n            toggle_state : {}\r\n        }\r\n    },\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n\tmethods : {\r\n        toggle(index) {\r\n            this.toggle_state[index] = (this.toggle_state[index]) ? false : true;\r\n        },\r\n        setDraggable(e) {\r\n            e.target.closest(\".ptj-draggable\").setAttribute(\"draggable\", true);\r\n        },\r\n        endDraggable(e) {\r\n            e.target.closest(\".ptj-draggable\").setAttribute(\"draggable\", false);\r\n        },\r\n        selectRow(branch) {\r\n            let key = branch.primary.toVal();\r\n            this.store.next(key);\r\n            Ctrl.buildLink();\r\n        },\r\n        getRowClass() {\r\n            let str = [];\r\n            for(let name of this.store.groups) {\r\n                str.push(this.store.model + \"-\" + name.replace(\"_\", \"-\") + \"-\" + this.branch[name]);\r\n            }\r\n            return str.join(\" \");\r\n        }\r\n\t},\r\n    computed : {\r\n        sortable() {\r\n            return true;\r\n        },\r\n        children() {\r\n            let arr = [];\r\n            let children = this.branch.children;\r\n            for(let i in children) {\r\n                const carr = children[i];\r\n                arr.push(...carr);\r\n            }\r\n            return arr;\r\n        }\r\n    },\r\n\tcomponents : {\r\n\t\r\n\t}\r\n});\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.model-tree.branch {\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  margin: 6px 0;\r\n  background-color:#111111;\r\n}\r\n\r\n.tree .ide-block {\r\n\tdisplay : none;\r\n}\r\n\r\n.dragArea {\r\n  min-height: 50px;\r\n  outline: 1px solid #777777;\r\n}\r\n\r\n\r\n</style>","<template >\r\n    <div :class=\"Class.getClass('ptj-tree-node') + ' ptj-draggable' + this.getRowClass()\" :id=\"branch.primary.toVal()\" draggable=\"false\">\r\n        <div :class=\"Class.getClass('ptj-tree-node-row')\" @click=\"selectRow(branch);\">  \r\n            <div>\r\n                <a v-if=\"ischild\" data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle(branch.primary.toVal(), false)\">\r\n                    <span class=\"material-icons\">subdirectory_arrow_right</span>\r\n                </a>\r\n                <a v-else data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle(branch.primary.toVal(), true)\">\r\n                    <span class=\"material-icons\">keyboard_arrow_right</span>\r\n                </a>\r\n            </div>\r\n            <div v-if=\"sortable\">\r\n                <a data-action=\"more\" class=\"button\" @click=\"prevent.stop\" @mousedown=\"setDraggable\" @mouseup=\"endDraggable\">\r\n                    <span class=\"material-icons\">drag_handle</span>\r\n                </a>\r\n            </div>\r\n            <div>{{ branch.getSummary() }}</div>\r\n            \r\n        </div>\r\n        <ptj-tree-node v-for=\"(obj, index) in children\" :branch=\"obj\" :ischild=\"true\"  :key=\"index\" v-show=\"toggle_state[branch.primary.toVal()]\" :store=\"store\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n\tname : \"ptj-tree-node\",\r\n\tprops : {\r\n\t\tbranch : {\r\n            type : Object,\r\n            required : true\r\n        },\r\n        draggable : Boolean,\r\n        ischild : {\r\n            type : Boolean,\r\n            default : false\r\n        }\r\n\r\n\t},\r\n    data() {\r\n        return {\r\n            toggle_state : {}\r\n        }\r\n    },\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n\tmethods : {\r\n        toggle(index) {\r\n            this.toggle_state[index] = (this.toggle_state[index]) ? false : true;\r\n        },\r\n        setDraggable(e) {\r\n            e.target.closest(\".ptj-draggable\").setAttribute(\"draggable\", true);\r\n        },\r\n        endDraggable(e) {\r\n            e.target.closest(\".ptj-draggable\").setAttribute(\"draggable\", false);\r\n        },\r\n        selectRow(branch) {\r\n            let key = branch.primary.toVal();\r\n            this.store.next(key);\r\n            Ctrl.buildLink();\r\n        },\r\n        getRowClass() {\r\n            let str = [];\r\n            for(let name of this.store.groups) {\r\n                str.push(this.store.model + \"-\" + name.replace(\"_\", \"-\") + \"-\" + this.branch[name]);\r\n            }\r\n            return str.join(\" \");\r\n        }\r\n\t},\r\n    computed : {\r\n        sortable() {\r\n            return true;\r\n        },\r\n        children() {\r\n            let arr = [];\r\n            let children = this.branch.children;\r\n            for(let i in children) {\r\n                const carr = children[i];\r\n                arr.push(...carr);\r\n            }\r\n            return arr;\r\n        }\r\n    },\r\n\tcomponents : {\r\n\t\r\n\t}\r\n});\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.model-tree.branch {\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  margin: 6px 0;\r\n  background-color:#111111;\r\n}\r\n\r\n.tree .ide-block {\r\n\tdisplay : none;\r\n}\r\n\r\n.dragArea {\r\n  min-height: 50px;\r\n  outline: 1px solid #777777;\r\n}\r\n\r\n\r\n</style>","class GCDragNDrop {\r\n\r\n    constructor(props = {}) {\r\n        this._handle = props.handle;\r\n        this._drop_target = props.drop_target;\r\n        this._drag_target = props.drag_target;\r\n        this._call_back = props.callback;\r\n        this._x = 0;\r\n        this._y = 0;\r\n        this._offset_x = 0;\r\n        this._offset_y = 0;\r\n        this._judder = (props.judder) ? props.judder : 5;\r\n        this._drag_node;\r\n        this._drop_node;\r\n        this._tree = props.tree;\r\n    }\r\n\r\n    isJudder(x, y) {\r\n        const dx = x - this._x;\r\n        const dy = y - this._y;\r\n      \r\n        if (dx < -5 || dx > 5) return false;\r\n        else if (dy < -5 || dy > 5) return false;\r\n        else return true;\r\n    }\r\n\r\n    getDirection(x, y) {\r\n        const dir_x = (x == this._x) ? 0 : (x > this._x) ? 1 : -1;\r\n        const dir_y = (y == this._y) ? 0 : (y > this._y) ? 1 : -1;\r\n      \r\n        return { x : dir_x, y : dir_y };\r\n    }\r\n\r\n    offset(elem) {\r\n        var rect = elem.getBoundingClientRect();\r\n        var win = elem.ownerDocument.defaultView;\r\n\r\n        return {\r\n            top: rect.top + win.pageYOffset,\r\n            left: rect.left + win.pageXOffset\r\n        };\r\n    }\r\n\r\n    insertAfter() {\r\n        let drag_id = this._drag_node.getAttribute(\"id\");\r\n        let drop_id = this._drop_node.getAttribute(\"id\");\r\n\r\n        let circular = 0;\r\n        let sort = 0;\r\n        if (this._drop_node.nextElementSibling) {\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drop_id) {\r\n                    circular = node.circular;\r\n                    sort = node.sort;\r\n                    break;\r\n                } \r\n            }\r\n\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drag_id) {\r\n                    node.circular = circular;\r\n                    node.sort = sort + 1;\r\n                } else if (node.circular == circular && node.sort > sort) {\r\n                    ++node.sort;\r\n                }\r\n            }\r\n        } else {\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drag_id) {\r\n                    node.circular = circular;\r\n                    node.sort = 0;\r\n                } \r\n            }\r\n        }\r\n    }\r\n\r\n    insertBefore() {\r\n        let drag_id = this._drag_node.getAttribute(\"id\");\r\n        let drop_id = this._drop_node.getAttribute(\"id\");\r\n\r\n        let circular = 0;\r\n        let sort = 0;\r\n        for(let i in this._tree) {\r\n            let node = this._tree[i];\r\n            if (node.id == drop_id) {\r\n                circular = node.circular;\r\n                sort = node.sort;\r\n                ++node.sort;\r\n                break;\r\n            } \r\n        }\r\n\r\n        for(let i in this._tree) {\r\n            let node = this._tree[i];\r\n            if (node.id == drag_id) {\r\n                node.circular = circular;\r\n                node.sort = sort;\r\n            } else if (node.circular == circular && node.sort > sort) {\r\n                ++node.sort;\r\n            }\r\n        }\r\n    }\r\n\r\n    dragStart(ev) {\r\n        const targ = ev.target.closest('[id]');\r\n        this._drag_node = targ;\r\n        const { top, left } = this.offset(targ);\r\n\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n\r\n        this._x = ev.clientX;\r\n        this._y = ev.clientY;\r\n    \r\n        this._offset_x = ev.clientX - left;\r\n        this._offset_y = ev.clientY - top;\r\n    }\r\n\r\n    isDroppable(ev) {\r\n        let cont = ev.target.closest(this._drop_target);\r\n        return (cont) ? true : false;\r\n    }\r\n\r\n    dragEnter(ev) {\r\n        if (!this.isDroppable(ev)) return true;\r\n        ev.preventDefault();\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n\r\n        this._drop_node = ev.target.closest(this._drag_target);\r\n\r\n        if (!this._drop_node || this._drop_node.getAttribute(\"id\") == this._drag_node.getAttribute(\"id\")) {\r\n            return;\r\n        }\r\n\r\n        const dir = this.getDirection(ev.clientX, ev.clientY);\r\n\r\n        if (dir.y == 1) {\r\n            this.insertAfter();\r\n        } else if (dir.y == -1) {\r\n            this.insertBefore();\r\n        }\r\n        this._x = ev.clientX;\r\n        this._y = ev.clientY;\r\n    }\r\n\r\n    dragOver(ev) {\r\n        if (!this.isDroppable(ev)) return true;\r\n        ev.preventDefault();\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n    }\r\n\r\n\r\n    dragEnd() {\r\n        if (this._drag_node) this._drag_node.setAttribute(\"draggable\", false);\r\n        this._drag_node = null;\r\n    }\r\n\r\n    drop(ev) {\r\n        if (!this._drop_node) return true;\r\n        ev.preventDefault();\r\n        if (this._call_back) this._call_back(this._tree);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction initDD(props) {\r\n    let drag = new GCDragNDrop(props);\r\n    let handles = document.querySelectorAll(props.handle);\r\n    handles.forEach(el => el.addAttribute(\"draggable\", true));\r\n\r\n    if (props.handle) {\r\n\r\n        let handles = document.querySelectorAll(props.handle);\r\n\r\n        handles.forEach(el => {\r\n            el.addEventListener(\"mousedown\", e => {\r\n                let cont = e.target.closest(props.drag_target);\r\n                cont.addAttribute(\"draggable\", true);\r\n            });            \r\n        });\r\n    }\r\n\r\n    props.main.addEventListener(\"dragstart\", e => drag.dragStart(e));\r\n    props.main.addEventListener(\"dragenter\", e => drag.dragEnter(e));\r\n    props.main.addEventListener(\"dragover\", e => drag.dragOver(e));\r\n    props.main.addEventListener(\"drop\", e => drag.drop(e));\r\n    props.main.addEventListener(\"dragend\", e => drag.dragEnd(e));\r\n}\r\n\r\nexport default {\r\n    initDD\r\n}","<template >\r\n  <div :class=\"Class.getClass('ptj-tree') + ' ' + store.classes + ' ptj-drop-target'\" ref=\"treeroot\">\r\n    <ptj-tree-node v-for=\"(obj, index) in store.data\" :key=\"index\" :branch=\"obj\"  />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, defineComponent } from 'vue'\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCTreeNode from \"./ptj-tree-node.vue\"\r\nimport GCDragDrop from \"../js/dragndrop.js\"\r\nimport GCFilterForm from \"./ptj-filter-form.vue\"\r\nimport GCSelectFields from \"./ptj-selectfields.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n\tname : \"ptj-tree\",\r\n    setup(props) {\r\n        let base = { store : Ctrl.getStore(), treeroot : ref(null), Class };\r\n        onMounted(() => {\r\n           //if (ctrl.sort) {\r\n             GCDragDrop.initDD({\r\n               handle : '.ptj-drag-handle',\r\n               drag_target : '.ptj-draggable',\r\n               drop_target : '.ptj-drop-target',\r\n               main : base.treeroot.value,\r\n               tree : base.store.data,\r\n               callback : base.store.saveSort\r\n             });\r\n           //}\r\n        });\r\n\r\n       return base;\r\n   },\r\n    components : {\r\n        \"ptj-nav\" : GCNav,\r\n        \"ptj-tree-node\" : GCTreeNode,\r\n        \"ptj-filter-form\" : GCFilterForm,\r\n        \"ptj-selectfields\" : GCSelectFields\r\n    }\r\n});\r\n\r\n\r\n</script>\r\n","<template >\r\n  <div :class=\"Class.getClass('ptj-tree') + ' ' + store.classes + ' ptj-drop-target'\" ref=\"treeroot\">\r\n    <ptj-tree-node v-for=\"(obj, index) in store.data\" :key=\"index\" :branch=\"obj\"  />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, defineComponent } from 'vue'\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCTreeNode from \"./ptj-tree-node.vue\"\r\nimport GCDragDrop from \"../js/dragndrop.js\"\r\nimport GCFilterForm from \"./ptj-filter-form.vue\"\r\nimport GCSelectFields from \"./ptj-selectfields.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n\tname : \"ptj-tree\",\r\n    setup(props) {\r\n        let base = { store : Ctrl.getStore(), treeroot : ref(null), Class };\r\n        onMounted(() => {\r\n           //if (ctrl.sort) {\r\n             GCDragDrop.initDD({\r\n               handle : '.ptj-drag-handle',\r\n               drag_target : '.ptj-draggable',\r\n               drop_target : '.ptj-drop-target',\r\n               main : base.treeroot.value,\r\n               tree : base.store.data,\r\n               callback : base.store.saveSort\r\n             });\r\n           //}\r\n        });\r\n\r\n       return base;\r\n   },\r\n    components : {\r\n        \"ptj-nav\" : GCNav,\r\n        \"ptj-tree-node\" : GCTreeNode,\r\n        \"ptj-filter-form\" : GCFilterForm,\r\n        \"ptj-selectfields\" : GCSelectFields\r\n    }\r\n});\r\n\r\n\r\n</script>\r\n","<template>\r\n    <table :class=\"Class.getClass('ptj-table') + ' ' + store.classes\">\r\n    <thead>\r\n        <tr :class=\"Class.getClass('ptj-table-header')\">\r\n        <th v-for=\"cell in store.fields\" \r\n            v-show=\"cell.summary\" \r\n            :key=\"cell.name\" \r\n            :class=\"Class.getClass('ptj-table-header-cell') + ' ' + cell.name.replace('_', '-')\"\r\n            @click=\"orderBy(cell.name);\"\r\n        >{{ cell.label }}\r\n            <span v-if=\"this.order.name == cell.name && this.order.dir == 'asc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_up</span>\r\n            <span v-if=\"this.order.name == cell.name && this.order.dir == 'desc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_down</span>\r\n        </th>\r\n        <th v-if=\"sortable\">&nbsp;</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"(obj, rindex) in store.data\" :key=\"rindex\" :class=\"Class.getClass('ptj-table-row') + ' ' + this.getRowClass(obj)\" @click=\"next(obj.primary.toVal());\">\r\n        <td v-for=\"(field, name) in obj.cells\" :key=\"name\" v-show=\"field.meta.summary\" :class=\"Class.getClass('ptj-table-cell') + ' ' + name.replace('_', '-')\">{{ field.display }}</td>\r\n        <td :class=\"Class.getClass('ptj-table-cell-sortable')\" v-if=\"sortable\">\r\n            <a data-action=\"more\" class=\"button\" @click.prevent=\"toggle\" draggable=\"true\">\r\n                <span class=\"material-icons\">drag</span>\r\n            </a>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n    <ptj-pagination v-if=\"store.data_template.limit > 0\" />\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport GCPagination from \"./ptj-pagination.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    name: 'ptj-table',\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class, order : { name : '', dir : ''}}\r\n    },\r\n    methods : {\r\n        next(key) {\r\n            this.store.next(key);\r\n            Ctrl.buildLink();\r\n        },\r\n        orderBy(name) {\r\n            if (this.store.pages > 0) {\r\n                this.order.dir = (!this.order.name != name || this.order.dir  == \"desc\") ? \"asc\" : \"desc\";\r\n                this.order.name = name;\r\n                let sort = [];\r\n                sort[this.order.name] = this.order.dir;\r\n                this.store.data_template.sort = sort;\r\n                this.store.load();\r\n            } else {\r\n                //custom sort on the table\r\n                if (this.order.name != name || this.order.dir == \"desc\") {\r\n                    this.store.data.sort(function(x, y) {\r\n                        let xval = x.getCell(name).toVal();\r\n                        let yval = y.getCell(name).toVal();\r\n                        if (xval < yval) {\r\n                            return -1;\r\n                        } else if (xval > yval) {\r\n                            return 1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    });\r\n                    this.order.name = name;\r\n                    this.order.dir = \"asc\";\r\n                } else {\r\n                    this.store.data.sort(function(x, y) {\r\n                        let xval = x.getCell(name).toVal();\r\n                        let yval = y.getCell(name).toVal();\r\n                        if (xval < yval) {\r\n                            return 1;\r\n                        } else if (xval > yval) {\r\n                            return -1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    });\r\n                    this.order.name = name;\r\n                    this.order.dir = \"desc\";\r\n                }\r\n            }\r\n        },\r\n        getRowClass(obj) {\r\n            let str = [];\r\n            for(let name of this.store.groups) {\r\n                str.push(this.store.model + \"-\" + name.replace(\"_\", \"-\") + \"-\" + obj[name]);\r\n            }\r\n            return str.join(\" \");\r\n        }\r\n    },\r\n    computed : {\r\n        sortable() {\r\n            return (this.store.sort) ? true : false;\r\n        },\r\n        overlimit() {\r\n            return false;\r\n        },\r\n        rowclass() {\r\n\r\n        }\r\n    },\r\n    components : {\r\n        \"ptj-pagination\" : GCPagination,\r\n    }\r\n\r\n   \r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n</style>","<template>\r\n    <table :class=\"Class.getClass('ptj-table') + ' ' + store.classes\">\r\n    <thead>\r\n        <tr :class=\"Class.getClass('ptj-table-header')\">\r\n        <th v-for=\"cell in store.fields\" \r\n            v-show=\"cell.summary\" \r\n            :key=\"cell.name\" \r\n            :class=\"Class.getClass('ptj-table-header-cell') + ' ' + cell.name.replace('_', '-')\"\r\n            @click=\"orderBy(cell.name);\"\r\n        >{{ cell.label }}\r\n            <span v-if=\"this.order.name == cell.name && this.order.dir == 'asc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_up</span>\r\n            <span v-if=\"this.order.name == cell.name && this.order.dir == 'desc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_down</span>\r\n        </th>\r\n        <th v-if=\"sortable\">&nbsp;</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"(obj, rindex) in store.data\" :key=\"rindex\" :class=\"Class.getClass('ptj-table-row') + ' ' + this.getRowClass(obj)\" @click=\"next(obj.primary.toVal());\">\r\n        <td v-for=\"(field, name) in obj.cells\" :key=\"name\" v-show=\"field.meta.summary\" :class=\"Class.getClass('ptj-table-cell') + ' ' + name.replace('_', '-')\">{{ field.display }}</td>\r\n        <td :class=\"Class.getClass('ptj-table-cell-sortable')\" v-if=\"sortable\">\r\n            <a data-action=\"more\" class=\"button\" @click.prevent=\"toggle\" draggable=\"true\">\r\n                <span class=\"material-icons\">drag</span>\r\n            </a>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n    <ptj-pagination v-if=\"store.data_template.limit > 0\" />\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport GCPagination from \"./ptj-pagination.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    name: 'ptj-table',\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class, order : { name : '', dir : ''}}\r\n    },\r\n    methods : {\r\n        next(key) {\r\n            this.store.next(key);\r\n            Ctrl.buildLink();\r\n        },\r\n        orderBy(name) {\r\n            if (this.store.pages > 0) {\r\n                this.order.dir = (!this.order.name != name || this.order.dir  == \"desc\") ? \"asc\" : \"desc\";\r\n                this.order.name = name;\r\n                let sort = [];\r\n                sort[this.order.name] = this.order.dir;\r\n                this.store.data_template.sort = sort;\r\n                this.store.load();\r\n            } else {\r\n                //custom sort on the table\r\n                if (this.order.name != name || this.order.dir == \"desc\") {\r\n                    this.store.data.sort(function(x, y) {\r\n                        let xval = x.getCell(name).toVal();\r\n                        let yval = y.getCell(name).toVal();\r\n                        if (xval < yval) {\r\n                            return -1;\r\n                        } else if (xval > yval) {\r\n                            return 1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    });\r\n                    this.order.name = name;\r\n                    this.order.dir = \"asc\";\r\n                } else {\r\n                    this.store.data.sort(function(x, y) {\r\n                        let xval = x.getCell(name).toVal();\r\n                        let yval = y.getCell(name).toVal();\r\n                        if (xval < yval) {\r\n                            return 1;\r\n                        } else if (xval > yval) {\r\n                            return -1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    });\r\n                    this.order.name = name;\r\n                    this.order.dir = \"desc\";\r\n                }\r\n            }\r\n        },\r\n        getRowClass(obj) {\r\n            let str = [];\r\n            for(let name of this.store.groups) {\r\n                str.push(this.store.model + \"-\" + name.replace(\"_\", \"-\") + \"-\" + obj[name]);\r\n            }\r\n            return str.join(\" \");\r\n        }\r\n    },\r\n    computed : {\r\n        sortable() {\r\n            return (this.store.sort) ? true : false;\r\n        },\r\n        overlimit() {\r\n            return false;\r\n        },\r\n        rowclass() {\r\n\r\n        }\r\n    },\r\n    components : {\r\n        \"ptj-pagination\" : GCPagination,\r\n    }\r\n\r\n   \r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n</style>","<template>\r\n  <div :class=\"Class.getClass('ptj-list') + ' ' + store.classes\">\r\n    <div v-for=\"(combinations, index) in getIndexCombinations\" :key=\"index\">\r\n      <h3><span\r\n              v-for=\"(tag, index) in combinations.tags\"\r\n              :key=\"index\"\r\n              >{{ tag }}&nbsp;</span></h3>\r\n      <ul>\r\n        <li v-for=\"ckey in combinations.data\" :key=\"ckey\">\r\n          <a @click=\"next(store.data[ckey].primary.toVal())\">\r\n            {{ store.data[ckey].getSummary() }}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from \"vue\";\r\nimport Ctrl from \"../js/controller.js\";\r\nimport Class from \"../js/classinjection.js\";\r\n\r\nexport default defineComponent({\r\n  name: \"ptj-list\",\r\n  setup() {\r\n    return { store: Ctrl.getStore(), Class };\r\n  },\r\n  methods: {\r\n    next(key) {\r\n      this.store.next(key);\r\n      Ctrl.buildLink();\r\n    },\r\n    getCombinations(tag, data, combos) {\r\n      const ncombos = [];\r\n      if (combos.length == 0) {\r\n          for(let d in data) {\r\n            ncombos.push({ tags : [ data[d].display ], data : data[d].contains});\r\n          }\r\n      } else {\r\n        for (let c of combos) {\r\n          for(let d in data) {\r\n            let tags = c.tags;\r\n            tags.push(d.display);\r\n            ncombos.push({ tags : tags, data : c.data.filter( value => data[d].contains.includes(value))});\r\n          }\r\n        }\r\n      }\r\n      return ncombos;\r\n    }\r\n  },\r\n  computed: {\r\n    getIndexCombinations() {\r\n      let combos = [];\r\n      for (let group in this.store.indexes) {\r\n          combos = this.getCombinations(group, this.store.indexes[group], combos);\r\n      }\r\n      return combos;\r\n    },\r\n  },\r\n});\r\n</script>\r\n\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-list') + ' ' + store.classes\">\r\n    <div v-for=\"(combinations, index) in getIndexCombinations\" :key=\"index\">\r\n      <h3><span\r\n              v-for=\"(tag, index) in combinations.tags\"\r\n              :key=\"index\"\r\n              >{{ tag }}&nbsp;</span></h3>\r\n      <ul>\r\n        <li v-for=\"ckey in combinations.data\" :key=\"ckey\">\r\n          <a @click=\"next(store.data[ckey].primary.toVal())\">\r\n            {{ store.data[ckey].getSummary() }}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from \"vue\";\r\nimport Ctrl from \"../js/controller.js\";\r\nimport Class from \"../js/classinjection.js\";\r\n\r\nexport default defineComponent({\r\n  name: \"ptj-list\",\r\n  setup() {\r\n    return { store: Ctrl.getStore(), Class };\r\n  },\r\n  methods: {\r\n    next(key) {\r\n      this.store.next(key);\r\n      Ctrl.buildLink();\r\n    },\r\n    getCombinations(tag, data, combos) {\r\n      const ncombos = [];\r\n      if (combos.length == 0) {\r\n          for(let d in data) {\r\n            ncombos.push({ tags : [ data[d].display ], data : data[d].contains});\r\n          }\r\n      } else {\r\n        for (let c of combos) {\r\n          for(let d in data) {\r\n            let tags = c.tags;\r\n            tags.push(d.display);\r\n            ncombos.push({ tags : tags, data : c.data.filter( value => data[d].contains.includes(value))});\r\n          }\r\n        }\r\n      }\r\n      return ncombos;\r\n    }\r\n  },\r\n  computed: {\r\n    getIndexCombinations() {\r\n      let combos = [];\r\n      for (let group in this.store.indexes) {\r\n          combos = this.getCombinations(group, this.store.indexes[group], combos);\r\n      }\r\n      return combos;\r\n    },\r\n  },\r\n});\r\n</script>\r\n\r\n","<template>\r\n<div :class=\"Class.getClass('ptj-repo') + ' ' + store.classes\">\r\n    <ptj-repo-header  />\r\n    <component :key=\"store.key\" :is=\"store.rawcomponent\" />\r\n</div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport PTJRepoHeader from \"./ptj-repo-header.vue\"\r\nimport PTJTree from \"./ptj-tree.vue\"\r\nimport PTJTable from \"./ptj-table.vue\"\r\nimport PTJList from \"./ptj-list.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-repo',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n    components : {\r\n        \"ptj-repo-header\" : PTJRepoHeader,\r\n        \"ptj-tree\" : PTJTree,\r\n        \"ptj-table\" : PTJTable,\r\n        \"ptj-list\" : PTJList\r\n    }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n\r\n.ptj-data-row:nth-child(odd) {background : #CCC}\r\n\r\n</style>","<template>\r\n<div :class=\"Class.getClass('ptj-repo') + ' ' + store.classes\">\r\n    <ptj-repo-header  />\r\n    <component :key=\"store.key\" :is=\"store.rawcomponent\" />\r\n</div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport PTJRepoHeader from \"./ptj-repo-header.vue\"\r\nimport PTJTree from \"./ptj-tree.vue\"\r\nimport PTJTable from \"./ptj-table.vue\"\r\nimport PTJList from \"./ptj-list.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-repo',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n    components : {\r\n        \"ptj-repo-header\" : PTJRepoHeader,\r\n        \"ptj-tree\" : PTJTree,\r\n        \"ptj-table\" : PTJTable,\r\n        \"ptj-list\" : PTJList\r\n    }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n\r\n.ptj-data-row:nth-child(odd) {background : #CCC}\r\n\r\n</style>","<template>\r\n    <div :class=\"Class.getClass('ptj-single-item') + ' ' + store.classes\">\r\n        <h1>{{ store.title }}</h1>\r\n        <ptj-nav :actions=\"store.actions\" :class=\"Class.getClass('ptj-single-item-actions')\" />\r\n        <div v-for=\"(field, index) in store.data.cells\" :key=\"index\" :class=\"Class.getClass('ptj-single-item-row') + ' ' + field.name\">\r\n            <span :class=\"Class.getClass('ptj-single-item-label')\">{{ field.meta.label }}</span>&nbsp;<span :class=\"Class.getClass('ptj-single-item-value')\">{{ field.val }}</span>\r\n        </div>\r\n    </div>\r\n    <ptj-nav :actions=\"store.children\" :class=\"Class.getClass('ptj-single-item-children')\" />\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-single-item',\r\n  props : {\r\n      active : {\r\n          type : Boolean,\r\n          default : false\r\n      }\r\n  },\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  computed : {\r\n      editnav() {\r\n          return this.store.actions.put;\r\n      },\r\n      delnav() {\r\n          return this.store.actions.delete;\r\n      },\r\n      title() {\r\n          return this.store.title + \" \" + this.store.summary();\r\n      }\r\n  },\r\n  methods : {\r\n      runDel() {\r\n          this.store.runDelete();\r\n      }\r\n  },\r\n  components : {\r\n    \"ptj-nav\" : GCNav, \"ptj-widget\" : GCWidget\r\n  }\r\n});\r\n    \r\n\r\n</script>","<template>\r\n    <div :class=\"Class.getClass('ptj-single-item') + ' ' + store.classes\">\r\n        <h1>{{ store.title }}</h1>\r\n        <ptj-nav :actions=\"store.actions\" :class=\"Class.getClass('ptj-single-item-actions')\" />\r\n        <div v-for=\"(field, index) in store.data.cells\" :key=\"index\" :class=\"Class.getClass('ptj-single-item-row') + ' ' + field.name\">\r\n            <span :class=\"Class.getClass('ptj-single-item-label')\">{{ field.meta.label }}</span>&nbsp;<span :class=\"Class.getClass('ptj-single-item-value')\">{{ field.val }}</span>\r\n        </div>\r\n    </div>\r\n    <ptj-nav :actions=\"store.children\" :class=\"Class.getClass('ptj-single-item-children')\" />\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-single-item',\r\n  props : {\r\n      active : {\r\n          type : Boolean,\r\n          default : false\r\n      }\r\n  },\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  computed : {\r\n      editnav() {\r\n          return this.store.actions.put;\r\n      },\r\n      delnav() {\r\n          return this.store.actions.delete;\r\n      },\r\n      title() {\r\n          return this.store.title + \" \" + this.store.summary();\r\n      }\r\n  },\r\n  methods : {\r\n      runDel() {\r\n          this.store.runDelete();\r\n      }\r\n  },\r\n  components : {\r\n    \"ptj-nav\" : GCNav, \"ptj-widget\" : GCWidget\r\n  }\r\n});\r\n    \r\n\r\n</script>","<template>\r\n <div :class=\"Class.getClass('ptj-accounthandler')\">\r\n    <h1>{{ store.title }}</h1>\r\n    <ptj-form />\r\n    <ptj-nav :action=\"store.actions\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCForm from \"./ptj-form.vue\"\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"./../js/classinjection.js\"\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-login',\r\n  setup() {\r\n      let store = Ctrl.getStore()\r\n      store.next = () => {\r\n           Ctrl.reloadFromBase();\r\n      }\r\n      return { store : store, Class }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-form\" : GCForm, \"ptj-nav\" : GCNav\r\n    }\r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n <div :class=\"Class.getClass('ptj-accounthandler')\">\r\n    <h1>{{ store.title }}</h1>\r\n    <ptj-form />\r\n    <ptj-nav :action=\"store.actions\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCForm from \"./ptj-form.vue\"\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"./../js/classinjection.js\"\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-login',\r\n  setup() {\r\n      let store = Ctrl.getStore()\r\n      store.next = () => {\r\n           Ctrl.reloadFromBase();\r\n      }\r\n      return { store : store, Class }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-form\" : GCForm, \"ptj-nav\" : GCNav\r\n    }\r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n    <ptj-widget :title=\"title\" :active=\"active\">\r\n        <div :class=\"classes\">\r\n            <a @click=\"next\"><span class=\"material-icons\">view_carousel</span></a>\r\n            <div v-for=\"(field, index) in store.fields\" :key=\"index\" :class=\"rowclass + ' ' + field.name\">\r\n                <span :class=\"labelclass\">{{ field.label }}</span>&nbsp;<span :class=\"rowclass\">{{ field.val }}</span>\r\n            </div>\r\n        </div>\r\n    </ptj-widget>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-card',\r\n  props : {\r\n      store : Object,\r\n      active : {\r\n          type : Boolean,\r\n          default : false\r\n      }\r\n  },\r\n  methods : {\r\n      next() {\r\n          this.store.next();\r\n          Ctrl.buildLink();\r\n      }\r\n  },\r\n  computed : {\r\n      title() {\r\n          return this.store.title;\r\n      },\r\n      classes() {\r\n          return Class.getClass(\"ptj-card\")  + \" \" + this.store.classes;\r\n      },\r\n      rowclass() {\r\n          return Class.getClass(\"ptj-card-row\");\r\n      },\r\n      labelclass() {\r\n          return Class.getClass(\"ptj-card-label\");\r\n      },\r\n      valueclass() {\r\n          return Class.getClass(\"ptj-card-value\");\r\n      }\r\n  },\r\n  components : {\r\n    \"ptj-widget\" : GCWidget\r\n  }\r\n});\r\n    \r\n\r\n</script>","<template>\r\n    <ptj-widget :title=\"title\" :active=\"active\">\r\n        <div :class=\"classes\">\r\n            <a @click=\"next\"><span class=\"material-icons\">view_carousel</span></a>\r\n            <div v-for=\"(field, index) in store.fields\" :key=\"index\" :class=\"rowclass + ' ' + field.name\">\r\n                <span :class=\"labelclass\">{{ field.label }}</span>&nbsp;<span :class=\"rowclass\">{{ field.val }}</span>\r\n            </div>\r\n        </div>\r\n    </ptj-widget>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-card',\r\n  props : {\r\n      store : Object,\r\n      active : {\r\n          type : Boolean,\r\n          default : false\r\n      }\r\n  },\r\n  methods : {\r\n      next() {\r\n          this.store.next();\r\n          Ctrl.buildLink();\r\n      }\r\n  },\r\n  computed : {\r\n      title() {\r\n          return this.store.title;\r\n      },\r\n      classes() {\r\n          return Class.getClass(\"ptj-card\")  + \" \" + this.store.classes;\r\n      },\r\n      rowclass() {\r\n          return Class.getClass(\"ptj-card-row\");\r\n      },\r\n      labelclass() {\r\n          return Class.getClass(\"ptj-card-label\");\r\n      },\r\n      valueclass() {\r\n          return Class.getClass(\"ptj-card-value\");\r\n      }\r\n  },\r\n  components : {\r\n    \"ptj-widget\" : GCWidget\r\n  }\r\n});\r\n    \r\n\r\n</script>","<template>\r\n    <div :class=\"Class.getClass('ptj-tabs')\">\r\n        <div :class=\"Class.getClass('ptj-tabs-card')\" v-for=\"parent in parents\" :key=\"parent.name + '-parent'\">\r\n            <ptj-card :store=\"parent.store\" />\r\n        </div>\r\n      \r\n        <div :class=\"Class.getClass('ptj-tabs-tab')\" >\r\n            <component :key=\"store.index\" :is=\"store.component\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport GCForm from \"./ptj-form.vue\"\r\nimport GCRepo from \"./ptj-repo.vue\"\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCSingleItem from \"./ptj-single-item.vue\"\r\nimport GCAccountHandler from \"./ptj-accounthandler.vue\"\r\nimport GCCard from \"./ptj-card.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        index: {\r\n            type : Boolean,\r\n        }\r\n    },\r\n    setup(props) {\r\n        if (props.index) Ctrl.next();\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n    computed : {\r\n        parents() {\r\n            return [];\r\n        }\r\n    },\r\n    components : {\r\n        'ptj-form' : GCForm,\r\n        'ptj-nav' : GCNav,\r\n        'ptj-single-item' : GCSingleItem,\r\n        'ptj-account-handler' : GCAccountHandler,\r\n        'ptj-repo' : GCRepo,\r\n        'ptj-card' : GCCard\r\n    }\r\n\r\n});\r\n</script>","<template>\r\n    <div :class=\"Class.getClass('ptj-tabs')\">\r\n        <div :class=\"Class.getClass('ptj-tabs-card')\" v-for=\"parent in parents\" :key=\"parent.name + '-parent'\">\r\n            <ptj-card :store=\"parent.store\" />\r\n        </div>\r\n      \r\n        <div :class=\"Class.getClass('ptj-tabs-tab')\" >\r\n            <component :key=\"store.index\" :is=\"store.component\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport GCForm from \"./ptj-form.vue\"\r\nimport GCRepo from \"./ptj-repo.vue\"\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCSingleItem from \"./ptj-single-item.vue\"\r\nimport GCAccountHandler from \"./ptj-accounthandler.vue\"\r\nimport GCCard from \"./ptj-card.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        index: {\r\n            type : Boolean,\r\n        }\r\n    },\r\n    setup(props) {\r\n        if (props.index) Ctrl.next();\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n    computed : {\r\n        parents() {\r\n            return [];\r\n        }\r\n    },\r\n    components : {\r\n        'ptj-form' : GCForm,\r\n        'ptj-nav' : GCNav,\r\n        'ptj-single-item' : GCSingleItem,\r\n        'ptj-account-handler' : GCAccountHandler,\r\n        'ptj-repo' : GCRepo,\r\n        'ptj-card' : GCCard\r\n    }\r\n\r\n});\r\n</script>","<template>\r\n    <Teleport to=\"#ptj-accountdetails\">\r\n    <a :class=\"Class.getClass('ptj-account-details-logout')\" @click=\"logout\">Logout</a>\r\n    </Teleport>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Client from \"./../js/client.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"./../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { Class }\r\n    },\r\n    methods : {\r\n        logout() {\r\n            Client.post(\"/core-logout\")\r\n            .then(() => {\r\n                Ctrl.reloadFromBase();\r\n            });\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Teleport to=\"#ptj-accountdetails\">\r\n    <a :class=\"Class.getClass('ptj-account-details-logout')\" @click=\"logout\">Logout</a>\r\n    </Teleport>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Client from \"./../js/client.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"./../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { Class }\r\n    },\r\n    methods : {\r\n        logout() {\r\n            Client.post(\"/core-logout\")\r\n            .then(() => {\r\n                Ctrl.reloadFromBase();\r\n            });\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n  <ptj-account-details v-if=\"isaccount\" />\r\n  <div :class=\"Class.getClass('ptj-root')\" v-for=\"group in groups\" :key=\"group.index\">\r\n    <ptj-tabs  :index=\"true\"  />\r\n </div>\r\n</template>\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCTabs from \"./ptj-tabs.vue\"\r\nimport GCAccountDetails from \"./ptj-account-details.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    name : 'ptj-root',\r\n    setup() {\r\n        return { Class }\r\n    },\r\n    computed : {\r\n        groups() {\r\n            return Ctrl.store.models;\r\n        },\r\n        isaccount() {\r\n            return Ctrl.store.profile == \"public\" ? false : true;\r\n        }\r\n    },\r\n    components : {\r\n        'ptj-tabs' : GCTabs, \"ptj-account-details\" : GCAccountDetails\r\n\r\n    }\r\n});\r\n</script>","<template>\r\n  <ptj-account-details v-if=\"isaccount\" />\r\n  <div :class=\"Class.getClass('ptj-root')\" v-for=\"group in groups\" :key=\"group.index\">\r\n    <ptj-tabs  :index=\"true\"  />\r\n </div>\r\n</template>\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCTabs from \"./ptj-tabs.vue\"\r\nimport GCAccountDetails from \"./ptj-account-details.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    name : 'ptj-root',\r\n    setup() {\r\n        return { Class }\r\n    },\r\n    computed : {\r\n        groups() {\r\n            return Ctrl.store.models;\r\n        },\r\n        isaccount() {\r\n            return Ctrl.store.profile == \"public\" ? false : true;\r\n        }\r\n    },\r\n    components : {\r\n        'ptj-tabs' : GCTabs, \"ptj-account-details\" : GCAccountDetails\r\n\r\n    }\r\n});\r\n</script>","import Ctrl from \"./presstojam/src/js/controller.js\"\r\nimport PTJRoot from \"./presstojam/src/components/ptj-root.vue\"\r\nimport { createApp } from \"vue\"\r\n\r\nfunction runApp(mount) {\r\n    const app = createApp(PTJRoot);\r\n    app.mount(mount);\r\n    return app;\r\n}\r\n\r\nexport default { \r\n    Ctrl, runApp\r\n}\r\n\r\n\r\n"],"names":["main_url","last_status","last_ok","custom_headers","status_handlers","debug","regCustomHeader","name","value","regStatusHandler","status","handler","setURL","url","regDebug","is_debug","run","headers","mode","cache","credentials","fetch","then","response","ok","json","val","omethod","method","Error","catch","err","console","log","setDebug","data","get","this","params","URLSearchParams","graph","i","Array","isArray","append","JSON","stringify","indexOf","toString","getprimary","post","body","put","patch","delete","DataCell","constructor","meta","_meta","_store","reactive","display","error","is_validate_on","computed","set","clean","validate","showError","default","type","validateon","on","toVal","setVal","DataRow","metarow","_cells","_references","_children","_parent","_primary","applyMetaRow","primary","parent","fields","field","references","children","appendPrimary","addChild","child","push","row","ref","reference","getSummary","cell","cells","getCell","str","isSummary","join","serialize","state","getCellByType","DataTemplateCell","atts","min","max","val1","val2","addParam","obj","cobj","Object","keys","length","DataTemplate","_limit","_page","_fields","_sort","_groups","_active","_max_pages","initField","_data","limit","sort","page","groups","active","max_pages","pages","convertToParams","param","convertDataToParams","convertFromParams","parse","hasOwnProperty","convertToAPIParams","__limit","__page","__fields","__sort","error_invalid_map","getError","code","Validator","_min","_max","_has","_has_not","_errors","has","nothas","nhas","validateSize","MIN_VALUE","MAX_VALUE","OK","isNaN","match","HAS_NOT","HAS","Field","_name","_type","_is_primary","_is_parent","_valid","_atts","_confirm","_readonly","_placeholder","_conditions","_link","_reference","_error","_label","_on","summary","options","_default","_validator","_multiple","x","validation","confirm","readonly","placeholder","def","asset","_asset","conditions","link","multiple","mult","is_primary","is_parent","label","isprimary","required","isparent","Errors","saveAsset","id","saveFile","Promise","resolve","setOptions","Client","__data","key","e","opt","Boolean","exp","calcValue","Asset","_size","_blob","_uploaded","_chunk_size","_url","_key","_key_field","chunk_size","chunk","blob","keyfield","size","uploaded","getChunk","index","start","end","view","DataView","buffer","n","byteLength","getInt8","loadFile","alert","delFile","file","reject","fr","FileReader","_self","onload","target","result","onerror","readAsArrayBuffer","promises","chunks","Math","ceil","__chunk","__blob","all","MetaRow","addReference","map","_model","exportFields","store","cfields","_states","_limit_fields","contains","exportToStore","_ctarget","orig","to","model","param_str","updateIntention","vals","resetIntention","parseInt","convertMaps","omaps","ni","unshift","splice","ModelInstance","stage","_title","_component","_rawcomponent","_actions","_next","_index","_primary_key_name","_parent_key_name","_circular","_siblings","_classes","_default_state","_settings","_meta_row","_data_template","_indexes","_stage","_primary_field","_to","currentstate","_active_state","default_state","classes","replace","_state","applySettings","settings","snakeCase","buildMetaRow","states","use_fields","par","p_meta","initState","primarykey","parentkey","siblings","circular","loadURL","saveURL","initDataTemplate","_meta_primary_key_name","load","__to","client","count","__status","mapRepoData","mapData","reload","rLoadObj","_active_children","indexData","indexes","group","ckey","submit","request","message","statusText","assets","progress","total","promise","buildLink","intention","setting","_change_settings","ChangeAction","actions","component","rawcomponent","title","action","submiturl","saveurl","disable_filter","disable_selectfields","loadurl","r","next","sibling","setPage","data_template","async","_primary_key","key_states","primary_key","parent_key","login","createPrimaryKey","_keys","Model","_map","_previous_map","_response","_instance","copy","injectCustomSettings","initModel","pmap","init","action_map","CtrlGroupMap","_param_str","convertToURL","convertFromURL","parts","split","pop","maps","trigger_cb","route_base","createMap","trigger","trig","resetMaps","str_parts","window","location","protocol","host","base","URL","url_str","searchParams","url_obj","pathname","param_obj","setBase","getMaps","cb","runRoute","uri","href","search","onpopstate","event","document","setRoute","history","pushState","hardSetRoute","route","regCallback","callback","softRoute","profile","_models","_seeker","buildModel","Map","models","Router","setSettings","mapper","initProfile","__profile","assumeRole","role","removeRole","soft","omap","cmap","runLink","runData","reloadFromBase","getStore","classes_dict","regClass","getClass","defineComponent","props","Number","String","setup","Class","styleInject","css","insertAt","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","_createElementBlock","class","_ctx","components","GCError","_createElementVNode","onBlur","_createVNode","cval","isvalidateon","setValidateOn","selected","disabled","_hoisted_2","option","methods","html","setFile","files","onChange","num","floor","fstate","globalerror","Ctrl","clearErrors","GCInput","GCConfirm","GCSelect","GCRadio","GCCheckbox","GCTextarea","GCAssetField","GCProgressBar","onSubmit","_createBlock","stores","_createCommentVNode","onClick","show","toggleWidget","_hoisted_3","_renderSlot","GCFormSelect","GCFilterFormTime","GCFilterFormCheckbox","GCWidget","getActiveClass","GCNav","GCFilterForm","GCPagination","GCSelectFields","branch","draggable","ischild","toggle_state","toggle","setDraggable","closest","setAttribute","endDraggable","selectRow","getRowClass","sortable","arr","carr","stop","onMousedown","onMouseup","GCDragNDrop","_handle","handle","_drop_target","drop_target","_drag_target","drag_target","_call_back","_x","_y","_offset_x","_offset_y","_judder","judder","_drag_node","_drop_node","_tree","tree","isJudder","y","dx","dy","getDirection","offset","elem","rect","getBoundingClientRect","win","ownerDocument","defaultView","top","pageYOffset","left","pageXOffset","insertAfter","drag_id","getAttribute","drop_id","nextElementSibling","node","dragStart","ev","targ","dataTransfer","dropEffect","clientX","clientY","isDroppable","dragEnter","preventDefault","dir","dragOver","dragEnd","drop","initDD","drag","querySelectorAll","forEach","el","addAttribute","addEventListener","main","treeroot","onMounted","GCDragDrop","saveSort","GCTreeNode","order","orderBy","xval","yval","overlimit","rowclass","rindex","getCombinations","tag","combos","ncombos","d","tags","c","filter","includes","getIndexCombinations","combinations","_Fragment","PTJRepoHeader","PTJTree","PTJTable","PTJList","editnav","delnav","runDel","runDelete","GCForm","labelclass","valueclass","parents","GCSingleItem","GCAccountHandler","GCRepo","GCCard","logout","isaccount","GCTabs","GCAccountDetails","runApp","mount","app","createApp","PTJRoot"],"mappings":"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"}