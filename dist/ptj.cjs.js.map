{"version":3,"file":"ptj.cjs.js","sources":["../presstojam/src/js/client.js","../presstojam/src/js/error.js","../presstojam/src/js/validator.js","../presstojam/src/js/field.js","../presstojam/src/js/metarow.js","../presstojam/src/js/datacell.js","../presstojam/src/js/datatemplate.js","../presstojam/src/js/datarow.js","../presstojam/src/js/changeaction.js","../presstojam/src/js/model.js","../presstojam/src/js/ctrlmap.js","../presstojam/src/js/router.js","../presstojam/src/js/controller.js","../presstojam/src/js/classinjection.js","../presstojam/src/components/ptj-progress-bar.vue","../node_modules/style-inject/dist/style-inject.es.js","../presstojam/src/components/ptj-progress-bar.vue?vue&type=template&id=460b10ff&lang.js","../presstojam/src/components/ptj-error.vue","../presstojam/src/components/ptj-error.vue?vue&type=template&id=c05300a8&lang.js","../presstojam/src/components/ptj-form-row.vue","../presstojam/src/components/ptj-form-row.vue?vue&type=template&id=b7109e46&lang.js","../presstojam/src/components/ptj-number.vue","../presstojam/src/components/ptj-number.vue?vue&type=template&id=36993856&lang.js","../presstojam/src/components/ptj-flag.vue","../presstojam/src/components/ptj-flag.vue?vue&type=template&id=d3986910&lang.js","../presstojam/src/components/ptj-id.vue","../presstojam/src/components/ptj-id.vue?vue&type=template&id=123692b2&lang.js","../presstojam/src/components/ptj-time.vue","../presstojam/src/components/ptj-time.vue?vue&type=template&id=8ba0f34e&lang.js","../presstojam/src/components/ptj-string-editable.vue","../presstojam/src/components/ptj-string-editable.vue?vue&type=template&id=56545178&lang.js","../presstojam/src/components/ptj-string-display.vue","../presstojam/src/components/ptj-string-display.vue?vue&type=template&id=02356912&lang.js","../presstojam/src/components/ptj-string-filter.vue","../presstojam/src/components/ptj-string-filter.vue?vue&type=template&id=3b970750&lang.js","../presstojam/src/components/ptj-string.vue","../presstojam/src/components/ptj-string.vue?vue&type=template&id=c35f76c6&lang.js","../presstojam/src/components/ptj-asset.vue","../presstojam/src/components/ptj-asset.vue?vue&type=template&id=4ad036d8&lang.js","../presstojam/src/components/ptj-form.vue","../presstojam/src/components/ptj-form.vue?vue&type=template&id=523d6cd0&lang.js","../presstojam/src/components/ptj-nav.vue","../presstojam/src/components/ptj-nav.vue?vue&type=template&id=262eb772&lang.js","../presstojam/src/components/ptj-widget-window.vue","../presstojam/src/components/ptj-widget-window.vue?vue&type=template&id=da476e86&lang.js","../presstojam/src/components/ptj-filter-form.vue","../presstojam/src/components/ptj-filter-form.vue?vue&type=template&id=71ada21d&lang.js","../presstojam/src/components/ptj-pagination.vue","../presstojam/src/components/ptj-pagination.vue?vue&type=template&id=43dcd5a6&lang.js","../presstojam/src/components/ptj-selectfields.vue","../presstojam/src/components/ptj-selectfields.vue?vue&type=template&id=89ff5b7e&lang.js","../presstojam/src/components/ptj-repo-header.vue","../presstojam/src/components/ptj-repo-header.vue?vue&type=template&id=ba19bc28&lang.js","../presstojam/src/components/ptj-tree-node.vue","../presstojam/src/components/ptj-tree-node.vue?vue&type=template&id=1dcaa9f5&lang.js","../presstojam/src/js/dragndrop.js","../presstojam/src/components/ptj-tree.vue","../presstojam/src/components/ptj-tree.vue?vue&type=template&id=eebe52ac&lang.js","../presstojam/src/components/ptj-table.vue","../presstojam/src/components/ptj-table.vue?vue&type=template&id=15ab9672&lang.js","../presstojam/src/components/ptj-list.vue","../presstojam/src/components/ptj-list.vue?vue&type=template&id=f392d8ac&lang.js","../presstojam/src/components/ptj-repo.vue","../presstojam/src/components/ptj-repo.vue?vue&type=template&id=1c7fb47e&lang.js","../presstojam/src/components/ptj-single-item.vue","../presstojam/src/components/ptj-single-item.vue?vue&type=template&id=4f4c821c&lang.js","../presstojam/src/components/ptj-accounthandler.vue","../presstojam/src/components/ptj-accounthandler.vue?vue&type=template&id=fdfae9ee&lang.js","../presstojam/src/components/ptj-card.vue","../presstojam/src/components/ptj-card.vue?vue&type=template&id=3583d51c&lang.js","../presstojam/src/components/ptj-tabs.vue","../presstojam/src/components/ptj-tabs.vue?vue&type=template&id=00fda68a&lang.js","../presstojam/src/components/ptj-account-details.vue","../presstojam/src/components/ptj-account-details.vue?vue&type=template&id=c7cf5774&lang.js","../presstojam/src/components/ptj-root.vue","../presstojam/src/components/ptj-root.vue?vue&type=template&id=2c0fa1ee&lang.js","../import.js"],"sourcesContent":["let custom_headers  = {};\r\nlet main_url;\r\nlet status_handlers = {};\r\nlet debug = true;\r\nlet last_status;\r\nlet last_ok;\r\n\r\nexport default {\r\n\r\n    regCustomHeader(name, value) {\r\n        custom_headers[name] = value;\r\n    },\r\n\r\n    regStatusHandler(status, handler) {\r\n        status_handlers[status] = handler;\r\n    },\r\n\r\n    setURL(url) {\r\n        main_url = url;\r\n    },\r\n    regDebug(is_debug) {\r\n        debug = is_debug;\r\n    },\r\n\r\n    run(url, headers) {\r\n        \r\n        headers.mode = 'cors';\r\n        headers.cache = 'no-cache';\r\n        headers.credentials = 'include';\r\n        headers['Content-Type'] = 'application/json';\r\n        headers.headers = custom_headers;\r\n\r\n        const _self = this;\r\n\r\n        return fetch(main_url + url, headers)\r\n        .then(response => {\r\n            last_status = response.status;\r\n            last_ok = response.ok;\r\n            if (status_handlers[response.status]) {\r\n                status_handlers[response.status](response);\r\n            } else if (response.status == 401) {\r\n                return response.status;\r\n            } else {\r\n                return response.json();\r\n            }\r\n        })\r\n        .then(val => {\r\n            if (!last_ok) throw val;\r\n\r\n            if (last_status == 401) {\r\n                let omethod = headers.method;\r\n                headers.method = 'PUT';\r\n                return fetch(main_url + \"/core-switch-tokens\", headers)\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        headers.method = omethod;\r\n                        return fetch(main_url + url, headers)\r\n                        .then(response=> {\r\n                            if (response.status == 401) {\r\n                                throw new Error(\"Issue with refresh token\");\r\n                            } else if (response.ok) {\r\n                                return response.json();\r\n                            } else {\r\n                              //  profile.updateUser(\"public\", 0);\r\n                              //  throw Error(\"Logged out\");\r\n                            }\r\n                        });\r\n                    } else {\r\n                       // profile.updateUser(\"public\", 0);\r\n                       // throw Error(\"Logged out\");\r\n                    }\r\n                });\r\n            } else return val;\r\n        })\r\n        .catch(err => {\r\n            if (debug) console.log(err);\r\n            throw err;\r\n        });\r\n    }, \r\n    setDebug(data) {\r\n        if (!data) {\r\n            data = {\"__debug\" : true}\r\n        } else {\r\n            data[\"__debug\"] = true;\r\n        }\r\n        return data;\r\n    },\r\n    get(url, data) {\r\n        if (debug) data = this.setDebug(data);\r\n        if (data) {\r\n            const params = new URLSearchParams();\r\n            let graph = {};\r\n            for(let i in data) {\r\n                if (Array.isArray(data[i]) || (typeof data[i] == 'object' && data[i] !== null)) graph[i] = data[i];\r\n                else params.append(i, data[i]);\r\n            }\r\n\r\n            if (graph) {\r\n                params.append(\"graph\", JSON.stringify(graph));\r\n            }\r\n            if (url.indexOf(\"?\") == -1) url += \"?\";\r\n            else url += \"&\";\r\n            url += params.toString();\r\n        }\r\n        let headers = {};\r\n        headers.method = 'GET';\r\n        return  this.run(url, headers);\r\n    },\r\n\r\n    getprimary(url, data) {\r\n        return this.get(url, data);\r\n    },\r\n\r\n    post(url, data) {\r\n        //call our fetch response and return\r\n        if (debug) data = this.setDebug(data);\r\n        let headers = {};\r\n        headers.method = 'POST';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    },\r\n\r\n    put(url, data) {\r\n        if (debug) data = this.setDebug(data);\r\n        let headers = {};\r\n        headers.method = 'PUT';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    },\r\n\r\n    patch(url, data) {\r\n        if (debug) data = this.setDebug(data);\r\n        let headers = {};\r\n        headers.method = 'PATCH';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    },\r\n\r\n    delete(url, data) {\r\n        if (debug) data = this.setDebug(data);\r\n        let headers = {};\r\n        headers.method = 'DELETE';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    }\r\n}\r\n","const error_invalid_map = {\r\n            1 : \"too small\",\r\n            2 : \"too large\",\r\n            3 : \"contains incorrect characters\",\r\n            4 : \"doesn't contain required characters\",\r\n            5 : \"not unique\"\r\n}\r\n\r\nfunction getError(code) {\r\n    return error_invalid_map[code];\r\n}\r\n\r\nexport default {\r\n    getError\r\n}","export class Validator {\r\n\r\n    constructor() {\r\n        this._min;\r\n        this._max;\r\n        this._has = [];\r\n        this._has_not = [];\r\n        this._errors = {\r\n            'OK' : 0,\r\n            'MIN_VALUE' : 1,\r\n            'MAX_VALUE' : 2,\r\n            'HAS' : 3,\r\n            'HAS_NOT' : 4\r\n        }\r\n    }\r\n\r\n    set min(min) {\r\n        this._min = min;\r\n    }\r\n\r\n    set max(max) {\r\n        this._max = max;\r\n    }\r\n\r\n    set has(has) {\r\n        this._has.push(has);\r\n    }\r\n\r\n    set nothas(nhas) {\r\n        this._has_not.push(nhas);\r\n    }\r\n\r\n\r\n\r\n    validateSize(val) {\r\n        if (val < this._min) return this._errors.MIN_VALUE;\r\n        else if (val > this._max) return this._errors.MAX_VALUE;\r\n        else return this._errors.OK;\r\n    }\r\n\r\n\r\n    validate(val) {\r\n        let err;\r\n        if (isNaN(val)) {\r\n            const length = (val) ? val.length : 0;\r\n            err = this.validateSize(length);\r\n        } else {\r\n            err = this.validateSize(val);\r\n        }\r\n        if (err != this._errors.OK) return err;\r\n\r\n        for(let nhas of this._has_not) {\r\n            if (val.match(nhas)) return this._errors.HAS_NOT;\r\n        }\r\n\r\n        if (this._has.length == 0) return this._errors.OK;\r\n        \r\n        for(let has of this._has) {\r\n            if (val.match(this._has)) return this._errors.OK;\r\n        }\r\n        return this._errors.HAS;\r\n    }\r\n\r\n}","\r\nimport Errors from \"./error.js\"\r\nimport { reactive, computed } from \"vue\"\r\nimport Client from \"./client.js\"\r\nimport { Validator } from \"./validator.js\"\r\n\r\nexport class Field {\r\n\r\n    constructor(name, obj = null) {\r\n        this._name = name;\r\n        this._type = \"\";\r\n        this._is_primary = false;\r\n        this._is_parent = false;\r\n        this._valid = 1;\r\n        this._atts={}\r\n        this._confirm = false;\r\n        this._readonly = false;\r\n        this._placeholder = \"\";\r\n        this._conditions;\r\n        this._link = \"\";\r\n        this._reference = \"\";\r\n        this._error = 0;\r\n        this._label = \"\";\r\n        this._store = reactive({ summary : 0, options : []});\r\n        this._default = null;\r\n        this._validator = new Validator();\r\n        this._multiple = false;\r\n        this._encrypted = false;\r\n      \r\n      \r\n        this.summary = computed({\r\n            get : () => {\r\n                return this._store.summary;\r\n            },\r\n            set : (val) => {\r\n                this._store.summary = val;\r\n            }\r\n        })\r\n\r\n        this.options = computed({\r\n            get : () => {\r\n                return this._store.options;\r\n            },\r\n            set : (options) => {\r\n                this._store.options = options;\r\n            }\r\n        });\r\n\r\n       \r\n        if (obj) {\r\n            for (let x in obj) {\r\n                if (x == \"summary\") this._store.summary = obj[x];\r\n                else if (x == \"validation\") continue;\r\n                else this[x] = obj[x];\r\n            }\r\n\r\n            if (obj.validation) {\r\n                for(let x in obj.validation) {\r\n                    this._validator[x] = obj.validation[x];\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!this._reference && this._type == \"select\") {\r\n            this._store.options = [];\r\n            try {\r\n                for (let opt of this._atts.options) {\r\n                    this._store.options.push({ key: opt, value: opt });\r\n                }\r\n            } catch (e) {\r\n                console.log(\"options not set for \", this._name);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    set confirm(confirm) {\r\n        this._confirm = confirm;\r\n    }\r\n\r\n    set readonly(readonly) {\r\n        this._readonly = readonly;\r\n    }\r\n\r\n    set placeholder(placeholder) {\r\n        this._placeholder = placeholder;\r\n    }\r\n\r\n    set atts(atts) {\r\n        this._atts = atts;\r\n    }\r\n\r\n    set default(def) {\r\n        this._default = def;\r\n    }\r\n\r\n    set asset(asset) {\r\n        this._asset = asset;\r\n    }\r\n\r\n\r\n    set conditions(conditions) {\r\n        this._conditions = conditions;\r\n    }\r\n\r\n    set link(link) {\r\n        this._link = link;\r\n    }\r\n\r\n    set name(name) {\r\n        this._name = name;\r\n    }\r\n\r\n    set type(type) {\r\n        this._type = type.toLowerCase();\r\n    }\r\n\r\n    set multiple(mult) {\r\n        this._multiple = mult;\r\n    }\r\n\r\n    set is_primary(val) {\r\n        this._is_primary = val;\r\n    }\r\n\r\n    set is_parent(val) {\r\n        this._is_parent = val;\r\n    }\r\n\r\n    set reference(ref) {\r\n        this._reference = ref;\r\n    }\r\n\r\n    set error(err) {\r\n        this._error = err;\r\n    }\r\n\r\n    set label(label) {\r\n        this._label = label;\r\n    }\r\n    \r\n    set encrypted(encrypted) {\r\n        this._encrypted = encrypted;\r\n    }\r\n    \r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n\r\n    get isprimary() {\r\n        return this._is_primary;\r\n    }\r\n\r\n    get required() {\r\n        return (this._min > 0) ? true : false;\r\n    }\r\n\r\n    get readonly() {\r\n        return this._readonly;\r\n    }\r\n\r\n    get placeholder() {\r\n        return this._placeholder;\r\n    }\r\n\r\n    get default() {\r\n        return this._default;\r\n    }\r\n\r\n    get atts() {\r\n        return this._atts;\r\n    }\r\n\r\n    get conditions() {\r\n        return this._conditions;\r\n    }\r\n\r\n    get link() {\r\n        return this._link;\r\n    }\r\n\r\n    get isparent() {\r\n        return this._is_parent\r\n    }\r\n\r\n    get multiple() {\r\n        return this._multiple;\r\n    }\r\n    \r\n    get confirm() {\r\n        return this._confirm;\r\n    }\r\n\r\n    get reference() {\r\n        return this._reference;\r\n    }\r\n\r\n    get asset() {\r\n        return this._asset;\r\n    }\r\n\r\n    get encrypted() {\r\n        return this._encrypted;\r\n    }\r\n\r\n    get error() {\r\n        if (!this._error) return \"\";\r\n        else if (isNaN(this._error)) return this._error;\r\n        else return Errors.getError(this._error);\r\n    }\r\n\r\n    get validator() {\r\n        return this._validator;\r\n    }\r\n\r\n    get label() {\r\n        return this._label;\r\n    }\r\n\r\n    \r\n    isSummary() {\r\n        return this._store.summary;\r\n    }\r\n\r\n\r\n    saveAsset(id) {\r\n        if (this._asset) {\r\n            let file = this.val;\r\n            if (file) return this._asset.saveFile(this.val, id);\r\n        } \r\n        return Promise.resolve();\r\n    }\r\n\r\n\r\n    setReferenceOptions(url, params) {\r\n        this._store.options = [];\r\n        return Client.get(url, params)\r\n        .then(response => {\r\n            for (let i in response.__data) {\r\n                if (i.indexOf(\"__\") === 0) continue;\r\n             \r\n                this._store.options.push({ key: response.__data[i].key, value: response.__data[i].value });\r\n            }\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    clean(val) {\r\n        if (this._type == \"checkbox\") return (val) ? 1 : 0;\r\n        else return val;\r\n    }\r\n\r\n    validate(value) {\r\n        return this._validator.validate(value);\r\n    }\r\n\r\n    exp() {\r\n        return {\r\n            name : this._name,\r\n            type : this._type,\r\n            atts : this._atts\r\n        }\r\n    }\r\n\r\n    calcValue(value) {\r\n        if (!value) return \"\";\r\n        else return value;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Field } from \"./field.js\"\r\nimport { Asset } from \"./asset.js\"\r\n\r\nexport class MetaRow {\r\n\r\n    constructor() {\r\n        this._fields = {};\r\n        this._primary;\r\n        this._parent;\r\n        this._children = {};\r\n    }\r\n\r\n    set field(field) {\r\n        this._fields[field.name] = field;\r\n    }\r\n\r\n    get fields() {\r\n        return this._fields;\r\n    }\r\n\r\n    addChild(name, child) {\r\n        this._children[name] = child;\r\n    }\r\n\r\n\r\n    get children() {\r\n        return this._children;\r\n    }\r\n\r\n\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n\r\n  \r\n    get primary() {\r\n        return this._primary;\r\n    }\r\n\r\n    map(fields) {\r\n        for (let i in fields) {\r\n            if (fields[i].is_primary) this._primary = new Field(i, fields[i]);\r\n            else if (fields[i].is_parent) this._parent = new Field(i, fields[i]);\r\n            else  this._fields[i] = new Field(i, fields[i]);\r\n        }\r\n    }\r\n\r\n\r\n    exportFields(state, store) {\r\n        let cfields = this._states[state].fields;\r\n        store.fields = [];\r\n        for(let i in cfields) {\r\n            if (this._limit_fields.length == 0 || this._limit_fields.contains(i)) {\r\n                store.fields.push(cfields[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    exportToStore(store) {\r\n       store.fields = this._fields;\r\n    }\r\n\r\n    getCellByType(type) {\r\n        let cells = {};\r\n        for(let i in this._fields) {\r\n            if (this._fields[i].type == type) cells[i] = this._fields[i];\r\n        }\r\n        return cells;\r\n    }\r\n}","import { reactive, computed } from \"vue\"\r\n\r\nexport class DataCell {\r\n\r\n    constructor(meta) {\r\n        this._meta = meta;\r\n        this._store = reactive({ value : null, display : null, error : 0, is_validate_on : false});\r\n\r\n        this.val = computed({ \r\n            get : () =>  {\r\n                return this._store.value;\r\n            },\r\n            set : (val) => {\r\n                this._store.value = this._meta.clean(val);\r\n                this._store.error = this._meta.validate(val);\r\n            }     \r\n        });\r\n\r\n        this.error = computed({\r\n            get : () => this._store.error,\r\n            set : val => { this._store.error = val }\r\n        });\r\n\r\n        this.showError = computed(() => {\r\n            return this._store.is_validate_on && this._store.error ? true : false;\r\n        });\r\n\r\n        if (this._meta.default) this._store.value = this._meta.default;\r\n        else if (this._meta.type == \"select\") this._store.value = 0; \r\n    }\r\n\r\n    get meta() {\r\n        return this._meta;\r\n    }\r\n\r\n    set validateon(on) {\r\n        this._store.is_validate_on = on;\r\n    }\r\n\r\n    set display(display) {\r\n        this._store.display = display;\r\n    }\r\n\r\n    get display() {\r\n        if (this._store.display) return this._store.display;\r\n        else return this._store.value;\r\n    }\r\n\r\n    toString() {\r\n        return this._store.display;\r\n    }\r\n\r\n    toVal() {\r\n        let cval = this._store.value;\r\n        return cval;\r\n    }\r\n\r\n    setVal(val) {\r\n        this._store.value = val;\r\n    }\r\n}\r\n","import { DataCell } from \"./datacell.js\"\r\nimport { computed } from \"vue\"\r\n\r\nclass DataTemplateCell extends DataCell {\r\n    \r\n    constructor(meta) {\r\n\r\n        super(meta);\r\n    \r\n        if (this._meta.atts.type == \"datetime\") {\r\n            this._store.value = {min : null, max : null };\r\n\r\n            this.val = computed({\r\n                get : () =>  {\r\n                    return this._store.value;\r\n                },\r\n                set : (val) => {\r\n                    if (val.min) this._store.value.min = this._meta.clean(val.min);\r\n                    if (val.max) this._store.value.max = this._meta.clean(val.max);\r\n                    this._store.error = this._meta.validate(val);\r\n                }  \r\n            });\r\n\r\n            this.val1 = computed({\r\n                get : () =>  {\r\n                    return this._store.value.min;\r\n                },\r\n                set : (val) => {\r\n                    this._store.value.min = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }     \r\n            });\r\n\r\n            this.val2 = computed({\r\n                get : () =>  {\r\n                    return this._store.value.max;\r\n                },\r\n                set : (val) => {\r\n                    this._store.value.max = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }     \r\n            });\r\n\r\n            this.addParam = obj => {\r\n                let cobj = {};\r\n                if (this._store.value.min) cobj.min = this._store.value.min;\r\n                if (this._store.value.max) cobj.max = this._store.value.max;\r\n                if (Object.keys(cobj).length > 0) obj[this._meta.name] = cobj;\r\n            };\r\n\r\n\r\n        } else if (this._meta.type == \"checkbox\") {\r\n            this._store.value = 0;\r\n\r\n            this.addParam = (obj) => {\r\n                if (this._store.value == 1) {\r\n                    obj[this._meta.name] = 1;\r\n                } else if (this._store.value == 2) {\r\n                    obj[this._meta.name] = 0;\r\n                }\r\n            }\r\n\r\n        } else if (this._meta.type == \"select\") {\r\n            this._store.value = [];\r\n\r\n            this.addParam = obj => {\r\n                if (this._store.value.length > 0) obj[this._meta.name] = this._store.value;\r\n            }\r\n\r\n        } else {\r\n\r\n            this.addParam = obj => {\r\n                if (this._store.value) obj[this._meta.name] = [\"%\" + this._store.value + \"%\"];\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport class DataTemplate  {\r\n\r\n    constructor(metarow) {\r\n        this._cells = {};\r\n        this._primary;\r\n        this._parent;\r\n        this._limit = 0;\r\n        this._page = 0;\r\n        this._fields = [];\r\n        this._sort = {};\r\n        this._groups = [];\r\n        this._children = [];\r\n        this._active;\r\n        this._max_pages = 0;\r\n        this._count = 0;\r\n\r\n        if (metarow) this.applyMetaRow(metarow);\r\n    }\r\n    \r\n\r\n    applyMetaRow(metarow) {\r\n        if (metarow.primary) this._primary = new DataCell(metarow.primary);\r\n        if (metarow.parent) this._parent = new DataCell(metarow.parent);\r\n\r\n        for(const i in metarow.fields) {\r\n            const field = metarow.fields[i];\r\n            this._cells[field.name] = new DataTemplateCell(field);\r\n        }\r\n\r\n    }\r\n\r\n    get cells() {\r\n        return this._cells;\r\n    }\r\n\r\n\r\n    initField(field) {\r\n        this._data.initField(field);\r\n    }\r\n\r\n    set fields(fields) {\r\n        this._fields = fields;\r\n    }\r\n\r\n    get fields() {\r\n        return this._fields;\r\n    }\r\n\r\n    set limit(limit) {\r\n        this._limit = limit;\r\n    }\r\n\r\n    get limit() {\r\n        return this._limit;\r\n    }\r\n\r\n    set sort(sort) {\r\n        this._sort = sort;\r\n    }\r\n\r\n    get sort() {\r\n        return this._sort;\r\n    }\r\n\r\n    set page(page) {\r\n        this._page = page;\r\n    }\r\n\r\n    get page() {\r\n        return this._page;\r\n    }\r\n\r\n    set groups(groups) {\r\n        this._groups = groups;\r\n    }\r\n\r\n    get groups() {\r\n        return this._groups;\r\n    }\r\n\r\n    set children(children) {\r\n        this._children = children;\r\n    }\r\n\r\n    get children() {\r\n        return this._children;\r\n    }\r\n\r\n    get primary() {\r\n        return this._primary;\r\n    }\r\n\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n\r\n    get active() {\r\n        return this._active;\r\n    }\r\n\r\n    set active(active) {\r\n        this._active = active;\r\n    }\r\n\r\n    get max_pages() {\r\n        return this._max_pages;\r\n    }\r\n\r\n    set max_pages(pages) {\r\n        this._max_pages = pages;\r\n    }\r\n\r\n    get count() {\r\n        return this._count;\r\n    }\r\n\r\n    set count(count) {\r\n        this._count = count;\r\n    }\r\n\r\n    convertToParams() {\r\n        let obj = {};\r\n        if (this._limit) obj._limit = this._limit;\r\n        if (this._page) obj._page = this._page;\r\n        if (this._fields.length > 0) obj._fields = this._fields;\r\n        if (Object.keys(this._sort).length > 0) obj._sort = this._sort;\r\n        for(let i in this._cells) {\r\n            let param = this._cells[i].toVal();\r\n            if (param) obj[i] = param;\r\n        }\r\n        return JSON.stringify(obj);\r\n    }\r\n\r\n    convertDataToParams() {\r\n        let obj = {};\r\n        for(let i in this._cells) {\r\n            obj[i] = this._cells[i].toVal();\r\n        }\r\n        return (Object.keys(obj).length > 0) ? JSON.stringify(obj) : null;\r\n    }\r\n\r\n\r\n    convertFromParams(str) {\r\n        const obj = JSON.parse(str);\r\n        if (obj._limit) this._limit = obj._limit;\r\n        if (obj._fields) this._fields = obj._fields;\r\n        if (obj.hasOwnProperty(\"_page\")) this._page = obj._page;\r\n        if (obj.hasOwnProperty(\"_sort\")) this._sort = obj._sort;\r\n        for(const i in this._cells) {\r\n            if (obj.hasOwnProperty(i)) this._cells[i].setVal(obj[i]);\r\n        }\r\n    }\r\n\r\n    convertToAPIParams(state) {\r\n        let obj = {};\r\n        if (this._limit) obj.__limit = this._limit;\r\n        if (this._page) obj.__page = (this._page * this._limit);\r\n        if (this._fields.length > 0) obj.__fields = this._fields;\r\n        if (Object.keys(this._sort).length > 0) obj.__sort = this._sort;\r\n        for(let i in this._cells) {\r\n            this._cells[i].addParam(obj);\r\n        }\r\n\r\n        if (state == \"parent\" || state == \"post\") {\r\n            if (this._parent && this._parent.toVal()) obj[this._parent.meta.name] = this._parent.toVal();\r\n        } else if (state != \"login\") {\r\n            obj[this._primary.meta.name] = this._primary.toVal();\r\n        }\r\n        return (Object.keys(obj).length) ? obj : null;\r\n    }\r\n}","import { DataCell } from \"./datacell.js\"\r\n\r\n\r\nexport class DataRow {\r\n\r\n    constructor(metarow) {\r\n        this._cells = {};\r\n        this._references = {};\r\n        this._children = {};\r\n        this._parent;\r\n        this._primary;\r\n\r\n        if (metarow) this.applyMetaRow(metarow);\r\n        \r\n    }\r\n\r\n    \r\n    applyMetaRow(metarow) {\r\n        if (metarow.primary) this._primary = new DataCell(metarow.primary);\r\n        if (metarow.parent) this._parent = new DataCell(metarow.parent);\r\n\r\n        for(const i in metarow.fields) {\r\n            const field = metarow.fields[i];\r\n            this._cells[field.name] = new DataCell(field);\r\n        }\r\n\r\n        for(const i in metarow.references) {\r\n            this._references[i] = new DataRow(metarow.references[i]);\r\n        }\r\n\r\n        for(const i in metarow.children) {\r\n            this._children[i] = metarow.children[i];\r\n        }\r\n    }\r\n\r\n\r\n    appendPrimary(field) {\r\n        this._primary = new DataCell(field);\r\n    }\r\n\r\n\r\n\r\n    addChild(name, child) {\r\n        if (!this._children[name]) {\r\n            this._children[name] = [];\r\n        }\r\n        this._children[name].push(child);\r\n    }\r\n\r\n    set row(row) {\r\n\r\n        if (!row) return;\r\n\r\n        if (this._primary && row[this._primary.meta.name]) this._primary.setVal(row[this._primary.meta.name]);\r\n        if (this._parent && row[this._parent.meta.name]) this._parent.setVal(row[this._parent.meta.name]);\r\n        \r\n        for(let field in this._cells) {\r\n            if (!row[field]) continue;\r\n            this._cells[field].setVal(row[field]);\r\n        }\r\n\r\n        for(let ref in this._references) {\r\n            this._references[ref].row = row[ref];\r\n        }\r\n\r\n        for(let child in this._children) {\r\n            this._children[child].row = row[child];\r\n        }\r\n\r\n\r\n        if (this._parent && this._references[this._parent.meta.reference]) {\r\n            this._parent.display = this._references[this._parent.meta.reference].getSummary();\r\n        }\r\n        for(let cell in this._cells) {\r\n            let field = this._cells[cell].meta;\r\n            if (field.reference && this._references[field.reference]) {\r\n                this._cells[cell].display = this._references[field.reference].getSummary();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    get cells() {\r\n        return this._cells;\r\n    }\r\n\r\n\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n\r\n\r\n    get primary() {\r\n        return this._primary;\r\n    }\r\n\r\n    get children() {\r\n        return this._children;\r\n    }\r\n\r\n    getCell(name) {\r\n        if (this._primary && this._primary.meta.name == name) return this._primary;\r\n        else if (this._parent && this._parent.meta.name == name) return this._parent;\r\n        else return this._cells[name];\r\n    }\r\n\r\n\r\n    getSummary() {\r\n        let str = [];\r\n        for(let i in this._cells) {\r\n            const cell = this._cells[i];\r\n            if (cell.meta.isSummary()) {\r\n                const display = cell.display;\r\n                str.push(display);\r\n            }\r\n        }\r\n        return str.join(\" \");\r\n    }\r\n\r\n    toString() {\r\n        let str = [];\r\n        for(let i in this._cells) {\r\n            str.push(this._cells[i].display);\r\n        }   \r\n        return str.join(\" \");\r\n    }\r\n\r\n\r\n    serialize(state) {\r\n        let data = {};\r\n        if (state == \"post\") {\r\n            if (this._parent) data[this._parent.meta.name] = this._parent.toVal();\r\n        } else if (state == \"put\" || state == \"delete\") {\r\n            data[this._primary.meta.name] = this._primary.toVal();\r\n        }\r\n        for(let i in this._cells) {\r\n            data[i] = this._cells[i].toVal();\r\n        }\r\n        return data;\r\n    }\r\n\r\n\r\n    getCellByType(type) {\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].meta.type == type) cells[i] = this._cells[i];\r\n        }\r\n        return cells;\r\n    }\r\n}","let _ctarget = {\r\n    orig : 0,\r\n    target : 0,\r\n    state : null,\r\n    key : null,\r\n    to : null,\r\n    model: null,\r\n    end : null,\r\n    param_str : {}\r\n}\r\n\r\nfunction resetIntention() {\r\n    for(let i in _ctarget) {\r\n        _ctarget[i] = null;\r\n    }\r\n}\r\n\r\nfunction updateIntention(orig, vals) {\r\n    resetIntention();\r\n    _ctarget.orig = parseInt(orig);\r\n\r\n    for(let i in vals) {\r\n        _ctarget[i] = vals[i];\r\n    }\r\n}\r\n\r\nfunction convertMaps(omaps) {\r\n    let ni = _ctarget.orig + _ctarget.target;\r\n    if (ni < 0) omaps.unshift({ ...omaps[i] });\r\n    else if (ni >= omaps.length) omaps.push({ ... omaps[omaps.length - 1]});\r\n\r\n    for(let i in _ctarget) {\r\n        if (_ctarget[i] !== null) {\r\n            if (i == \"_end\") omaps.splice(ni + 1, omaps.length);\r\n            else omaps[ni][i] = _ctarget[i];\r\n        }\r\n    }\r\n}\r\n\r\nexport default {\r\n    updateIntention,\r\n    convertMaps\r\n}\r\n","import client from \"./client.js\"\r\nimport { reactive } from \"vue\"\r\n\r\nimport { MetaRow } from \"./metarow.js\"\r\nimport { DataTemplate } from \"./datatemplate.js\"\r\nimport { DataRow } from \"./datarow.js\"\r\nimport ChangeAction from \"./changeaction.js\"\r\n\r\n\r\nexport class Model {\r\n    constructor(map, stage) {\r\n        this._map = map;\r\n        this._stage = stage;\r\n        this._label = '';\r\n        this._title = '';\r\n        this._component = '';\r\n        this._rawcomponent = '';\r\n        this._actions = {};\r\n        this._next = null;\r\n        this._index = 0;\r\n        this._primary_key_name = \"\";\r\n        this._parent_key_name = \"\";\r\n        this._circular = '';\r\n        this._siblings = [];\r\n        this._children = [];\r\n        this._groups = [];\r\n        this._classes= \"\";\r\n        this._settings = { hide_actions : {}};\r\n        this._meta_row = new MetaRow();\r\n        this._global_meta_row = new MetaRow();\r\n        this._data_template = null;\r\n        this._data = null;\r\n        this._global_data;\r\n        this._store = reactive({});\r\n        this._back;\r\n    }\r\n\r\n    \r\n    get map() {\r\n        return this._map;\r\n    }\r\n\r\n   \r\n    get stage() {\r\n        return this.store.stage;\r\n    }\r\n\r\n\r\n    injectCustomSettings(settings) {\r\n        this._settings = settings;\r\n        if (!this._settings.hide_actions) this._settings.hide_actions = {};\r\n    }\r\n\r\n\r\n    init() {\r\n        let url = (!this._map.model) ? \"/route-core-default\" : \"/route-\" + this._map.model;\r\n        let method = \"get\";\r\n        if (this._map.state == \"primary\" || this._map.state == \"parent\" ) {\r\n            url += \"-\" + this._map.state;\r\n        } else if (this._map.state == \"login\") {\r\n            url += \"-\" + login;\r\n            method = \"post\";\r\n        } else if (this._map.state == \"put\" || this._map.state == \"post\") {\r\n            method = this._map.state;\r\n        }\r\n   \r\n        let data = {};\r\n        if (this._map.to) data.__to = this._map.to;\r\n        return client[method](url, data)\r\n        .then(response => {\r\n            if (response.__status != \"SUCCESS\") {\r\n                throw new Error(response);\r\n            }\r\n            return response;\r\n        })\r\n        .then(response => {   \r\n\r\n            this._map.state = response.state;\r\n            this._map.model = response.model;\r\n\r\n            this._label = response.label;\r\n            this._title = response.title;\r\n        \r\n            this._back = response.back;\r\n\r\n            for(let i in response.children) {\r\n                this._children.push({ name : i, label : response.children[i]});\r\n            }\r\n\r\n            for(let i in response.siblings) {\r\n                this._siblings.push({ name : i, label : response.siblings[i]});\r\n            }\r\n      \r\n            for(let i in response.fields) {\r\n                if (response.fields[i].circular) this._circular = i;\r\n            }\r\n\r\n            this._actions = response.actions;\r\n            this.buildMetaRow(response);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n\r\n\r\n\r\n    get fields() {\r\n        return this._fields;\r\n    }\r\n\r\n    get classes() {\r\n        return this._name.replace(\"_\", \"-\") + \" \" + this._map.state;\r\n    }\r\n\r\n   \r\n    snakeCase(name) {\r\n        return name.replace(\"-\", \"_\");\r\n    }\r\n\r\n\r\n    buildMetaRow(response) {\r\n        this._meta_row = new MetaRow();\r\n\r\n        this._meta_row.map(response.fields);\r\n        \r\n        let global_fields = {};\r\n        for(let field in response.fields) {\r\n            if (response.fields[field].is_primary) global_fields[field] = response.fields[field];\r\n            else if (response.fields[field].is_parent) global_fields[field] = response.fields[field];\r\n        }\r\n\r\n        this._global_meta_row.map(global_fields);\r\n    }\r\n\r\n\r\n    loadURL(state) {\r\n        let url = \"/\" + this._map.model;\r\n        if (state == \"primary\" ||  state == \"put\") url += \"-primary\";\r\n        else if (state == \"parent\") url += \"-parent\";\r\n        return url;\r\n    }\r\n\r\n    saveURL() {\r\n        let url = \"/\" + this._map.model;\r\n        return url;\r\n    }\r\n\r\n    initDataTemplate() {\r\n        this._data_template = new DataTemplate(this._meta_row);\r\n\r\n        if (this._map.state == \"get\") {\r\n            if (this._map.key == \"first\") this._data_template.limit = 1;\r\n            else if (this._map.key) this._data_template.parent.setVal(this._map.key);\r\n        } else if (this._map.state == \"parent\") {\r\n            if (this._map.key == \"first\") this._data_template.limit = 1;\r\n            else if (this._map.key) this._data_template.parent.setVal(this._map.key);\r\n        } else if (this._map.state == \"post\") {\r\n            this._global_data = new DataRow(this._global_meta_row);\r\n            if (this._map.key) {\r\n                this._data_template.parent.setVal(this._map.key);\r\n                this._global_data.parent.setVal(this._map.key);\r\n            }\r\n        } else if (this._map.state != \"login\") {\r\n            this._data_template.primary.setVal(this._map.key);\r\n        }\r\n    \r\n        if (this._map.param_str) {\r\n            this._data_template.convertFromParams(this._map.param_str);\r\n        }\r\n    \r\n        if (this._settings.groups) {\r\n            this._data_template.groups = this._settings.groups;\r\n        }\r\n\r\n        if (this._settings.limit) {\r\n            this._data_template.limit = this._settings.limit;\r\n        }\r\n    \r\n   \r\n    }\r\n\r\n\r\n    load() {\r\n        this.initDataTemplate();\r\n        if (this._map.state == \"get\" || this._map.state == \"parent\") {\r\n            let params = this._data_template.convertToAPIParams(this._map.state);\r\n            if (this._map.to) {\r\n                if (!params) params = {};\r\n                params.__to = this._map.to;\r\n            }\r\n\r\n            if (this._settings.fields) {\r\n                if (!params) params = {};\r\n                params.__fields = this._settings.fields;\r\n            }\r\n\r\n            if (this._data_template.limit > 0) {\r\n                return client.get(this.loadURL(this._map.state) + \"-count\", params)\r\n                .then(response => {\r\n                    this._data_template.count = response.count;\r\n                    this._data_template.max_pages = Math.ceil(response.count / this._data_template.limit);\r\n                })\r\n                .then(() => {\r\n                    return client.get(this.loadURL(this._map.state), params);\r\n                })\r\n                .then(response => {\r\n                    if (response.__status != \"SUCCESS\") throw new Error(response);\r\n                    this._data = [];\r\n                    this.mapRepoData(response);\r\n                    return response;\r\n                });\r\n            } else {\r\n                return client.get(this.loadURL(this._map.state), params)\r\n                .then(response => {\r\n                    if (response.__status != \"SUCCESS\") throw new Error(response);\r\n                    this._data_template.count = response.__data.length;\r\n                    this._data = [];\r\n                    this.mapRepoData(response);\r\n                    return response;\r\n                });\r\n           \r\n            }\r\n\r\n        } else if (this._map.state == \"primary\" || this._map.state == \"put\") {\r\n            let params = this._data_template.convertToAPIParams(this._map.state);\r\n            if(this._map.to) params.__to = this._map.to;\r\n            return client.get(this.loadURL(this._map.state), params)\r\n            .then(response => {\r\n                if (response.__status != \"SUCCESS\") throw new Error(response);\r\n                    this._data = {};\r\n                    this.mapData(response);\r\n                    return response;\r\n            })\r\n            .then(response => {\r\n                this._global_data = new DataRow(this._global_meta_row);\r\n                this._global_data.row = response;\r\n                if (this._map.state == \"put\") {\r\n                    return this.setReferences();\r\n                }\r\n            });\r\n        } else if (this._map.state == \"post\") {\r\n            this._data = new DataRow(this._meta_row);\r\n            if (this._data_template.parent) this._data.parent.setVal(this._data_template.parent.toVal());\r\n            return this.setReferences();\r\n        } else {\r\n            this._data = new DataRow(this._meta_row);\r\n            \r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n\r\n    reload() {\r\n        this._data_template.page = 0;\r\n        let params = this._data_template.convertToAPIParams(\"get\");\r\n        if (this._map.to) params.__to = this._map.to;\r\n        return client.get(this.loadURL(\"get\") + \"-count\", params)\r\n        .then(response => {\r\n            this._data_template.count = response.count;\r\n            this._data_template.max_pages = Math.ceil(response.count / this._data_template.limit);\r\n        })\r\n        .then(() => {\r\n            return client.get(this.loadURL(\"get\"), params)\r\n        }).then(response => {\r\n            if (response.__status != \"SUCCESS\") throw new Error(response);\r\n            this._data = [];\r\n            this.mapRepoData(response);\r\n            return response;\r\n        })\r\n        .then(() => {\r\n            this._store.data = this._data;\r\n            this._store.data_template = this._data_template.count;\r\n        });\r\n    }\r\n\r\n\r\n    rLoadObj(data) {\r\n        let obj= new DataRow(this._meta_row);\r\n        obj.row = data;\r\n\r\n        if (this._circular) {\r\n            if (data[this._map.model]) {\r\n                for(const i in data[this._map.model]) {\r\n                    obj.addChild(this._map.model, this.rLoadObj(data[this._map.model][i]));\r\n                }\r\n            }\r\n        }\r\n\r\n        for(const i in this._active_children) {\r\n            const name = this._active_children[i];\r\n            if (data[name]) {\r\n                for(const x in data[name]) {\r\n                    obj.addChild(name, this.rLoadObj(data[name][x]));\r\n                }\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    indexData(data) {\r\n        let indexes = {};\r\n        for(const key in data) {\r\n            const row = data[key];\r\n            for(let group of this._data_template.groups) {\r\n                group = this.snakeCase(group);\r\n                if (!indexes[group]) indexes[group] = {};\r\n                let ckey = row.getCell(group).toVal();\r\n                if (!indexes[group][ckey]) {\r\n                    indexes[group][ckey] = {\"display\": \"\", \"contains\":[]};\r\n                    indexes[group][ckey].display= row.getCell(group).display;\r\n                }\r\n                indexes[group][ckey].contains.push(key);\r\n            }\r\n        }\r\n        return indexes;\r\n    }\r\n\r\n\r\n    import(file) {\r\n        return new Promise((resolve, reject) => {\r\n            var fr = new FileReader();  \r\n            fr.onload = () => {\r\n                resolve(fr.result )\r\n            };\r\n            fr.onerror = reject;\r\n            fr.readAsText(file.blob);\r\n        })\r\n        .then(data => {\r\n            const headers = {};\r\n            for(let i in data[0]) {\r\n                headers[data[0][i]] = i;\r\n            }\r\n\r\n            for(let i = 1; i<data.length; ++i) {\r\n                //run row based on the headers\r\n            }\r\n        });\r\n    }\r\n\r\n    submit() {\r\n        let key = 0;\r\n        let data = this._data.serialize(this._map.state);\r\n        return client[this._map.state](this.saveURL(), data)\r\n        .then(request=>{\r\n            if (request.__status!= \"SUCCESS\") {\r\n                throw { message : request.statusText }\r\n            }\r\n            if (this._map.state == \"post\") {\r\n                key = request.__key;\r\n            }\r\n        })\r\n        .then(() => {\r\n            let promises = [];\r\n            let assets = this._store.data.getCellByType(\"asset\");\r\n            this._store.progress.total = 0;\r\n            for(let i in assets) {\r\n                const val = assets[i].toVal();\r\n                if (!val) continue;\r\n                ++this._store.progress.total;\r\n                const asset = new Asset();\r\n                asset.url = this.saveURL() + \"-\" + i;\r\n                asset.keyfield = this._store.data.primary.name;\r\n                let promise = asset.saveFile(assets[i].toVal(), this._store.data.primary.toVal())\r\n                .then(() => {\r\n                    ++this._store.progress.progress;\r\n                });\r\n                promises.push(promise);\r\n            }\r\n            return Promise.all(promises);\r\n        })\r\n        .then(() => {\r\n            return key;\r\n        });\r\n    }\r\n\r\n\r\n    setReferences() {\r\n        let promises = [];\r\n\r\n        const cells = this._meta_row.getCellByType(\"id\");\r\n        for(let name in cells) {\r\n            if (cells[name].reference || cells[name].circular) {\r\n                let params = {};\r\n                if (this._global_meta_row.parent) params[this._global_meta_row.parent.name] = this._global_data.parent.toVal();\r\n                promises.push(cells[name].setReferenceOptions(\"/\" + this._map.model + \"-\" + name.replace(\"_\", \"-\") + \"-reference\", params));\r\n            } \r\n        }\r\n        return Promise.all(promises);\r\n    }\r\n\r\n    mapRepoData(response) {\r\n        this._data = [];\r\n        for (const i in response.__data) {\r\n            const data = this.rLoadObj(response.__data[i]);\r\n            this._data.push(data);\r\n        }\r\n\r\n        \r\n        //now we need to group the data by\r\n        if (this._data_template.groups.length > 0) this._indexes = this.indexData(this._data);\r\n    }\r\n\r\n    mapData(data) {\r\n        this._data = new DataRow(this._meta_row);\r\n        this._data.row = data;\r\n    }\r\n\r\n\r\n    buildLink = (intention) => {\r\n        return key => {\r\n            if (key) intention.key = key;\r\n            for(let setting in this._settings.change_intention) {\r\n                intention[setting] = this._settings.change_intention[setting];\r\n            }\r\n            ChangeAction.updateIntention(this._stage, intention);\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    \r\n    exportToStore() {\r\n        this._store.actions = [];\r\n        this._store.stage = this._stage;\r\n        this._store.component = \"\";\r\n        this._store.rawcomponent = \"\";\r\n        this._store.title = this._title;\r\n        this._store.label = this._label;\r\n        this._store.action = this._map.state;\r\n        this._store.method = this._store.action;\r\n        this._store.submiturl = this.saveurl;\r\n        this._store.model = this._map.model;\r\n        this._store.classes = this._map.model + \" \" + this._map.state;\r\n        this._store.groups = this._data_template.groups;\r\n        if (!this._store.settings) this._store.settings = {};\r\n\r\n        if (this._settings.disable_filter) {\r\n            this._store.disable_filter = true;\r\n        }\r\n\r\n        if (this._settings.disable_selectfields) {\r\n            this._store.disable_selectfields = true;\r\n        }\r\n    \r\n        if (this._map.state == \"get\" || this._map.state == \"parent\") {\r\n            this._store.rawcomponent = (this._data_template.groups.length > 0) ? \"ptj-list\" : (this._circular || this._data_template.children.length > 0) ? \"ptj-tree\" : \"ptj-table\";\r\n            this._store.component = \"ptj-repo\";\r\n            this._store.index = this._map.model + \"-get\";\r\n            this._store.submiturl = this.loadurl;\r\n            this._store.count = this._data_template.count;\r\n            this._store.reload = () => { \r\n                this.buildLink({ param_str : this._data_template.convertToParams()})()\r\n                .then(() => {\r\n                    this.reload();\r\n                });\r\n            };\r\n\r\n            if (this._back && !this._settings.hide_actions.parent) {\r\n                this._store.actions.push({\r\n                    r : this.buildLink({ model : this._back.model, \"state\" : \"primary\", key : this._data_template.parent.toVal() }),\r\n                    n: \"go back\"\r\n                });\r\n            }\r\n\r\n            if (this._actions.post && !this._settings.hide_actions.post) {\r\n                this._store.actions.push({ r: this.buildLink({ \"state\" : \"post\"}), n: this._actions.post });\r\n            }\r\n\r\n\r\n            if (this._actions.primary) {\r\n                this._store.next = this.buildLink({ param_str : \"\", state : \"primary\"});\r\n            } else if (this._actions.put) {\r\n                this._store.next = this.buildLink({ param_str : \"\", state : \"put\"});\r\n            }\r\n\r\n            this._store.siblings = [];\r\n            if (!this._settings.hide_actions.children) {\r\n                for (let sibling of this._siblings) {\r\n                    this._store.siblings.push({\r\n                        r: this.buildLink({ model: sibling.name, param_str: \"\" }),\r\n                        n: sibling.label\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (this._data_template.limit > 0) {\r\n                this._store.setPage = (page) => {\r\n                    this._store.data_template.page = page;\r\n                    this.buildLink({ param_str : this._data_template.convertToParams()})()\r\n                    .then(() => { this.reload(); });\r\n                }\r\n            }\r\n        } else if (this._map.state == \"primary\") {\r\n            this._store.component = \"ptj-single-item\";\r\n            this._store.actions = [];\r\n            this._store.index = this._map.model + \"-primary\";\r\n\r\n            if (this._back && !this._settings.hide_actions.parent) {\r\n               /* this._store.actions.push({\r\n                    r : this.buildLink({ key : this._data_template.parent.toVal(), state : this._back.state}),\r\n                    n: this._actions.get \r\n                });*/\r\n            }\r\n\r\n            if (this._actions.put && !this._settings.hide_actions.put) {\r\n                this._store.actions.push({ \r\n                    r: this.buildLink({ state : \"put\"}), \r\n                    n: this._actions.put \r\n                });\r\n            }\r\n            if (this._actions.delete && !this._settings.hide_actions.delete) {\r\n                this._store.actions.push({\r\n                    r: () => {\r\n                        if (confirm(\"Are you sure you want to delete this record and all associated children?\")) {\r\n                            let data = {};\r\n                            data[this._meta_row.primary.name] = this._data.primary.toVal();\r\n                            return client.delete(this.saveURL(), data)\r\n                            .then(() => {\r\n                                let map = { \"state\" : \"get\"};\r\n                                if (this._global_data.parent) map.key = this._global_data.parent.toVal();\r\n                                return this.buildLink(map)();\r\n                            })\r\n                        } \r\n                        return Promise.reject(\"Delete cancelled\");\r\n                    }, n: this._actions.delete\r\n                });\r\n            }\r\n\r\n            this._store.children = [];\r\n            if (!this._settings.hide_actions.children) {\r\n                for (let child of this._children) {\r\n                    this._store.children.push({\r\n                        r: this.buildLink({ state: \"parent\", model: child.name }),\r\n                        n: child.label\r\n                    });\r\n                }\r\n            }\r\n        } else if (this._map.state == \"post\") {\r\n            this._store.component = (this._actions.login) ? \"ptj-account-handler\" : \"ptj-form\";\r\n            this._store.index = this._map.model + \"-post\";\r\n            this._store.progress = {total : 0, progress : 0};\r\n            this._store.actions = [];\r\n            if (this._actions.login) {\r\n                this._store.actions.push({r : this.buildLink({ state : \"login\"}), n: this._actions.login });\r\n            }\r\n\r\n            this._store.next = key => {\r\n                let state = \"\";\r\n                if (this._actions.parent) state = \"parent\";\r\n                else if (this._actions.get) state = \"get\";\r\n                else if (this._actions.primary) state = \"primary\";\r\n                return this.buildLink({ \r\n                    state : state, \r\n                    active : key\r\n                })();\r\n            }\r\n\r\n                \r\n            this._store.submit = () => {\r\n                return this.submit(\"post\");\r\n            }\r\n        } else if (this._map.state == \"put\") {\r\n            this._store.component = \"ptj-form\";\r\n            this._store.progress = {total : 0, progress : 0};\r\n            this._store.index = this._map.model + \"-put\";\r\n            this._store.actions = [];\r\n            if (this._actions.primary) this._store.next = this.buildLink({ state : \"primary\"});\r\n            else {\r\n                let map = { \"state\" : \"get\"};\r\n                if (this._global_data.parent) map.key = this._global_data.parent.toVal();\r\n                this._store.next = this.buildLink(map);\r\n            }\r\n            this._store.submit = () => {\r\n                return this.submit(\"put\");\r\n            }\r\n        } else if (this._map.state == \"login\") {\r\n            this._store.component = \"ptj-account-handler\";\r\n            this._store.index = this._map.model + \"-login\";\r\n            this._store.progress = {total : 0, progress : 0};\r\n            this._store.submit = () => {\r\n                let data = this._data.serialize(\"login\");\r\n                return client.post(this.saveURL() + \"-login\", data)\r\n                .then(request=>{\r\n                    if (request.__status!= \"SUCCESS\") {\r\n                        throw { message : request.statusText }\r\n                    }\r\n                    return request;\r\n                });\r\n            } \r\n            this._store.actions = [];\r\n            if (this._actions.post) {\r\n                this._store.actions.push({ r: this.buildLink({ state : \"post\"}), n: this._actions.post });\r\n            }\r\n        }\r\n\r\n        this._store.data = this._data;\r\n        this._store.indexes = this._indexes;\r\n        this._store.data_template = this._data_template;\r\n        this._meta_row.exportToStore(this._store);\r\n        return this._store;\r\n    }\r\n\r\n}\r\n","const action_map = {\r\n    'post' : '-create',\r\n    'put' : '-update',\r\n    'delete' : '-delete',\r\n    'login' : '-login',\r\n    'logout' : '-logout',\r\n    'primary' : '-primary',\r\n    'parent' : '-parent',\r\n    'get' : ''\r\n};\r\n\r\nclass CtrlGroupMap {\r\n\r\n    constructor() {\r\n        this._model;\r\n        this._state = \"\";\r\n        this._key = 0;\r\n        this._to;\r\n        this._param_str;\r\n    }\r\n\r\n    set model(model) {\r\n        this._model = model;\r\n    }\r\n\r\n    get model() {\r\n        return this._model;\r\n    }\r\n\r\n    set state(state) {\r\n        this._state = state;\r\n    }\r\n    \r\n    get state() {\r\n        return this._state;\r\n    }\r\n\r\n    set key(key) {\r\n        this._key = key;\r\n    }\r\n\r\n    get key() {\r\n        return this._key;\r\n    }\r\n\r\n    set to(to) {\r\n        this._to = to;\r\n    }\r\n\r\n    get to() {\r\n        return this._to;\r\n    }\r\n\r\n    set param_str(str) {\r\n        this._param_str = str;\r\n    } \r\n\r\n    get param_str() {\r\n        return this._param_str;\r\n    }\r\n\r\n    copy() {\r\n        return {\r\n            model : this._model,\r\n            state : this._state,\r\n            key : this._key,\r\n            to : this._to,\r\n            param_str : this._param_str\r\n        }\r\n    }\r\n\r\n\r\n    matches(map) {\r\n        if (this._model != map.model) return false;\r\n        if (this._state != map.state) return false;\r\n        if (this._to != map.to) return false;\r\n        return true;\r\n    }\r\n\r\n\r\n    convertToURL() {\r\n        let model = this._model;\r\n        let state = this._state;\r\n        let key = this._key;\r\n        let to = this._to;\r\n\r\n        let url = model + action_map[state];\r\n        if (key) url += \"-\" + key;\r\n        if (to) url += \"-to-\" + to;\r\n        return url;\r\n    }\r\n\r\n    convertFromURL(url) {\r\n        if (!url) return;\r\n        let parts = url.split(\"-to-\");\r\n        if (parts.length > 1) {\r\n            this._to = parts[1];\r\n            url = parts[0];\r\n        }\r\n        parts = url.split(\"-\");\r\n        let key = parts[parts.length - 1];\r\n        if (key == \"first\") {\r\n            this._key = key;\r\n            parts.pop();\r\n        } else if (!isNaN(key)) {\r\n            this._key = key;\r\n            parts.pop();\r\n        }\r\n        \r\n        if (parts.length == 0) {\r\n            throw new Error(\"Can't convert this url string: \" + url);\r\n        }\r\n        for(let i in action_map) {\r\n            if (action_map[i] == \"-\" + parts[parts.length - 1]) {\r\n                this._state = i\r\n                parts.pop();\r\n                break;\r\n            }\r\n        }\r\n        this._model = parts.join(\"-\");\r\n    }\r\n}\r\n\r\nlet maps = [];\r\nlet trigger_cb = null;\r\nlet route_base = \"/\";\r\n\r\n\r\nfunction decodeParams(param_str) {\r\n    const params = new URLSearchParams(param_str);\r\n    let param_obj = {};\r\n    params.forEach(function(value, key) {\r\n        param_obj[key] = value;\r\n    });\r\n    return param_obj;\r\n} \r\n\r\n\r\n\r\n\r\nfunction resetMaps() {\r\n    maps = [];\r\n}\r\n\r\nfunction trigger(trig) {\r\n    trigger_cb = trig;\r\n}\r\n\r\nfunction createMap() {\r\n    let map = new CtrlGroupMap();\r\n    maps.push(map);\r\n    return map;\r\n}\r\n\r\nfunction convertToURL() {\r\n    let str_parts = [];\r\n    for(let map of maps) {\r\n        str_parts.push(map.convertToURL());\r\n    }\r\n\r\n    const base = new URL(window.location.protocol + \"//\" + window.location.host + route_base);\r\n    const url_str = str_parts.join(\"/\");\r\n    const url = new URL(url_str, base);\r\n\r\n\r\n    let cstr = [];\r\n    for(let i in maps) {\r\n        if (maps[i].param_str) {\r\n            url.searchParams.set(\"stage_\" + i, maps[i].param_str);\r\n        }\r\n    }\r\n    return url;\r\n}\r\n\r\nfunction convertFromURL(url_obj) {\r\n    let url = url_obj.pathname.replace(route_base, \"\");\r\n    url = url.replace(/^\\/+|\\/+$/g, '');\r\n    let parts = url.split(\"/\");\r\n    maps = [];\r\n    for(let i in parts) {\r\n        let map = createMap();\r\n        map.convertFromURL(parts[i]);\r\n    }\r\n\r\n    const param_obj = url_obj.searchParams;\r\n    for(let i in maps) {\r\n        const param = param_obj.get(\"stage_\" + i);\r\n        if (param) maps[i].param_str = param;\r\n    }\r\n\r\n    if (trigger_cb) trigger_cb();\r\n}\r\n\r\n\r\nfunction setBase(base) {\r\n    //trim any leading or trailing / so we can be sure we are dealing with the correct format\r\n    base = base.replace(/^\\/+|\\/+$/g, '');\r\n    route_base = \"/\" + base + \"/\";\r\n}\r\n\r\nfunction getMaps() {\r\n    return maps;\r\n}\r\n\r\n\r\nexport default {\r\n    trigger,\r\n    resetMaps,\r\n    createMap,\r\n    convertToURL,\r\n    convertFromURL,\r\n    setBase,\r\n    getMaps\r\n}","let cb;\r\n\r\nfunction setRoute(uri, title = '') {\r\n    window.history.pushState({'name' : uri.pathname}, document.title, uri);\r\n    runRoute(uri);\r\n}\r\n\r\n\r\nfunction hardSetRoute(route) {\r\n    window.location = route;\r\n}\r\n\r\n\r\nwindow.onpopstate = function(event) {\r\n    runRoute(new URL(document.location.href));\r\n}\r\n\r\n\r\nfunction runRoute(uri) {\r\n    if (!uri) uri = new URL(window.location.href);\r\n    if (cb) cb(uri, window.location.search);\r\n}\r\n\r\nfunction softRoute(uri, title = '') {\r\n    window.history.pushState({'name' : uri.pathname}, document.title, uri);\r\n}\r\n\r\nfunction regCallback(callback) {\r\n    cb = callback;\r\n}\r\n\r\n\r\nexport default {\r\n    setRoute,\r\n    hardSetRoute,\r\n    runRoute,\r\n    regCallback,\r\n    softRoute\r\n}","import { reactive } from \"vue\"\r\nimport { Model } from \"./model.js\"\r\nimport Map from \"./ctrlmap.js\"\r\nimport Client from \"./client.js\"\r\nimport Router from \"./router.js\"\r\nimport ChangeAction from \"./changeaction.js\"\r\n\r\nlet _store = reactive({ 'models' : [], profile : null });\r\nlet _settings = {};\r\nlet _models = [];\r\nlet _seeker = -1;\r\n\r\n\r\nfunction setSettings(settings) {\r\n    if (settings.client) {\r\n        Client.setURL(settings.client.url);\r\n        if (settings.client.custom_headers) {\r\n            for(let i in settings.client.custom_headers) {\r\n                Client.regCustomHeader(i, settings.client.custom_headers[i]);\r\n            }\r\n        }\r\n    \r\n        if (settings.client.debug) {\r\n            Client.regDebug(true);\r\n        }\r\n    \r\n        Client.regStatusHandler(403, function() {\r\n            alert(\"Page not found\");\r\n        });\r\n    }\r\n    \r\n    if (settings.mapper) {\r\n        if (settings.mapper.base) Map.setBase(settings.mapper.base);\r\n    }\r\n\r\n    if (settings.models) _settings = settings.models;\r\n}\r\n\r\n\r\nfunction initProfile() {\r\n    return Client.get(\"/core-check-user\")\r\n    .then(response => {\r\n        _store.profile = response.__profile;\r\n        return _store.profile;\r\n    });\r\n}\r\n\r\nfunction assumeRole(role) {\r\n    return Client.post('/core-assume-role', { 'role' : role })\r\n    .then(request => {\r\n        _store.profile = request.__profile;\r\n        return _store.profile;\r\n    });\r\n}\r\n\r\nfunction removeRole() {\r\n    return Client.post('/core-remove-role')\r\n    .then(request => {\r\n        _store.profile = request.__profile;\r\n        return _store.profile;\r\n    });\r\n}\r\n\r\n\r\nfunction run() {\r\n    _seeker = -1;\r\n    let maps = Map.getMaps();\r\n    if (maps.length == 0) {\r\n        throw new Error(\"Error with controller run, no maps created\");\r\n    }\r\n    _store.models = [];\r\n    let promises = [];\r\n\r\n    if (_models.length > maps.length) {\r\n        _models.splice(maps.length, _models.length - maps.length);\r\n    }\r\n\r\n    for (let i in maps) {\r\n        const map = maps[i];\r\n        if (i >= _models.length || !map.matches(_models[i].map)) {\r\n            const model = new Model(map.copy(), i);\r\n            _models[i] = model;\r\n         \r\n            if (_settings && _settings[map.model] && _settings[map.model][map.state]) {\r\n                model.injectCustomSettings(_settings[map.model][map.state]);\r\n            }\r\n            promises.push(model.init().then(() => model.load()));\r\n        } else {\r\n            promises.push(_models[i].load());\r\n        }\r\n    }\r\n\r\n    //check the last map to see if it needs a child group\r\n    //omap will be one before last\r\n    Promise.all(promises)\r\n    .then(() => {\r\n        for(let model of _models) {\r\n            _store.models.push(model.exportToStore());\r\n        }\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    })    \r\n}\r\n\r\nfunction buildLink(soft = false) {\r\n    Map.resetMaps();\r\n    let omaps = [];\r\n    for(let i in _models) {\r\n        let model = _models[i];\r\n        omaps.push({ ...model.map });\r\n    }\r\n\r\n    ChangeAction.convertMaps(omaps);\r\n\r\n    for(const omap of omaps) {\r\n        let cmap = Map.createMap();\r\n        for(let i in omap) {\r\n            cmap[i] = omap[i];\r\n        }\r\n    }\r\n    let url = Map.convertToURL();\r\n    if (!soft) Router.setRoute(url);\r\n    else Router.softRoute(url);\r\n}\r\n\r\nfunction runLink() {\r\n    Map.runRoute();\r\n}\r\n\r\n\r\nfunction runData(uri = null) {\r\n    if (!uri) uri = new URL(window.location.href);\r\n    Map.convertFromURL(uri);\r\n}\r\n\r\n\r\n\r\nfunction reloadFromBase() {\r\n    Map.resetMaps();\r\n    let url = Map.convertToURL();\r\n    Router.setRoute(url);\r\n}\r\n\r\n\r\nfunction getStore() {\r\n    return _store.models[_seeker];\r\n}\r\n\r\n\r\nfunction next() {\r\n    ++_seeker;\r\n}\r\n\r\nMap.trigger(() => {\r\n    run();\r\n});\r\n\r\n\r\nfunction runRoute(method, url, params) {\r\n    return Client[method](url, params);\r\n}\r\n\r\nRouter.regCallback(Map.convertFromURL)\r\n\r\nexport default {\r\n    store : _store,\r\n    models : _models,\r\n    setSettings,\r\n    initProfile,\r\n    assumeRole,\r\n    removeRole,\r\n    run,\r\n    buildLink,\r\n    runLink,\r\n    runData,\r\n    reloadFromBase,\r\n    getStore,\r\n    next,\r\n    runRoute\r\n}\r\n","let classes_dict = {\r\n    'ptj-account-details-logout' : \"ptj-account-details-logout\",\r\n    'ptj-account-handler' : 'ptj-account-handler',\r\n    'ptj-breadcrumbs' : 'ptj-breadcrumbs',\r\n    'ptj-card' : 'ptj-card',\r\n    'ptj-card-row' : 'ptj-card-row',\r\n    'ptj-card-label' : 'ptj-card-label',\r\n    'ptj-card-value' : 'ptj-card-value',\r\n    'ptj-form' : 'ptj-form',\r\n    'ptj-form-title' : 'ptj-form-title',\r\n    'ptj-form-error' : 'ptj-form-error',\r\n    'ptj-form-group' : 'ptj-form-group',\r\n    'ptj-form-submit' : 'ptj-form-submit',\r\n    'ptj-root' : 'ptj-root',\r\n    'ptj-tabs' : 'ptj-tabs',\r\n    'ptj-tabs-card' : 'ptj-tabs-card',\r\n    'ptj-tabs-tab' : 'ptj-tabs-tab',\r\n    'ptj-repo' : 'ptj-repo',\r\n    'ptj-nav' : 'ptj-nav',\r\n    'ptj-nav-link' : 'ptj-nav-link',\r\n    'ptj-single-item' : 'ptj-single-item',\r\n    'ptj-single-item-row' : 'ptj-single-item-row',\r\n    'ptj-single-item-label' : 'ptj-single-item-label',\r\n    'ptj-single-item-value' : 'ptj-single-item-value',\r\n    'ptj-single-item-actions' : 'ptj-single-item-actions',\r\n    'ptj-single-item-children' : 'ptj-single-item-children',\r\n    'ptj-widget-window' : 'ptj-widget-window',\r\n    'ptj-widget-window-header' : 'ptj-widget-window-header',\r\n    'ptj-widget-window-title' : 'ptj-widget-window-title',\r\n    'ptj-widget-window-toggle' : 'ptj-widget-window-toggle',\r\n    'ptj-widget-window-body' : 'ptj-widget-window-body',\r\n    'ptj-repo-header-title' : 'ptj-repo-header-title',\r\n    'ptj-repo-header-actions' : 'ptj-repo-header-actions',\r\n    'ptj-tree' : 'ptj-tree',\r\n    'ptj-form-row' : 'ptj-form-row',\r\n    'ptj-form-input-row' : 'ptj-form-input-row',\r\n    'ptj-form-input-label' : 'ptj-form-input-label',\r\n    'ptj-form-input' : 'ptj-form-input',\r\n    'ptj-table' : 'ptj-table',\r\n    'ptj-table-header' : 'ptj-table-header',\r\n    'ptj-table-header-cell' : 'ptj-table-header-cell',\r\n    'ptj-table-row' : 'ptj-table-row',\r\n    'ptj-table-cell' : 'ptj-table-cell',\r\n    'ptj-table-cell-sortable' : 'ptj-table-cell-sortable',\r\n    'ptj-form-confirm-row' : 'ptj-form-confirm-row',\r\n    'ptj-form-confirm-label' : 'ptj-form-confirm-label',\r\n    'ptj-form-confirm' : 'ptj-form-confirm',\r\n    'ptj-pagination' : 'ptj-pagination',\r\n    'ptj-filter-form' : 'ptj-filter-form',\r\n    'ptj-filter-form-group' : 'ptj-filter-form-group',\r\n    'ptj-filter-form-submit' : 'ptj-filter-form-submit',\r\n    'ptj-form-select-row' : 'ptj-form-select-row',\r\n    'ptj-form-select-label' : 'ptj-form-select-label',\r\n    'ptj-form-select' : 'ptj-form-select',\r\n    'ptj-tree-node' : 'ptj-tree-node',\r\n    'ptj-tree-node-row' : 'ptj-tree-node-row',\r\n    'ptj-selectfields' : 'ptj-selectfields',\r\n    'ptj-selectfields-checkbox' : 'ptj-selectfields-checkbox',\r\n    'ptj-selectfields-label' : 'ptj-selectfields-label',\r\n    'ptj-form-radio-row' : 'ptj-form-radio-row',\r\n    'ptj-form-radio-label' : 'ptj-form-radio-label',\r\n    'ptj-form-radio-option-label' : 'ptj-form-radio-option-label',\r\n    'ptj-checkbox-row' : 'ptj-checkbox-row',\r\n    'ptj-checkbox-label' : 'ptj-checkbox-label',\r\n    'ptj-checkbox' : 'ptj-checkbox',\r\n    'ptj-form-textarea-row' : 'ptj-form-textarea-row',\r\n    'ptj-form-textarea-label' : 'ptj-form-textarea-label',\r\n    'ptj-form-textarea' : 'ptj-form-textarea',\r\n    'ptj-form-asset-row' : 'ptj-form-asset-row',\r\n    'ptj-form-asset-label' : 'ptj-form-asset-label',\r\n    'ptj-form-asset' : 'ptj-form-asset',\r\n    'ptj-progress-bar-wrapper' : 'ptj-progress-bar-wrapper',\r\n    'ptj-progress-bar-holder' : 'ptj-progress-bar-holder',\r\n    'ptj-progress-bar' : 'ptj-progress-bar',\r\n    'ptj-error' : 'ptj-error',\r\n    'ptj-filter-form-time-row' : 'ptj-filter-form-time-row',\r\n    'ptj-filter-form-time-label' : 'ptj-filter-form-time-label',\r\n    'ptj-filter-form-time-1' : 'ptj-filter-form-time-1',\r\n    'ptj-filter-form-time-2' : 'ptj-filter-form-time-2',\r\n    'ptj-filter-form-checkbox-row' : 'ptj-filter-form-checkbox-row',\r\n    'ptj-filter-form-checkbox-label' : 'ptj-filter-form-checkbox-label',\r\n    'ptj-filter-form-checkbox' : 'ptj-filter-form-checkbox',\r\n    'ptj-account-details-logout' : 'ptj-account-details-logout',\r\n    'ptj-accounthandler' : 'ptj-accounthandler',\r\n    'ptj-list' : 'ptj-list'\r\n};\r\n\r\nfunction regClass(name, value) {\r\n    classes_dict[name] = value;\r\n}\r\n\r\nfunction getClass(name) {\r\n    return classes_dict[name];\r\n} \r\n\r\nexport default {\r\n    regClass,\r\n    getClass\r\n}","<template>\r\n    <div :class=\"Class.getClass('ptj-progress-bar-wrapper')\">\r\n        <div :class=\"Class.getClass('ptj-progress-bar-holder') + ' ptj-progress-holder'\">\r\n            <div :class=\"Class.getClass('ptj-progress-bar') + ' ptj-bar'\" :style=\"style\">&nbsp;</div> \r\n        </div>   \r\n        <span>{{ num }}%</span>\r\n    </div> \r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent} from \"vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-progress-bar',\r\n  props : {\r\n      total : Number,\r\n      progress : Number\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  computed : {\r\n      num() {\r\n          let num = Math.floor((this.progress / this.total) * 100);\r\n          return (isNaN(num)) ? 0 : num;\r\n      },\r\n      style() {\r\n          return \"width:\" +  this.num + \"%;\";\r\n      }\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n .ptj-progress-holder {\r\n     width : 100%;\r\n     min-height : 10px;\r\n     position : relative;\r\n     display : flex;\r\n     align-items: stretch;\r\n     padding : 2px;\r\n }\r\n\r\n .ptj-bar {\r\n     width : 0;\r\n     height : 100%;\r\n     position : relative;\r\n     line-height : 100%;\r\n }\r\n\r\n\r\n</style>\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","<template>\r\n    <div :class=\"Class.getClass('ptj-progress-bar-wrapper')\">\r\n        <div :class=\"Class.getClass('ptj-progress-bar-holder') + ' ptj-progress-holder'\">\r\n            <div :class=\"Class.getClass('ptj-progress-bar') + ' ptj-bar'\" :style=\"style\">&nbsp;</div> \r\n        </div>   \r\n        <span>{{ num }}%</span>\r\n    </div> \r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent} from \"vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-progress-bar',\r\n  props : {\r\n      total : Number,\r\n      progress : Number\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  computed : {\r\n      num() {\r\n          let num = Math.floor((this.progress / this.total) * 100);\r\n          return (isNaN(num)) ? 0 : num;\r\n      },\r\n      style() {\r\n          return \"width:\" +  this.num + \"%;\";\r\n      }\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n .ptj-progress-holder {\r\n     width : 100%;\r\n     min-height : 10px;\r\n     position : relative;\r\n     display : flex;\r\n     align-items: stretch;\r\n     padding : 2px;\r\n }\r\n\r\n .ptj-bar {\r\n     width : 0;\r\n     height : 100%;\r\n     position : relative;\r\n     line-height : 100%;\r\n }\r\n\r\n\r\n</style>\r\n","<template>\r\n    <p :class=\"Class.getClass('ptj-error')\">{{ error }}</p>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    name : 'ptj-error',\r\n    props : {\r\n        'error' : [Number, String]\r\n    },\r\n    setup() { \r\n        return { Class }\r\n    }\r\n});\r\n\r\n</script>\r\n\r\n<style>\r\n.error {\r\n  color : red;\r\n}\r\n</style>","<template>\r\n    <p :class=\"Class.getClass('ptj-error')\">{{ error }}</p>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    name : 'ptj-error',\r\n    props : {\r\n        'error' : [Number, String]\r\n    },\r\n    setup() { \r\n        return { Class }\r\n    }\r\n});\r\n\r\n</script>\r\n\r\n<style>\r\n.error {\r\n  color : red;\r\n}\r\n</style>","<template>\r\n  <div :class=\"classes\">\r\n  <label :class=\"Class.getClass('ptj-form-label')\">{{ field.meta.label }}</label>\r\n  <slot />\r\n  <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup(props) {\r\n       return { Class };\r\n  },\r\n  computed : {\r\n      classes() {\r\n          return Class.getClass('ptj-form-row') + ' ' + this.field.meta.type;\r\n      }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>","<template>\r\n  <div :class=\"classes\">\r\n  <label :class=\"Class.getClass('ptj-form-label')\">{{ field.meta.label }}</label>\r\n  <slot />\r\n  <ptj-error v-show=\"field.showError\" :error=\"field.error\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCError from \"./ptj-error.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n   props : {\r\n    field : Object\r\n  },\r\n  setup(props) {\r\n       return { Class };\r\n  },\r\n  computed : {\r\n      classes() {\r\n          return Class.getClass('ptj-form-row') + ' ' + this.field.meta.type;\r\n      }\r\n  },\r\n  components : {\r\n      'ptj-error' : GCError\r\n  }\r\n});\r\n</script>","<template>\r\n  <input v-if=\"editable\"\r\n        :class=\"Class.getClass('ptj-form-number')\" \r\n        :name=\"field.meta.name\" \r\n        type=\"number\" \r\n        v-model=\"field.val\" \r\n        @blur=\"field.validateon = true\" :readonly=\"field.meta.readonly\">\r\n   <div v-else-if=\"filter\">\r\n       <input v-if=\"editable\"\r\n        :class=\"Class.getClass('ptj-form-number')\" \r\n        :name=\"field.meta.name\" \r\n        type=\"number\" \r\n        v-model=\"field.val\" \r\n        @blur=\"field.validateon = true\" :readonly=\"field.meta.readonly\"> - \r\n        <input v-if=\"editable\"\r\n        :class=\"Class.getClass('ptj-form-number')\" \r\n        :name=\"field.meta.name\" \r\n        type=\"number\" \r\n        v-model=\"field.val\" \r\n        @blur=\"field.validateon = true\" :readonly=\"field.meta.readonly\">\r\n   </div>\r\n   <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-number',\r\n  props : {\r\n    field : Object,\r\n    editable : {\r\n        type : Boolean,\r\n        default : false\r\n    },\r\n    filter : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <input v-if=\"editable\"\r\n        :class=\"Class.getClass('ptj-form-number')\" \r\n        :name=\"field.meta.name\" \r\n        type=\"number\" \r\n        v-model=\"field.val\" \r\n        @blur=\"field.validateon = true\" :readonly=\"field.meta.readonly\">\r\n   <div v-else-if=\"filter\">\r\n       <input v-if=\"editable\"\r\n        :class=\"Class.getClass('ptj-form-number')\" \r\n        :name=\"field.meta.name\" \r\n        type=\"number\" \r\n        v-model=\"field.val\" \r\n        @blur=\"field.validateon = true\" :readonly=\"field.meta.readonly\"> - \r\n        <input v-if=\"editable\"\r\n        :class=\"Class.getClass('ptj-form-number')\" \r\n        :name=\"field.meta.name\" \r\n        type=\"number\" \r\n        v-model=\"field.val\" \r\n        @blur=\"field.validateon = true\" :readonly=\"field.meta.readonly\">\r\n   </div>\r\n   <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-number',\r\n  props : {\r\n    field : Object,\r\n    editable : {\r\n        type : Boolean,\r\n        default : false\r\n    },\r\n    filter : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n    <input :class=\"Class.getClass('ptj-checkbox')\" type=\"checkbox\" :true-value=\"1\" :false-value=\"0\" :name=\"field.meta.name\" v-model=\"field.val\" v-if=\"editable\">\r\n    <select v-else-if=\"filter\" :name=\"field.meta.name\" v-model=\"field.val\" :class=\"Class.getClass('ptj-filter-form-checkbox')\">\r\n        <option :value='0'>{{ \"All\" }}</option>\r\n        <option :value='1'>{{ \"Checked\" }}</option>\r\n        <option :value='2'>{{ \"Unchecked\" }}</option>\r\n    </select>\r\n    <button v-else>{{ field.val }}</button>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-flag',\r\n  props : {\r\n    field : Object,\r\n    editable : {\r\n        type : Boolean,\r\n        default : false\r\n    },\r\n    filter : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n  },\r\n  data() {\r\n      return {\r\n          cval : \"\"\r\n      }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  }\r\n});\r\n</script>","<template>\r\n    <input :class=\"Class.getClass('ptj-checkbox')\" type=\"checkbox\" :true-value=\"1\" :false-value=\"0\" :name=\"field.meta.name\" v-model=\"field.val\" v-if=\"editable\">\r\n    <select v-else-if=\"filter\" :name=\"field.meta.name\" v-model=\"field.val\" :class=\"Class.getClass('ptj-filter-form-checkbox')\">\r\n        <option :value='0'>{{ \"All\" }}</option>\r\n        <option :value='1'>{{ \"Checked\" }}</option>\r\n        <option :value='2'>{{ \"Unchecked\" }}</option>\r\n    </select>\r\n    <button v-else>{{ field.val }}</button>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-flag',\r\n  props : {\r\n    field : Object,\r\n    editable : {\r\n        type : Boolean,\r\n        default : false\r\n    },\r\n    filter : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n  },\r\n  data() {\r\n      return {\r\n          cval : \"\"\r\n      }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  }\r\n});\r\n</script>","<template>\r\n    <select v-if=\"editable\" \r\n        :class=\"Class.getClass('ptj-form-select')\" \r\n        v-model=\"field.val\"\r\n        :name=\"field.meta.name\"\r\n        v-bind=\"atts\"\r\n         @blur=\"field.validateon = true\"\r\n        >\r\n        <option value=\"0\" selected>Select Option</option>\r\n        <option v-for=\"option in field.meta.options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <select v-else-if=\"filter\"\r\n    :class=\"Class.getClass('ptj-form-select')\" \r\n        v-model=\"field.val\"\r\n        :name=\"field.meta.name\"\r\n        v-bind=\"atts\"\r\n         @blur=\"field.validateon = true\"\r\n         multiple=\"true\"\r\n        >\r\n        <option value=\"0\" selected disabled>All</option>\r\n        <option v-for=\"option in field.meta.options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-flag',\r\n  props : {\r\n    field : Object,\r\n    editable : {\r\n        type : Boolean,\r\n        default : false\r\n    },\r\n    filter : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n  },\r\n  data() {\r\n      return {\r\n          cval : \"\"\r\n      }\r\n  },\r\n  computed : {\r\n      atts() {\r\n          \r\n      }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  }\r\n});\r\n</script>","<template>\r\n    <select v-if=\"editable\" \r\n        :class=\"Class.getClass('ptj-form-select')\" \r\n        v-model=\"field.val\"\r\n        :name=\"field.meta.name\"\r\n        v-bind=\"atts\"\r\n         @blur=\"field.validateon = true\"\r\n        >\r\n        <option value=\"0\" selected>Select Option</option>\r\n        <option v-for=\"option in field.meta.options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <select v-else-if=\"filter\"\r\n    :class=\"Class.getClass('ptj-form-select')\" \r\n        v-model=\"field.val\"\r\n        :name=\"field.meta.name\"\r\n        v-bind=\"atts\"\r\n         @blur=\"field.validateon = true\"\r\n         multiple=\"true\"\r\n        >\r\n        <option value=\"0\" selected disabled>All</option>\r\n        <option v-for=\"option in field.meta.options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-flag',\r\n  props : {\r\n    field : Object,\r\n    editable : {\r\n        type : Boolean,\r\n        default : false\r\n    },\r\n    filter : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n  },\r\n  data() {\r\n      return {\r\n          cval : \"\"\r\n      }\r\n  },\r\n  computed : {\r\n      atts() {\r\n          \r\n      }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  }\r\n});\r\n</script>","<template>\r\n  <input v-if=\"editable\"\r\n        :class=\"Class.getClass('ptj-form-time')\" \r\n        :name=\"field.meta.name\" \r\n        type=\"datetime-local\" \r\n        v-model=\"field.val\" \r\n        @blur=\"field.validateon = true\" :readonly=\"field.meta.readonly\">\r\n   <div v-else-if=\"filter\">\r\n      <input \r\n        :class=\"Class.getClass('ptj-filter-form-time-1')\" \r\n        type=\"datetime-local\" \r\n        v-model=\"field.val1\">\r\n        -\r\n        <input \r\n            :class=\"Class.getClass('ptj-filter-form-time-2')\" \r\n            type=\"datetime-local\" \r\n            v-model=\"field.val2\"\r\n        >\r\n   </div>\r\n   <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-time',\r\n  props : {\r\n    field : Object,\r\n    editable : {\r\n        type : Boolean,\r\n        default : false\r\n    },\r\n    filter : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <input v-if=\"editable\"\r\n        :class=\"Class.getClass('ptj-form-time')\" \r\n        :name=\"field.meta.name\" \r\n        type=\"datetime-local\" \r\n        v-model=\"field.val\" \r\n        @blur=\"field.validateon = true\" :readonly=\"field.meta.readonly\">\r\n   <div v-else-if=\"filter\">\r\n      <input \r\n        :class=\"Class.getClass('ptj-filter-form-time-1')\" \r\n        type=\"datetime-local\" \r\n        v-model=\"field.val1\">\r\n        -\r\n        <input \r\n            :class=\"Class.getClass('ptj-filter-form-time-2')\" \r\n            type=\"datetime-local\" \r\n            v-model=\"field.val2\"\r\n        >\r\n   </div>\r\n   <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-time',\r\n  props : {\r\n    field : Object,\r\n    editable : {\r\n        type : Boolean,\r\n        default : false\r\n    },\r\n    filter : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n   <textarea v-if=\"tag=='textarea'\"\r\n        v-bind=\"atts\" \r\n        :name=\"field.meta.name\" \r\n        v-model=\"field.val\"></textarea>\r\n   <select v-else-if=\"tag=='select'\" \r\n        :class=\"Class.getClass('ptj-form-select')\" \r\n        v-model=\"field.val\"\r\n        :name=\"field.meta.name\"\r\n        v-bind=\"atts\"\r\n         @blur=\"field.validateon = true\"\r\n        >\r\n        <option value=\"0\" selected disabled>Select Option</option>\r\n        <option v-for=\"option in options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <input v-else v-bind=\"atts\"\r\n        :class=\"Class.getClass('ptj-form-number')\" \r\n        :name=\"field.meta.name\"\r\n        v-model=\"field.val\" \r\n        @blur=\"field.validateon = true\" :readonly=\"field.meta.readonly\" />\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-string-editable',\r\n  props : {\r\n    field : Object,\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  methods : {\r\n    isEnum(contains) {\r\n        if (!contains) return null;\r\n        let enums=[];\r\n        const regEx = new RegExp(/^[a-zA-Z]+[a-zA-Z0-9._]+$/);\r\n        const exps = contains.split(\"|\");\r\n        for(let exp of exps) {\r\n            if (!exp) continue;\r\n            if (regEx.test(exp)) {\r\n                enums.push(exp);\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n        return enums;\r\n    }\r\n  },\r\n  computed : {\r\n      tag() {\r\n          if (this.isEnum(this.field.meta.validator.contains)) {\r\n              return \"select\";\r\n          } else if (this.field.meta.html || this.field.meta.max > 150) {\r\n              return \"textarea\";\r\n          } else {\r\n              return \"input\";\r\n          }\r\n      },\r\n      options() {\r\n          const exps = this.field.meta.validator.contains.split(\"|\");\r\n          let options = [];\r\n          for(let exp of exps) {\r\n              options.push({ key : exp, value : exp});\r\n          }\r\n          return options;\r\n      },\r\n      atts() {\r\n          let atts = {};\r\n          if (this.field.meta.encrypted) {\r\n              atts.type = \"password\";\r\n          }\r\n\r\n          if (this.field.meta.readonly) {\r\n              atts.readonly = true;\r\n          }\r\n\r\n          if (this.field.meta.placeholder) {\r\n              atts.placeholder = field.meta.placeholder;\r\n          }\r\n\r\n          if (this.field.meta.html) {\r\n              atts[\"data-html\"] = 1;\r\n          }\r\n          return atts;\r\n      }\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n   <textarea v-if=\"tag=='textarea'\"\r\n        v-bind=\"atts\" \r\n        :name=\"field.meta.name\" \r\n        v-model=\"field.val\"></textarea>\r\n   <select v-else-if=\"tag=='select'\" \r\n        :class=\"Class.getClass('ptj-form-select')\" \r\n        v-model=\"field.val\"\r\n        :name=\"field.meta.name\"\r\n        v-bind=\"atts\"\r\n         @blur=\"field.validateon = true\"\r\n        >\r\n        <option value=\"0\" selected disabled>Select Option</option>\r\n        <option v-for=\"option in options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <input v-else v-bind=\"atts\"\r\n        :class=\"Class.getClass('ptj-form-number')\" \r\n        :name=\"field.meta.name\"\r\n        v-model=\"field.val\" \r\n        @blur=\"field.validateon = true\" :readonly=\"field.meta.readonly\" />\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-string-editable',\r\n  props : {\r\n    field : Object,\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  methods : {\r\n    isEnum(contains) {\r\n        if (!contains) return null;\r\n        let enums=[];\r\n        const regEx = new RegExp(/^[a-zA-Z]+[a-zA-Z0-9._]+$/);\r\n        const exps = contains.split(\"|\");\r\n        for(let exp of exps) {\r\n            if (!exp) continue;\r\n            if (regEx.test(exp)) {\r\n                enums.push(exp);\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n        return enums;\r\n    }\r\n  },\r\n  computed : {\r\n      tag() {\r\n          if (this.isEnum(this.field.meta.validator.contains)) {\r\n              return \"select\";\r\n          } else if (this.field.meta.html || this.field.meta.max > 150) {\r\n              return \"textarea\";\r\n          } else {\r\n              return \"input\";\r\n          }\r\n      },\r\n      options() {\r\n          const exps = this.field.meta.validator.contains.split(\"|\");\r\n          let options = [];\r\n          for(let exp of exps) {\r\n              options.push({ key : exp, value : exp});\r\n          }\r\n          return options;\r\n      },\r\n      atts() {\r\n          let atts = {};\r\n          if (this.field.meta.encrypted) {\r\n              atts.type = \"password\";\r\n          }\r\n\r\n          if (this.field.meta.readonly) {\r\n              atts.readonly = true;\r\n          }\r\n\r\n          if (this.field.meta.placeholder) {\r\n              atts.placeholder = field.meta.placeholder;\r\n          }\r\n\r\n          if (this.field.meta.html) {\r\n              atts[\"data-html\"] = 1;\r\n          }\r\n          return atts;\r\n      }\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n   <div v-if=\"tag=='textarea'\">{{ field.val }}</div>\r\n   <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-string-display',\r\n  props : {\r\n    field : Object,\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  computed : {\r\n      tag() {\r\n          if (this.field.meta.html || this.field.meta.max > 150) {\r\n              return \"textarea\";\r\n          } else {\r\n              return \"input\";\r\n          }\r\n      }\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n   <div v-if=\"tag=='textarea'\">{{ field.val }}</div>\r\n   <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-string-display',\r\n  props : {\r\n    field : Object,\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  computed : {\r\n      tag() {\r\n          if (this.field.meta.html || this.field.meta.max > 150) {\r\n              return \"textarea\";\r\n          } else {\r\n              return \"input\";\r\n          }\r\n      }\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n   <select v-if=\"tag=='select'\" \r\n        :class=\"Class.getClass('ptj-form-select')\" \r\n        v-model=\"field.val\"\r\n        :name=\"field.meta.name\"\r\n        v-bind=\"atts\"\r\n         @blur=\"field.validateon = true\"\r\n         multiple=\"true\"\r\n        >\r\n        <option value=\"0\" selected disabled>Select Option</option>\r\n        <option v-for=\"option in options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <input v-else v-bind=\"atts\"\r\n        :class=\"Class.getClass('ptj-form-number')\" \r\n        :name=\"field.meta.name\"\r\n        v-model=\"field.val\" \r\n        @blur=\"field.validateon = true\" :readonly=\"field.meta.readonly\" />\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-string-filter',\r\n  props : {\r\n    field : Object,\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  methods : {\r\n    isEnum(contains) {\r\n        if (!contains) return null;\r\n        let enums=[];\r\n        const regEx = new RegExp(/^[a-zA-Z]+[a-zA-Z0-9._]+$/);\r\n        const exps = contains.split(\"|\");\r\n        for(let exp of exps) {\r\n            if (!exp) continue;\r\n            if (regEx.test(exp)) {\r\n                enums.push(exp);\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n        return enums;\r\n    }\r\n  },\r\n  computed : {\r\n      tag() {\r\n          if (this.isEnum(this.field.meta.validator.contains)) {\r\n              return \"select\";\r\n          } else if (this.field.meta.html || this.field.meta.max > 150) {\r\n              return \"textarea\";\r\n          } else {\r\n              return \"input\";\r\n          }\r\n      },\r\n      options() {\r\n          const exps = this.field.meta.validator.contains.split(\"|\");\r\n          let options = [];\r\n          for(let exp of exps) {\r\n              options.push({ key : exp, value : exp});\r\n          }\r\n          return options;\r\n      },\r\n      atts() {\r\n          let atts = {};\r\n          if (this.field.meta.encrypted) {\r\n              atts.type = \"hidden\";\r\n          }\r\n\r\n          if (this.field.meta.readonly) {\r\n              atts.readonly = true;\r\n          }\r\n\r\n          if (this.field.meta.placeholder) {\r\n              atts.placeholder = field.meta.placeholder;\r\n          }\r\n\r\n          if (this.field.meta.html) {\r\n              atts[\"data-html\"] = 1;\r\n          }\r\n          return atts;\r\n      }\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n   <select v-if=\"tag=='select'\" \r\n        :class=\"Class.getClass('ptj-form-select')\" \r\n        v-model=\"field.val\"\r\n        :name=\"field.meta.name\"\r\n        v-bind=\"atts\"\r\n         @blur=\"field.validateon = true\"\r\n         multiple=\"true\"\r\n        >\r\n        <option value=\"0\" selected disabled>Select Option</option>\r\n        <option v-for=\"option in options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <input v-else v-bind=\"atts\"\r\n        :class=\"Class.getClass('ptj-form-number')\" \r\n        :name=\"field.meta.name\"\r\n        v-model=\"field.val\" \r\n        @blur=\"field.validateon = true\" :readonly=\"field.meta.readonly\" />\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-string-filter',\r\n  props : {\r\n    field : Object,\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  methods : {\r\n    isEnum(contains) {\r\n        if (!contains) return null;\r\n        let enums=[];\r\n        const regEx = new RegExp(/^[a-zA-Z]+[a-zA-Z0-9._]+$/);\r\n        const exps = contains.split(\"|\");\r\n        for(let exp of exps) {\r\n            if (!exp) continue;\r\n            if (regEx.test(exp)) {\r\n                enums.push(exp);\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n        return enums;\r\n    }\r\n  },\r\n  computed : {\r\n      tag() {\r\n          if (this.isEnum(this.field.meta.validator.contains)) {\r\n              return \"select\";\r\n          } else if (this.field.meta.html || this.field.meta.max > 150) {\r\n              return \"textarea\";\r\n          } else {\r\n              return \"input\";\r\n          }\r\n      },\r\n      options() {\r\n          const exps = this.field.meta.validator.contains.split(\"|\");\r\n          let options = [];\r\n          for(let exp of exps) {\r\n              options.push({ key : exp, value : exp});\r\n          }\r\n          return options;\r\n      },\r\n      atts() {\r\n          let atts = {};\r\n          if (this.field.meta.encrypted) {\r\n              atts.type = \"hidden\";\r\n          }\r\n\r\n          if (this.field.meta.readonly) {\r\n              atts.readonly = true;\r\n          }\r\n\r\n          if (this.field.meta.placeholder) {\r\n              atts.placeholder = field.meta.placeholder;\r\n          }\r\n\r\n          if (this.field.meta.html) {\r\n              atts[\"data-html\"] = 1;\r\n          }\r\n          return atts;\r\n      }\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <ptj-string-editable v-if=\"editable\" :field=\"field\" />\r\n  <ptj-string-filter v-else-if=\"filter\" :field=\"field\" />\r\n  <ptj-string-display v-else :field=\"field\" />\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\nimport PtjStringEditable from \"./ptj-string-editable.vue\"\r\nimport PtjStringDisplay from \"./ptj-string-display.vue\"\r\nimport PtjStringFilter from \"./ptj-string-filter.vue\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-string',\r\n  props : {\r\n    field : Object,\r\n    editable : {\r\n        type : Boolean,\r\n        default : false\r\n    },\r\n    filter : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      \"ptj-string-editable\" : PtjStringEditable,\r\n      \"ptj-string-display\" : PtjStringDisplay,\r\n      \"ptj-string-filter\" : PtjStringFilter\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <ptj-string-editable v-if=\"editable\" :field=\"field\" />\r\n  <ptj-string-filter v-else-if=\"filter\" :field=\"field\" />\r\n  <ptj-string-display v-else :field=\"field\" />\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\nimport PtjStringEditable from \"./ptj-string-editable.vue\"\r\nimport PtjStringDisplay from \"./ptj-string-display.vue\"\r\nimport PtjStringFilter from \"./ptj-string-filter.vue\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-string',\r\n  props : {\r\n    field : Object,\r\n    editable : {\r\n        type : Boolean,\r\n        default : false\r\n    },\r\n    filter : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  components : {\r\n      \"ptj-string-editable\" : PtjStringEditable,\r\n      \"ptj-string-display\" : PtjStringDisplay,\r\n      \"ptj-string-filter\" : PtjStringFilter\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n   <input v-if=\"editable\" :class=\"Class.getClass('ptj-form-asset')\" \r\n    ref=\"input\" @change=\"setFile\" \r\n    :name=\"field.meta.name\" \r\n    type=\"file\" >\r\n   <span v-else>{{ field.val }}</span>\r\n   \r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-asset',\r\n  props : {\r\n    field : Object,\r\n    editable : {\r\n        type : Boolean,\r\n        default : false\r\n    },\r\n    filter : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n   <input v-if=\"editable\" :class=\"Class.getClass('ptj-form-asset')\" \r\n    ref=\"input\" @change=\"setFile\" \r\n    :name=\"field.meta.name\" \r\n    type=\"file\" >\r\n   <span v-else>{{ field.val }}</span>\r\n   \r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-asset',\r\n  props : {\r\n    field : Object,\r\n    editable : {\r\n        type : Boolean,\r\n        default : false\r\n    },\r\n    filter : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n <form @submit.prevent=\"submit\" v-show=\"fstate==0\" :class=\"Class.getClass('ptj-form') + ' ' + store.classes\">\r\n    <div :class=\"Class.getClass('ptj-form-error')\" v-show=\"globalerror\">{{ globalerror }}</div>\r\n    <ptj-form-row v-for=\"field in store.data.cells\" :key=\"field.meta.name\" :field=\"field\" :class=\"Class.getClass('ptj-form-group')\">\r\n          <ptj-asset v-if=\"field.meta.type=='asset'\" :editable=\"true\"  :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.meta.type=='number'\" :editable=\"true\" :field=\"field\"/>\r\n          <ptj-flag v-else-if=\"field.meta.type=='flag'\" :editable=\"true\" :field=\"field\" />\r\n          <ptj-id v-else-if=\"field.meta.type=='id'\" :editable=\"true\" :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.meta.type=='time'\" :editable=\"true\"  :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.meta.type=='string'\" :editable=\"true\" :field=\"field\" />\r\n    </ptj-form-row>\r\n    <input type=\"submit\" value=\"Submit\" :class=\"Class.getClass('ptj-form-submit')\">\r\n  </form>\r\n  <ptj-progress-bar v-show=\"fstate == 1\" :total=\"store.progress.total\" :progress=\"store.progress.progress\" />\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport PtjProgressBar from \"./ptj-progress-bar.vue\"\r\nimport Errors from \"../js/error.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-form',\r\n  data() {\r\n      return {\r\n          fstate : 0,\r\n          globalerror : ''\r\n      }\r\n  },\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  methods : {\r\n    clearErrors() {\r\n        this.globalerror = \"\";\r\n        for(let i in this.store.data.cells) {\r\n            this.store.data.cells[i].error = 0;\r\n        }\r\n    },\r\n    submit() {\r\n        this.fstate = (this.total > 0) ? 1 : 2;\r\n        this.clearErrors();\r\n        return this.store.submit()\r\n        .then(key => {\r\n            this.store.next(key);\r\n            Ctrl.buildLink();\r\n        })\r\n        .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n            this.fstate = 0;\r\n            console.log(err);\r\n            if (typeof err == \"string\") {\r\n                this.globalerror = err;\r\n            } else {\r\n                for(let i in err) {\r\n                    if (i.indexOf(\"__\") === 0) continue;\r\n                    const cell = this.store.data.cells[i];\r\n                    if (cell) {\r\n                        cell.error = Errors.getError(err[i]);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-string\" : PtjString,\r\n      \"ptj-time\" : PtjTime,\r\n      \"ptj-asset\" : PtjAsset,\r\n      \"ptj-id\" : PtjId,\r\n      \"ptj-progress-bar\" : PtjProgressBar,\r\n      \"ptj-form-row\" : PtjFormRow,\r\n      \"ptj-flag\" : PtjFlag,\r\n      \"ptj-number\" : PtjNumber\r\n    }\r\n       \r\n  \r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n <form @submit.prevent=\"submit\" v-show=\"fstate==0\" :class=\"Class.getClass('ptj-form') + ' ' + store.classes\">\r\n    <div :class=\"Class.getClass('ptj-form-error')\" v-show=\"globalerror\">{{ globalerror }}</div>\r\n    <ptj-form-row v-for=\"field in store.data.cells\" :key=\"field.meta.name\" :field=\"field\" :class=\"Class.getClass('ptj-form-group')\">\r\n          <ptj-asset v-if=\"field.meta.type=='asset'\" :editable=\"true\"  :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.meta.type=='number'\" :editable=\"true\" :field=\"field\"/>\r\n          <ptj-flag v-else-if=\"field.meta.type=='flag'\" :editable=\"true\" :field=\"field\" />\r\n          <ptj-id v-else-if=\"field.meta.type=='id'\" :editable=\"true\" :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.meta.type=='time'\" :editable=\"true\"  :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.meta.type=='string'\" :editable=\"true\" :field=\"field\" />\r\n    </ptj-form-row>\r\n    <input type=\"submit\" value=\"Submit\" :class=\"Class.getClass('ptj-form-submit')\">\r\n  </form>\r\n  <ptj-progress-bar v-show=\"fstate == 1\" :total=\"store.progress.total\" :progress=\"store.progress.progress\" />\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport PtjProgressBar from \"./ptj-progress-bar.vue\"\r\nimport Errors from \"../js/error.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-form',\r\n  data() {\r\n      return {\r\n          fstate : 0,\r\n          globalerror : ''\r\n      }\r\n  },\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  methods : {\r\n    clearErrors() {\r\n        this.globalerror = \"\";\r\n        for(let i in this.store.data.cells) {\r\n            this.store.data.cells[i].error = 0;\r\n        }\r\n    },\r\n    submit() {\r\n        this.fstate = (this.total > 0) ? 1 : 2;\r\n        this.clearErrors();\r\n        return this.store.submit()\r\n        .then(key => {\r\n            this.store.next(key);\r\n            Ctrl.buildLink();\r\n        })\r\n        .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n            this.fstate = 0;\r\n            console.log(err);\r\n            if (typeof err == \"string\") {\r\n                this.globalerror = err;\r\n            } else {\r\n                for(let i in err) {\r\n                    if (i.indexOf(\"__\") === 0) continue;\r\n                    const cell = this.store.data.cells[i];\r\n                    if (cell) {\r\n                        cell.error = Errors.getError(err[i]);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-string\" : PtjString,\r\n      \"ptj-time\" : PtjTime,\r\n      \"ptj-asset\" : PtjAsset,\r\n      \"ptj-id\" : PtjId,\r\n      \"ptj-progress-bar\" : PtjProgressBar,\r\n      \"ptj-form-row\" : PtjFormRow,\r\n      \"ptj-flag\" : PtjFlag,\r\n      \"ptj-number\" : PtjNumber\r\n    }\r\n       \r\n  \r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n  <span :class=\"Class.getClass('ptj-nav') + ' ' + classes\">\r\n  <a v-for=\"route in actions\" v-bind:key=\"route\" @click=\"setRoute(route);\" :class=\"Class.getClass('ptj-nav-link')\">\r\n    {{ route.n }}\r\n  </a> \r\n  </span>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-nav',\r\n  props: {\r\n    actions : Array,\r\n    classes : {\r\n        type : String,\r\n        default : \"\"\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  methods : {\r\n      setRoute(route) {\r\n          route.r().\r\n          then(() => {\r\n            Ctrl.buildLink();\r\n          })\r\n          .catch(e => console.log(e));\r\n      }\r\n  }   \r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n  <span :class=\"Class.getClass('ptj-nav') + ' ' + classes\">\r\n  <a v-for=\"route in actions\" v-bind:key=\"route\" @click=\"setRoute(route);\" :class=\"Class.getClass('ptj-nav-link')\">\r\n    {{ route.n }}\r\n  </a> \r\n  </span>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-nav',\r\n  props: {\r\n    actions : Array,\r\n    classes : {\r\n        type : String,\r\n        default : \"\"\r\n    }\r\n  },\r\n  setup() {\r\n       return { Class };\r\n  },\r\n  methods : {\r\n      setRoute(route) {\r\n          route.r().\r\n          then(() => {\r\n            Ctrl.buildLink();\r\n          })\r\n          .catch(e => console.log(e));\r\n      }\r\n  }   \r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n    <div :class=\"Class.getClass('ptj-widget-window') + ' ' +  classes\">\r\n        <div :class=\"Class.getClass('ptj-widget-window-header')\">\r\n            <h1 :class=\"Class.getClass('ptj-widget-window-title')\">{{ title }}\r\n            <a :class=\"Class.getClass('ptj-widget-window-toggle')\" @click=\"toggleWidget\"><span class=\"material-icons\">more_horiz</span></a>\r\n            </h1>\r\n        </div>\r\n        <div class=\"Class.getClass('ptj-widget-window-body')\" v-show=\"show\">\r\n            <slot :toggleWidget=\"toggleWidget\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        title : String,\r\n        active : {\r\n            type : Boolean,\r\n            default : false\r\n        },\r\n        classes : {\r\n            type : String,\r\n            default : ''\r\n        }\r\n    },\r\n    setup() {\r\n       return { Class };\r\n    },\r\n    data() {\r\n        return {\r\n            show : this.active\r\n        }\r\n    },\r\n    methods : {\r\n        toggleWidget() {\r\n            this.show = (this.show) ? false : true;\r\n        }\r\n    }\r\n});\r\n\r\n</script>","<template>\r\n    <div :class=\"Class.getClass('ptj-widget-window') + ' ' +  classes\">\r\n        <div :class=\"Class.getClass('ptj-widget-window-header')\">\r\n            <h1 :class=\"Class.getClass('ptj-widget-window-title')\">{{ title }}\r\n            <a :class=\"Class.getClass('ptj-widget-window-toggle')\" @click=\"toggleWidget\"><span class=\"material-icons\">more_horiz</span></a>\r\n            </h1>\r\n        </div>\r\n        <div class=\"Class.getClass('ptj-widget-window-body')\" v-show=\"show\">\r\n            <slot :toggleWidget=\"toggleWidget\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        title : String,\r\n        active : {\r\n            type : Boolean,\r\n            default : false\r\n        },\r\n        classes : {\r\n            type : String,\r\n            default : ''\r\n        }\r\n    },\r\n    setup() {\r\n       return { Class };\r\n    },\r\n    data() {\r\n        return {\r\n            show : this.active\r\n        }\r\n    },\r\n    methods : {\r\n        toggleWidget() {\r\n            this.show = (this.show) ? false : true;\r\n        }\r\n    }\r\n});\r\n\r\n</script>","<template>\r\n <ptj-widget title=\"search\" v-slot=\"slotScope\">\r\n   <form @submit.prevent=\"submit\" :class=\"Class.getClass('ptj-filter-form')\">\r\n      <h1>Search {{ store.title }}</h1>\r\n      <ptj-form-row v-for=\"field in store.data_template.cells\" :key=\"field.meta.name\" :field=\"field\" :class=\"Class.getClass('ptj-filter-form-group')\">\r\n          <ptj-id v-if=\"field.meta.type=='id'\" :filter=\"true\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.meta.type=='flag'\" :filter=\"true\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.meta.type=='number'\" :filter=\"true\" :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.meta.type=='time'\" :filter=\"true\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.meta.type=='string'\" :filter=\"true\" :field=\"field\" />\r\n      </ptj-form-row>\r\n      <input type=\"submit\" value=\"Submit\" :class=\"Class.getClass('ptj-filter-form-submit')\" @click=\"slotScope.toggleWidget\">\r\n  </form>\r\n </ptj-widget>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-filter-form',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  methods : {\r\n    submit() {\r\n      this.store.reload();\r\n      Ctrl.buildLink(true);\r\n    }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-form-row\" : PtjFormRow,\r\n      \"ptj-id\" : PtjId,\r\n      \"ptj-flag\" : PtjFlag,\r\n      \"ptj-time\" : PtjTime,\r\n      \"ptj-number\" : PtjNumber,\r\n      \"ptj-string\" : PtjString,\r\n      \"ptj-widget\" : PtjWidget\r\n    }\r\n       \r\n  \r\n});\r\n</script>\r\n<style scoped>\r\n.error {\r\n  color : red;\r\n}\r\n\r\n</style>\r\n\r\n","<template>\r\n <ptj-widget title=\"search\" v-slot=\"slotScope\">\r\n   <form @submit.prevent=\"submit\" :class=\"Class.getClass('ptj-filter-form')\">\r\n      <h1>Search {{ store.title }}</h1>\r\n      <ptj-form-row v-for=\"field in store.data_template.cells\" :key=\"field.meta.name\" :field=\"field\" :class=\"Class.getClass('ptj-filter-form-group')\">\r\n          <ptj-id v-if=\"field.meta.type=='id'\" :filter=\"true\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.meta.type=='flag'\" :filter=\"true\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.meta.type=='number'\" :filter=\"true\" :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.meta.type=='time'\" :filter=\"true\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.meta.type=='string'\" :filter=\"true\" :field=\"field\" />\r\n      </ptj-form-row>\r\n      <input type=\"submit\" value=\"Submit\" :class=\"Class.getClass('ptj-filter-form-submit')\" @click=\"slotScope.toggleWidget\">\r\n  </form>\r\n </ptj-widget>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-filter-form',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  methods : {\r\n    submit() {\r\n      this.store.reload();\r\n      Ctrl.buildLink(true);\r\n    }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-form-row\" : PtjFormRow,\r\n      \"ptj-id\" : PtjId,\r\n      \"ptj-flag\" : PtjFlag,\r\n      \"ptj-time\" : PtjTime,\r\n      \"ptj-number\" : PtjNumber,\r\n      \"ptj-string\" : PtjString,\r\n      \"ptj-widget\" : PtjWidget\r\n    }\r\n       \r\n  \r\n});\r\n</script>\r\n<style scoped>\r\n.error {\r\n  color : red;\r\n}\r\n\r\n</style>\r\n\r\n","<template>\r\n <div :class=\"Class.getClass('ptj-pagination')\">\r\n     <a v-for=\"index in store.data_template.max_pages\" :key=\"index\" @click=\"setPage(index)\" :class=\"getActiveClass(index)\">{{ index }}</a>\r\n </div>\r\n</template>\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n    methods : {\r\n        setPage(index) {\r\n            this.store.setPage(index - 1);\r\n            Ctrl.buildLink(true);\r\n        },\r\n        getActiveClass(index) {\r\n            return (index - 1 == this.store.data_template.page) ? \"ptj-pagination-active\" : \"\";\r\n        }\r\n    }\r\n});\r\n</script>","<template>\r\n <div :class=\"Class.getClass('ptj-pagination')\">\r\n     <a v-for=\"index in store.data_template.max_pages\" :key=\"index\" @click=\"setPage(index)\" :class=\"getActiveClass(index)\">{{ index }}</a>\r\n </div>\r\n</template>\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Class from \"../js/classinjection.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n    methods : {\r\n        setPage(index) {\r\n            this.store.setPage(index - 1);\r\n            Ctrl.buildLink(true);\r\n        },\r\n        getActiveClass(index) {\r\n            return (index - 1 == this.store.data_template.page) ? \"ptj-pagination-active\" : \"\";\r\n        }\r\n    }\r\n});\r\n</script>","<template>\r\n    <ptj-widget title=\"select fields\" :classes=\"Class.getClass('ptj-selectfields')\">\r\n        <div v-for=\"field, name in store.fields\" :key=\"name\"> \r\n            <input \r\n                type=\"checkbox\" \r\n                v-model=\"field.summary\" \r\n                :true-value=\"1\" :false-value=\"0\"\r\n                :class=\"Class.getClass('ptj-selectfields-checkbox')\"> \r\n            <label :class=\"Class.getClass('ptj-selectfields-label')\">{{ field.name }}</label>\r\n        </div>\r\n    </ptj-widget>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },   \r\n    components : {\r\n        \"ptj-widget\" : GCWidget\r\n    }\r\n});\r\n</script>\r\n\r\n","<template>\r\n    <ptj-widget title=\"select fields\" :classes=\"Class.getClass('ptj-selectfields')\">\r\n        <div v-for=\"field, name in store.fields\" :key=\"name\"> \r\n            <input \r\n                type=\"checkbox\" \r\n                v-model=\"field.summary\" \r\n                :true-value=\"1\" :false-value=\"0\"\r\n                :class=\"Class.getClass('ptj-selectfields-checkbox')\"> \r\n            <label :class=\"Class.getClass('ptj-selectfields-label')\">{{ field.name }}</label>\r\n        </div>\r\n    </ptj-widget>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },   \r\n    components : {\r\n        \"ptj-widget\" : GCWidget\r\n    }\r\n});\r\n</script>\r\n\r\n","<template>\r\n    <h1 :class=\"Class.getClass('ptj-repo-header-title')\">{{ store.title }}</h1>\r\n    <p v-if=\"store.count\">Number of rows: {{ store.count }}</p>\r\n    <ptj-nav :actions=\"store.actions\" :class=\"Class.getClass('ptj-repo-header-actions')\"/>\r\n    <ptj-filter-form  v-if=\"store.disable_filter != true\"/>\r\n    <ptj-selectfields v-if=\"store.disable_selectfields != true\" />\r\n</template>\r\n\r\n<script>\r\n\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCFilterForm from \"./ptj-filter-form.vue\"\r\nimport GCPagination from \"./ptj-pagination.vue\"\r\nimport GCSelectFields from \"./ptj-selectfields.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-header',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n    components : {\r\n        \"ptj-nav\" : GCNav,\r\n        \"ptj-filter-form\" : GCFilterForm,\r\n        \"ptj-pagination\" : GCPagination,\r\n        \"ptj-selectfields\" : GCSelectFields\r\n    }\r\n});\r\n</script>\r\n","<template>\r\n    <h1 :class=\"Class.getClass('ptj-repo-header-title')\">{{ store.title }}</h1>\r\n    <p v-if=\"store.count\">Number of rows: {{ store.count }}</p>\r\n    <ptj-nav :actions=\"store.actions\" :class=\"Class.getClass('ptj-repo-header-actions')\"/>\r\n    <ptj-filter-form  v-if=\"store.disable_filter != true\"/>\r\n    <ptj-selectfields v-if=\"store.disable_selectfields != true\" />\r\n</template>\r\n\r\n<script>\r\n\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCFilterForm from \"./ptj-filter-form.vue\"\r\nimport GCPagination from \"./ptj-pagination.vue\"\r\nimport GCSelectFields from \"./ptj-selectfields.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-header',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n    components : {\r\n        \"ptj-nav\" : GCNav,\r\n        \"ptj-filter-form\" : GCFilterForm,\r\n        \"ptj-pagination\" : GCPagination,\r\n        \"ptj-selectfields\" : GCSelectFields\r\n    }\r\n});\r\n</script>\r\n","<template >\r\n    <div :class=\"Class.getClass('ptj-tree-node') + ' ptj-draggable' + this.getRowClass()\" :id=\"branch.primary.toVal()\" draggable=\"false\">\r\n        <div :class=\"Class.getClass('ptj-tree-node-row')\" @click=\"selectRow(branch);\">  \r\n            <div>\r\n                <a v-if=\"ischild\" data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle(branch.primary.toVal(), false)\">\r\n                    <span class=\"material-icons\">subdirectory_arrow_right</span>\r\n                </a>\r\n                <a v-else data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle(branch.primary.toVal(), true)\">\r\n                    <span class=\"material-icons\">keyboard_arrow_right</span>\r\n                </a>\r\n            </div>\r\n            <div v-if=\"sortable\">\r\n                <a data-action=\"more\" class=\"button\" @click=\"prevent.stop\" @mousedown=\"setDraggable\" @mouseup=\"endDraggable\">\r\n                    <span class=\"material-icons\">drag_handle</span>\r\n                </a>\r\n            </div>\r\n            <div>{{ branch.getSummary() }}</div>\r\n            \r\n        </div>\r\n        <ptj-tree-node v-for=\"(obj, index) in children\" :branch=\"obj\" :ischild=\"true\"  :key=\"index\" v-show=\"toggle_state[branch.primary.toVal()]\" :store=\"store\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n\tname : \"ptj-tree-node\",\r\n\tprops : {\r\n\t\tbranch : {\r\n            type : Object,\r\n            required : true\r\n        },\r\n        draggable : Boolean,\r\n        ischild : {\r\n            type : Boolean,\r\n            default : false\r\n        }\r\n\r\n\t},\r\n    data() {\r\n        return {\r\n            toggle_state : {}\r\n        }\r\n    },\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n\tmethods : {\r\n        toggle(index) {\r\n            this.toggle_state[index] = (this.toggle_state[index]) ? false : true;\r\n        },\r\n        setDraggable(e) {\r\n            e.target.closest(\".ptj-draggable\").setAttribute(\"draggable\", true);\r\n        },\r\n        endDraggable(e) {\r\n            e.target.closest(\".ptj-draggable\").setAttribute(\"draggable\", false);\r\n        },\r\n        selectRow(branch) {\r\n            let key = branch.primary.toVal();\r\n            this.store.next(key);\r\n            Ctrl.buildLink();\r\n        },\r\n        getRowClass() {\r\n            let str = [];\r\n            for(let name of this.store.groups) {\r\n                str.push(this.store.model + \"-\" + name.replace(\"_\", \"-\") + \"-\" + this.branch[name]);\r\n            }\r\n            return str.join(\" \");\r\n        }\r\n\t},\r\n    computed : {\r\n        sortable() {\r\n            return true;\r\n        },\r\n        children() {\r\n            let arr = [];\r\n            let children = this.branch.children;\r\n            for(let i in children) {\r\n                const carr = children[i];\r\n                arr.push(...carr);\r\n            }\r\n            return arr;\r\n        }\r\n    },\r\n\tcomponents : {\r\n\t\r\n\t}\r\n});\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.model-tree.branch {\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  margin: 6px 0;\r\n  background-color:#111111;\r\n}\r\n\r\n.tree .ide-block {\r\n\tdisplay : none;\r\n}\r\n\r\n.dragArea {\r\n  min-height: 50px;\r\n  outline: 1px solid #777777;\r\n}\r\n\r\n\r\n</style>","<template >\r\n    <div :class=\"Class.getClass('ptj-tree-node') + ' ptj-draggable' + this.getRowClass()\" :id=\"branch.primary.toVal()\" draggable=\"false\">\r\n        <div :class=\"Class.getClass('ptj-tree-node-row')\" @click=\"selectRow(branch);\">  \r\n            <div>\r\n                <a v-if=\"ischild\" data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle(branch.primary.toVal(), false)\">\r\n                    <span class=\"material-icons\">subdirectory_arrow_right</span>\r\n                </a>\r\n                <a v-else data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle(branch.primary.toVal(), true)\">\r\n                    <span class=\"material-icons\">keyboard_arrow_right</span>\r\n                </a>\r\n            </div>\r\n            <div v-if=\"sortable\">\r\n                <a data-action=\"more\" class=\"button\" @click=\"prevent.stop\" @mousedown=\"setDraggable\" @mouseup=\"endDraggable\">\r\n                    <span class=\"material-icons\">drag_handle</span>\r\n                </a>\r\n            </div>\r\n            <div>{{ branch.getSummary() }}</div>\r\n            \r\n        </div>\r\n        <ptj-tree-node v-for=\"(obj, index) in children\" :branch=\"obj\" :ischild=\"true\"  :key=\"index\" v-show=\"toggle_state[branch.primary.toVal()]\" :store=\"store\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n\tname : \"ptj-tree-node\",\r\n\tprops : {\r\n\t\tbranch : {\r\n            type : Object,\r\n            required : true\r\n        },\r\n        draggable : Boolean,\r\n        ischild : {\r\n            type : Boolean,\r\n            default : false\r\n        }\r\n\r\n\t},\r\n    data() {\r\n        return {\r\n            toggle_state : {}\r\n        }\r\n    },\r\n    setup() {\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n\tmethods : {\r\n        toggle(index) {\r\n            this.toggle_state[index] = (this.toggle_state[index]) ? false : true;\r\n        },\r\n        setDraggable(e) {\r\n            e.target.closest(\".ptj-draggable\").setAttribute(\"draggable\", true);\r\n        },\r\n        endDraggable(e) {\r\n            e.target.closest(\".ptj-draggable\").setAttribute(\"draggable\", false);\r\n        },\r\n        selectRow(branch) {\r\n            let key = branch.primary.toVal();\r\n            this.store.next(key);\r\n            Ctrl.buildLink();\r\n        },\r\n        getRowClass() {\r\n            let str = [];\r\n            for(let name of this.store.groups) {\r\n                str.push(this.store.model + \"-\" + name.replace(\"_\", \"-\") + \"-\" + this.branch[name]);\r\n            }\r\n            return str.join(\" \");\r\n        }\r\n\t},\r\n    computed : {\r\n        sortable() {\r\n            return true;\r\n        },\r\n        children() {\r\n            let arr = [];\r\n            let children = this.branch.children;\r\n            for(let i in children) {\r\n                const carr = children[i];\r\n                arr.push(...carr);\r\n            }\r\n            return arr;\r\n        }\r\n    },\r\n\tcomponents : {\r\n\t\r\n\t}\r\n});\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.model-tree.branch {\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  margin: 6px 0;\r\n  background-color:#111111;\r\n}\r\n\r\n.tree .ide-block {\r\n\tdisplay : none;\r\n}\r\n\r\n.dragArea {\r\n  min-height: 50px;\r\n  outline: 1px solid #777777;\r\n}\r\n\r\n\r\n</style>","class GCDragNDrop {\r\n\r\n    constructor(props = {}) {\r\n        this._handle = props.handle;\r\n        this._drop_target = props.drop_target;\r\n        this._drag_target = props.drag_target;\r\n        this._call_back = props.callback;\r\n        this._x = 0;\r\n        this._y = 0;\r\n        this._offset_x = 0;\r\n        this._offset_y = 0;\r\n        this._judder = (props.judder) ? props.judder : 5;\r\n        this._drag_node;\r\n        this._drop_node;\r\n        this._tree = props.tree;\r\n    }\r\n\r\n    isJudder(x, y) {\r\n        const dx = x - this._x;\r\n        const dy = y - this._y;\r\n      \r\n        if (dx < -5 || dx > 5) return false;\r\n        else if (dy < -5 || dy > 5) return false;\r\n        else return true;\r\n    }\r\n\r\n    getDirection(x, y) {\r\n        const dir_x = (x == this._x) ? 0 : (x > this._x) ? 1 : -1;\r\n        const dir_y = (y == this._y) ? 0 : (y > this._y) ? 1 : -1;\r\n      \r\n        return { x : dir_x, y : dir_y };\r\n    }\r\n\r\n    offset(elem) {\r\n        var rect = elem.getBoundingClientRect();\r\n        var win = elem.ownerDocument.defaultView;\r\n\r\n        return {\r\n            top: rect.top + win.pageYOffset,\r\n            left: rect.left + win.pageXOffset\r\n        };\r\n    }\r\n\r\n    insertAfter() {\r\n        let drag_id = this._drag_node.getAttribute(\"id\");\r\n        let drop_id = this._drop_node.getAttribute(\"id\");\r\n\r\n        let circular = 0;\r\n        let sort = 0;\r\n        if (this._drop_node.nextElementSibling) {\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drop_id) {\r\n                    circular = node.circular;\r\n                    sort = node.sort;\r\n                    break;\r\n                } \r\n            }\r\n\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drag_id) {\r\n                    node.circular = circular;\r\n                    node.sort = sort + 1;\r\n                } else if (node.circular == circular && node.sort > sort) {\r\n                    ++node.sort;\r\n                }\r\n            }\r\n        } else {\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drag_id) {\r\n                    node.circular = circular;\r\n                    node.sort = 0;\r\n                } \r\n            }\r\n        }\r\n    }\r\n\r\n    insertBefore() {\r\n        let drag_id = this._drag_node.getAttribute(\"id\");\r\n        let drop_id = this._drop_node.getAttribute(\"id\");\r\n\r\n        let circular = 0;\r\n        let sort = 0;\r\n        for(let i in this._tree) {\r\n            let node = this._tree[i];\r\n            if (node.id == drop_id) {\r\n                circular = node.circular;\r\n                sort = node.sort;\r\n                ++node.sort;\r\n                break;\r\n            } \r\n        }\r\n\r\n        for(let i in this._tree) {\r\n            let node = this._tree[i];\r\n            if (node.id == drag_id) {\r\n                node.circular = circular;\r\n                node.sort = sort;\r\n            } else if (node.circular == circular && node.sort > sort) {\r\n                ++node.sort;\r\n            }\r\n        }\r\n    }\r\n\r\n    dragStart(ev) {\r\n        const targ = ev.target.closest('[id]');\r\n        this._drag_node = targ;\r\n        const { top, left } = this.offset(targ);\r\n\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n\r\n        this._x = ev.clientX;\r\n        this._y = ev.clientY;\r\n    \r\n        this._offset_x = ev.clientX - left;\r\n        this._offset_y = ev.clientY - top;\r\n    }\r\n\r\n    isDroppable(ev) {\r\n        let cont = ev.target.closest(this._drop_target);\r\n        return (cont) ? true : false;\r\n    }\r\n\r\n    dragEnter(ev) {\r\n        if (!this.isDroppable(ev)) return true;\r\n        ev.preventDefault();\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n\r\n        this._drop_node = ev.target.closest(this._drag_target);\r\n\r\n        if (!this._drop_node || this._drop_node.getAttribute(\"id\") == this._drag_node.getAttribute(\"id\")) {\r\n            return;\r\n        }\r\n\r\n        const dir = this.getDirection(ev.clientX, ev.clientY);\r\n\r\n        if (dir.y == 1) {\r\n            this.insertAfter();\r\n        } else if (dir.y == -1) {\r\n            this.insertBefore();\r\n        }\r\n        this._x = ev.clientX;\r\n        this._y = ev.clientY;\r\n    }\r\n\r\n    dragOver(ev) {\r\n        if (!this.isDroppable(ev)) return true;\r\n        ev.preventDefault();\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n    }\r\n\r\n\r\n    dragEnd() {\r\n        if (this._drag_node) this._drag_node.setAttribute(\"draggable\", false);\r\n        this._drag_node = null;\r\n    }\r\n\r\n    drop(ev) {\r\n        if (!this._drop_node) return true;\r\n        ev.preventDefault();\r\n        if (this._call_back) this._call_back(this._tree);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction initDD(props) {\r\n    let drag = new GCDragNDrop(props);\r\n    let handles = document.querySelectorAll(props.handle);\r\n    handles.forEach(el => el.addAttribute(\"draggable\", true));\r\n\r\n    if (props.handle) {\r\n\r\n        let handles = document.querySelectorAll(props.handle);\r\n\r\n        handles.forEach(el => {\r\n            el.addEventListener(\"mousedown\", e => {\r\n                let cont = e.target.closest(props.drag_target);\r\n                cont.addAttribute(\"draggable\", true);\r\n            });            \r\n        });\r\n    }\r\n\r\n    props.main.addEventListener(\"dragstart\", e => drag.dragStart(e));\r\n    props.main.addEventListener(\"dragenter\", e => drag.dragEnter(e));\r\n    props.main.addEventListener(\"dragover\", e => drag.dragOver(e));\r\n    props.main.addEventListener(\"drop\", e => drag.drop(e));\r\n    props.main.addEventListener(\"dragend\", e => drag.dragEnd(e));\r\n}\r\n\r\nexport default {\r\n    initDD\r\n}","<template >\r\n  <div :class=\"Class.getClass('ptj-tree') + ' ' + store.classes + ' ptj-drop-target'\" ref=\"treeroot\">\r\n    <ptj-tree-node v-for=\"(obj, index) in store.data\" :key=\"index\" :branch=\"obj\"  />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, defineComponent } from 'vue'\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCTreeNode from \"./ptj-tree-node.vue\"\r\nimport GCDragDrop from \"../js/dragndrop.js\"\r\nimport GCFilterForm from \"./ptj-filter-form.vue\"\r\nimport GCSelectFields from \"./ptj-selectfields.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n\tname : \"ptj-tree\",\r\n    setup(props) {\r\n        let base = { store : Ctrl.getStore(), treeroot : ref(null), Class };\r\n        onMounted(() => {\r\n           //if (ctrl.sort) {\r\n             GCDragDrop.initDD({\r\n               handle : '.ptj-drag-handle',\r\n               drag_target : '.ptj-draggable',\r\n               drop_target : '.ptj-drop-target',\r\n               main : base.treeroot.value,\r\n               tree : base.store.data,\r\n               callback : base.store.saveSort\r\n             });\r\n           //}\r\n        });\r\n\r\n       return base;\r\n   },\r\n    components : {\r\n        \"ptj-nav\" : GCNav,\r\n        \"ptj-tree-node\" : GCTreeNode,\r\n        \"ptj-filter-form\" : GCFilterForm,\r\n        \"ptj-selectfields\" : GCSelectFields\r\n    }\r\n});\r\n\r\n\r\n</script>\r\n","<template >\r\n  <div :class=\"Class.getClass('ptj-tree') + ' ' + store.classes + ' ptj-drop-target'\" ref=\"treeroot\">\r\n    <ptj-tree-node v-for=\"(obj, index) in store.data\" :key=\"index\" :branch=\"obj\"  />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, defineComponent } from 'vue'\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCTreeNode from \"./ptj-tree-node.vue\"\r\nimport GCDragDrop from \"../js/dragndrop.js\"\r\nimport GCFilterForm from \"./ptj-filter-form.vue\"\r\nimport GCSelectFields from \"./ptj-selectfields.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n\tname : \"ptj-tree\",\r\n    setup(props) {\r\n        let base = { store : Ctrl.getStore(), treeroot : ref(null), Class };\r\n        onMounted(() => {\r\n           //if (ctrl.sort) {\r\n             GCDragDrop.initDD({\r\n               handle : '.ptj-drag-handle',\r\n               drag_target : '.ptj-draggable',\r\n               drop_target : '.ptj-drop-target',\r\n               main : base.treeroot.value,\r\n               tree : base.store.data,\r\n               callback : base.store.saveSort\r\n             });\r\n           //}\r\n        });\r\n\r\n       return base;\r\n   },\r\n    components : {\r\n        \"ptj-nav\" : GCNav,\r\n        \"ptj-tree-node\" : GCTreeNode,\r\n        \"ptj-filter-form\" : GCFilterForm,\r\n        \"ptj-selectfields\" : GCSelectFields\r\n    }\r\n});\r\n\r\n\r\n</script>\r\n","<template>\r\n    <table :class=\"Class.getClass('ptj-table') + ' ' + store.classes\">\r\n    <thead>\r\n        <tr :class=\"Class.getClass('ptj-table-header')\">\r\n        <th v-for=\"cell in store.fields\" \r\n            v-show=\"cell.summary\" \r\n            :key=\"cell.name\" \r\n            :class=\"Class.getClass('ptj-table-header-cell') + ' ' + cell.name.replace('_', '-')\"\r\n            @click=\"orderBy(cell.name);\"\r\n        >{{ cell.label }}\r\n            <span v-if=\"this.order.name == cell.name && this.order.dir == 'asc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_up</span>\r\n            <span v-if=\"this.order.name == cell.name && this.order.dir == 'desc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_down</span>\r\n        </th>\r\n        <th v-if=\"sortable\">&nbsp;</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"(obj, rindex) in store.data\" :key=\"rindex\" :class=\"Class.getClass('ptj-table-row') + ' ' + this.getRowClass(obj)\" @click=\"next(obj.primary.toVal());\">\r\n        <td v-for=\"(field, name) in obj.cells\" :key=\"name\" v-show=\"field.meta.summary\" :class=\"Class.getClass('ptj-table-cell') + ' ' + name.replace('_', '-')\">\r\n            <ptj-asset v-if=\"field.meta.type=='asset'\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.meta.type=='number'\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.meta.type=='flag'\" :field=\"field\" />\r\n          <ptj-id v-else-if=\"field.meta.type=='id'\" :field=\"field\"  />\r\n          <ptj-time v-else-if=\"field.meta.type=='time'\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.meta.type=='string'\" :field=\"field\"  />\r\n        </td>\r\n        <td :class=\"Class.getClass('ptj-table-cell-sortable')\" v-if=\"sortable\">\r\n            <a data-action=\"more\" class=\"button\" @click.prevent=\"toggle\" draggable=\"true\">\r\n                <span class=\"material-icons\">drag</span>\r\n            </a>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n    <ptj-pagination v-if=\"store.data_template.limit > 0\" />\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport PtjPagination from \"./ptj-pagination.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\n\r\nexport default defineComponent({\r\n    name: 'ptj-table',\r\n    setup() {\r\n        console.log(Ctrl.getStore().fields);\r\n        return { store : Ctrl.getStore(), Class, order : { name : '', dir : ''}}\r\n    },\r\n    methods : {\r\n        next(key) {\r\n            this.store.next(key);\r\n            Ctrl.buildLink();\r\n        },\r\n        orderBy(name) {\r\n            if (this.store.pages > 0) {\r\n                this.order.dir = (!this.order.name != name || this.order.dir  == \"desc\") ? \"asc\" : \"desc\";\r\n                this.order.name = name;\r\n                let sort = [];\r\n                sort[this.order.name] = this.order.dir;\r\n                this.store.data_template.sort = sort;\r\n                this.store.reload();\r\n            } else {\r\n                //custom sort on the table\r\n                if (this.order.name != name || this.order.dir == \"desc\") {\r\n                    this.store.data.sort(function(x, y) {\r\n                        let xval = x.getCell(name).toVal();\r\n                        let yval = y.getCell(name).toVal();\r\n                        if (xval < yval) {\r\n                            return -1;\r\n                        } else if (xval > yval) {\r\n                            return 1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    });\r\n                    this.order.name = name;\r\n                    this.order.dir = \"asc\";\r\n                } else {\r\n                    this.store.data.sort(function(x, y) {\r\n                        let xval = x.getCell(name).toVal();\r\n                        let yval = y.getCell(name).toVal();\r\n                        if (xval < yval) {\r\n                            return 1;\r\n                        } else if (xval > yval) {\r\n                            return -1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    });\r\n                    this.order.name = name;\r\n                    this.order.dir = \"desc\";\r\n                }\r\n            }\r\n        },\r\n        getRowClass(obj) {\r\n            let str = [];\r\n            for(let name of this.store.groups) {\r\n                str.push(this.store.model + \"-\" + name.replace(\"_\", \"-\") + \"-\" + obj[name]);\r\n            }\r\n            return str.join(\" \");\r\n        }\r\n    },\r\n    computed : {\r\n        sortable() {\r\n            return (this.store.sort) ? true : false;\r\n        },\r\n        overlimit() {\r\n            return false;\r\n        },\r\n        rowclass() {\r\n\r\n        }\r\n    },\r\n    components : {\r\n        \"ptj-pagination\" : PtjPagination,\r\n        \"ptj-string\" : PtjString,\r\n      \"ptj-time\" : PtjTime,\r\n      \"ptj-asset\" : PtjAsset,\r\n      \"ptj-id\" : PtjId,\r\n      \"ptj-flag\" : PtjFlag,\r\n      \"ptj-number\" : PtjNumber\r\n    }\r\n\r\n   \r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n</style>","<template>\r\n    <table :class=\"Class.getClass('ptj-table') + ' ' + store.classes\">\r\n    <thead>\r\n        <tr :class=\"Class.getClass('ptj-table-header')\">\r\n        <th v-for=\"cell in store.fields\" \r\n            v-show=\"cell.summary\" \r\n            :key=\"cell.name\" \r\n            :class=\"Class.getClass('ptj-table-header-cell') + ' ' + cell.name.replace('_', '-')\"\r\n            @click=\"orderBy(cell.name);\"\r\n        >{{ cell.label }}\r\n            <span v-if=\"this.order.name == cell.name && this.order.dir == 'asc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_up</span>\r\n            <span v-if=\"this.order.name == cell.name && this.order.dir == 'desc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_down</span>\r\n        </th>\r\n        <th v-if=\"sortable\">&nbsp;</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"(obj, rindex) in store.data\" :key=\"rindex\" :class=\"Class.getClass('ptj-table-row') + ' ' + this.getRowClass(obj)\" @click=\"next(obj.primary.toVal());\">\r\n        <td v-for=\"(field, name) in obj.cells\" :key=\"name\" v-show=\"field.meta.summary\" :class=\"Class.getClass('ptj-table-cell') + ' ' + name.replace('_', '-')\">\r\n            <ptj-asset v-if=\"field.meta.type=='asset'\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.meta.type=='number'\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.meta.type=='flag'\" :field=\"field\" />\r\n          <ptj-id v-else-if=\"field.meta.type=='id'\" :field=\"field\"  />\r\n          <ptj-time v-else-if=\"field.meta.type=='time'\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.meta.type=='string'\" :field=\"field\"  />\r\n        </td>\r\n        <td :class=\"Class.getClass('ptj-table-cell-sortable')\" v-if=\"sortable\">\r\n            <a data-action=\"more\" class=\"button\" @click.prevent=\"toggle\" draggable=\"true\">\r\n                <span class=\"material-icons\">drag</span>\r\n            </a>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n    <ptj-pagination v-if=\"store.data_template.limit > 0\" />\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport PtjPagination from \"./ptj-pagination.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\n\r\nexport default defineComponent({\r\n    name: 'ptj-table',\r\n    setup() {\r\n        console.log(Ctrl.getStore().fields);\r\n        return { store : Ctrl.getStore(), Class, order : { name : '', dir : ''}}\r\n    },\r\n    methods : {\r\n        next(key) {\r\n            this.store.next(key);\r\n            Ctrl.buildLink();\r\n        },\r\n        orderBy(name) {\r\n            if (this.store.pages > 0) {\r\n                this.order.dir = (!this.order.name != name || this.order.dir  == \"desc\") ? \"asc\" : \"desc\";\r\n                this.order.name = name;\r\n                let sort = [];\r\n                sort[this.order.name] = this.order.dir;\r\n                this.store.data_template.sort = sort;\r\n                this.store.reload();\r\n            } else {\r\n                //custom sort on the table\r\n                if (this.order.name != name || this.order.dir == \"desc\") {\r\n                    this.store.data.sort(function(x, y) {\r\n                        let xval = x.getCell(name).toVal();\r\n                        let yval = y.getCell(name).toVal();\r\n                        if (xval < yval) {\r\n                            return -1;\r\n                        } else if (xval > yval) {\r\n                            return 1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    });\r\n                    this.order.name = name;\r\n                    this.order.dir = \"asc\";\r\n                } else {\r\n                    this.store.data.sort(function(x, y) {\r\n                        let xval = x.getCell(name).toVal();\r\n                        let yval = y.getCell(name).toVal();\r\n                        if (xval < yval) {\r\n                            return 1;\r\n                        } else if (xval > yval) {\r\n                            return -1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    });\r\n                    this.order.name = name;\r\n                    this.order.dir = \"desc\";\r\n                }\r\n            }\r\n        },\r\n        getRowClass(obj) {\r\n            let str = [];\r\n            for(let name of this.store.groups) {\r\n                str.push(this.store.model + \"-\" + name.replace(\"_\", \"-\") + \"-\" + obj[name]);\r\n            }\r\n            return str.join(\" \");\r\n        }\r\n    },\r\n    computed : {\r\n        sortable() {\r\n            return (this.store.sort) ? true : false;\r\n        },\r\n        overlimit() {\r\n            return false;\r\n        },\r\n        rowclass() {\r\n\r\n        }\r\n    },\r\n    components : {\r\n        \"ptj-pagination\" : PtjPagination,\r\n        \"ptj-string\" : PtjString,\r\n      \"ptj-time\" : PtjTime,\r\n      \"ptj-asset\" : PtjAsset,\r\n      \"ptj-id\" : PtjId,\r\n      \"ptj-flag\" : PtjFlag,\r\n      \"ptj-number\" : PtjNumber\r\n    }\r\n\r\n   \r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n</style>","<template>\r\n  <div :class=\"Class.getClass('ptj-list') + ' ' + store.classes\">\r\n    <div v-for=\"(combinations, index) in getIndexCombinations\" :key=\"index\">\r\n      <h3><span\r\n              v-for=\"(tag, index) in combinations.tags\"\r\n              :key=\"index\"\r\n              >{{ tag }}&nbsp;</span></h3>\r\n      <ul>\r\n        <li v-for=\"ckey in combinations.data\" :key=\"ckey\">\r\n          <a @click=\"next(store.data[ckey].primary.toVal())\">\r\n            {{ store.data[ckey].getSummary() }}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from \"vue\";\r\nimport Ctrl from \"../js/controller.js\";\r\nimport Class from \"../js/classinjection.js\";\r\n\r\nexport default defineComponent({\r\n  name: \"ptj-list\",\r\n  setup() {\r\n    return { store: Ctrl.getStore(), Class };\r\n  },\r\n  methods: {\r\n    next(key) {\r\n      this.store.next(key);\r\n      Ctrl.buildLink();\r\n    },\r\n    getCombinations(tag, data, combos) {\r\n      const ncombos = [];\r\n      if (combos.length == 0) {\r\n          for(let d in data) {\r\n            ncombos.push({ tags : [ data[d].display ], data : data[d].contains});\r\n          }\r\n      } else {\r\n        for (let c of combos) {\r\n          for(let d in data) {\r\n            let tags = c.tags;\r\n            tags.push(d.display);\r\n            ncombos.push({ tags : tags, data : c.data.filter( value => data[d].contains.includes(value))});\r\n          }\r\n        }\r\n      }\r\n      return ncombos;\r\n    }\r\n  },\r\n  computed: {\r\n    getIndexCombinations() {\r\n      let combos = [];\r\n      for (let group in this.store.indexes) {\r\n          combos = this.getCombinations(group, this.store.indexes[group], combos);\r\n      }\r\n      return combos;\r\n    },\r\n  },\r\n});\r\n</script>\r\n\r\n","<template>\r\n  <div :class=\"Class.getClass('ptj-list') + ' ' + store.classes\">\r\n    <div v-for=\"(combinations, index) in getIndexCombinations\" :key=\"index\">\r\n      <h3><span\r\n              v-for=\"(tag, index) in combinations.tags\"\r\n              :key=\"index\"\r\n              >{{ tag }}&nbsp;</span></h3>\r\n      <ul>\r\n        <li v-for=\"ckey in combinations.data\" :key=\"ckey\">\r\n          <a @click=\"next(store.data[ckey].primary.toVal())\">\r\n            {{ store.data[ckey].getSummary() }}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from \"vue\";\r\nimport Ctrl from \"../js/controller.js\";\r\nimport Class from \"../js/classinjection.js\";\r\n\r\nexport default defineComponent({\r\n  name: \"ptj-list\",\r\n  setup() {\r\n    return { store: Ctrl.getStore(), Class };\r\n  },\r\n  methods: {\r\n    next(key) {\r\n      this.store.next(key);\r\n      Ctrl.buildLink();\r\n    },\r\n    getCombinations(tag, data, combos) {\r\n      const ncombos = [];\r\n      if (combos.length == 0) {\r\n          for(let d in data) {\r\n            ncombos.push({ tags : [ data[d].display ], data : data[d].contains});\r\n          }\r\n      } else {\r\n        for (let c of combos) {\r\n          for(let d in data) {\r\n            let tags = c.tags;\r\n            tags.push(d.display);\r\n            ncombos.push({ tags : tags, data : c.data.filter( value => data[d].contains.includes(value))});\r\n          }\r\n        }\r\n      }\r\n      return ncombos;\r\n    }\r\n  },\r\n  computed: {\r\n    getIndexCombinations() {\r\n      let combos = [];\r\n      for (let group in this.store.indexes) {\r\n          combos = this.getCombinations(group, this.store.indexes[group], combos);\r\n      }\r\n      return combos;\r\n    },\r\n  },\r\n});\r\n</script>\r\n\r\n","<template>\r\n<div :class=\"Class.getClass('ptj-repo') + ' ' + store.classes\">\r\n    <ptj-repo-header  />\r\n    <component :key=\"store.key\" :is=\"store.rawcomponent\" />\r\n</div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport PTJRepoHeader from \"./ptj-repo-header.vue\"\r\nimport PTJTree from \"./ptj-tree.vue\"\r\nimport PTJTable from \"./ptj-table.vue\"\r\nimport PTJList from \"./ptj-list.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-repo',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n    components : {\r\n        \"ptj-repo-header\" : PTJRepoHeader,\r\n        \"ptj-tree\" : PTJTree,\r\n        \"ptj-table\" : PTJTable,\r\n        \"ptj-list\" : PTJList\r\n    }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n\r\n.ptj-data-row:nth-child(odd) {background : #CCC}\r\n\r\n</style>","<template>\r\n<div :class=\"Class.getClass('ptj-repo') + ' ' + store.classes\">\r\n    <ptj-repo-header  />\r\n    <component :key=\"store.key\" :is=\"store.rawcomponent\" />\r\n</div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport PTJRepoHeader from \"./ptj-repo-header.vue\"\r\nimport PTJTree from \"./ptj-tree.vue\"\r\nimport PTJTable from \"./ptj-table.vue\"\r\nimport PTJList from \"./ptj-list.vue\"\r\nimport { defineComponent} from \"vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-repo',\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n    components : {\r\n        \"ptj-repo-header\" : PTJRepoHeader,\r\n        \"ptj-tree\" : PTJTree,\r\n        \"ptj-table\" : PTJTable,\r\n        \"ptj-list\" : PTJList\r\n    }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n\r\n.ptj-data-row:nth-child(odd) {background : #CCC}\r\n\r\n</style>","<template>\r\n    <div :class=\"Class.getClass('ptj-single-item') + ' ' + store.classes\">\r\n        <h1>{{ store.title }}</h1>\r\n        <ptj-nav :actions=\"store.actions\" :class=\"Class.getClass('ptj-single-item-actions')\" />\r\n        <ptj-form-row v-for=\"(field, index) in store.data.cells\" :key=\"index\" :field=\"field\" :class=\"Class.getClass('ptj-single-item-row') + ' ' + field.name\">\r\n          <ptj-asset v-if=\"field.meta.type=='asset'\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.meta.type=='number'\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.meta.type=='flag'\" :field=\"field\" />\r\n          <ptj-id v-else-if=\"field.meta.type=='id'\" :field=\"field\"  />\r\n          <ptj-time v-else-if=\"field.meta.type=='time'\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.meta.type=='string'\" :field=\"field\"  />\r\n        </ptj-form-row>\r\n    </div>\r\n    <ptj-nav :actions=\"store.children\" :class=\"Class.getClass('ptj-single-item-children')\" />\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport PtjNav from \"./ptj-nav.vue\"\r\nimport PtjWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-single-item',\r\n  props : {\r\n      active : {\r\n          type : Boolean,\r\n          default : false\r\n      }\r\n  },\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  computed : {\r\n      editnav() {\r\n          return this.store.actions.put;\r\n      },\r\n      delnav() {\r\n          return this.store.actions.delete;\r\n      },\r\n      title() {\r\n          return this.store.title + \" \" + this.store.summary();\r\n      }\r\n  },\r\n  methods : {\r\n      runDel() {\r\n          this.store.runDelete();\r\n      }\r\n  },\r\n  components : {\r\n    \"ptj-nav\" : PtjNav, \r\n    \"ptj-widget\" : PtjWidget,\r\n    \"ptj-string\" : PtjString,\r\n    \"ptj-time\" : PtjTime,\r\n    \"ptj-asset\" : PtjAsset,\r\n    \"ptj-id\" : PtjId,\r\n    \"ptj-form-row\" : PtjFormRow,\r\n    \"ptj-flag\" : PtjFlag,\r\n    \"ptj-number\" : PtjNumber\r\n  }\r\n});\r\n    \r\n\r\n</script>","<template>\r\n    <div :class=\"Class.getClass('ptj-single-item') + ' ' + store.classes\">\r\n        <h1>{{ store.title }}</h1>\r\n        <ptj-nav :actions=\"store.actions\" :class=\"Class.getClass('ptj-single-item-actions')\" />\r\n        <ptj-form-row v-for=\"(field, index) in store.data.cells\" :key=\"index\" :field=\"field\" :class=\"Class.getClass('ptj-single-item-row') + ' ' + field.name\">\r\n          <ptj-asset v-if=\"field.meta.type=='asset'\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.meta.type=='number'\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.meta.type=='flag'\" :field=\"field\" />\r\n          <ptj-id v-else-if=\"field.meta.type=='id'\" :field=\"field\"  />\r\n          <ptj-time v-else-if=\"field.meta.type=='time'\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.meta.type=='string'\" :field=\"field\"  />\r\n        </ptj-form-row>\r\n    </div>\r\n    <ptj-nav :actions=\"store.children\" :class=\"Class.getClass('ptj-single-item-children')\" />\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport PtjNav from \"./ptj-nav.vue\"\r\nimport PtjWidget from \"./ptj-widget-window.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\n\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-single-item',\r\n  props : {\r\n      active : {\r\n          type : Boolean,\r\n          default : false\r\n      }\r\n  },\r\n  setup() {\r\n      return { store : Ctrl.getStore(), Class }\r\n  },\r\n  computed : {\r\n      editnav() {\r\n          return this.store.actions.put;\r\n      },\r\n      delnav() {\r\n          return this.store.actions.delete;\r\n      },\r\n      title() {\r\n          return this.store.title + \" \" + this.store.summary();\r\n      }\r\n  },\r\n  methods : {\r\n      runDel() {\r\n          this.store.runDelete();\r\n      }\r\n  },\r\n  components : {\r\n    \"ptj-nav\" : PtjNav, \r\n    \"ptj-widget\" : PtjWidget,\r\n    \"ptj-string\" : PtjString,\r\n    \"ptj-time\" : PtjTime,\r\n    \"ptj-asset\" : PtjAsset,\r\n    \"ptj-id\" : PtjId,\r\n    \"ptj-form-row\" : PtjFormRow,\r\n    \"ptj-flag\" : PtjFlag,\r\n    \"ptj-number\" : PtjNumber\r\n  }\r\n});\r\n    \r\n\r\n</script>","<template>\r\n <div :class=\"Class.getClass('ptj-accounthandler')\">\r\n    <h1>{{ store.title }}</h1>\r\n    <ptj-form />\r\n    <ptj-nav :action=\"store.actions\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCForm from \"./ptj-form.vue\"\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"./../js/classinjection.js\"\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-login',\r\n  setup() {\r\n      let store = Ctrl.getStore()\r\n      store.next = () => {\r\n           Ctrl.reloadFromBase();\r\n      }\r\n      return { store : store, Class }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-form\" : GCForm, \"ptj-nav\" : GCNav\r\n    }\r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n <div :class=\"Class.getClass('ptj-accounthandler')\">\r\n    <h1>{{ store.title }}</h1>\r\n    <ptj-form />\r\n    <ptj-nav :action=\"store.actions\" />\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCForm from \"./ptj-form.vue\"\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"./../js/classinjection.js\"\r\n\r\n \r\nexport default defineComponent({\r\n  name: 'ptj-login',\r\n  setup() {\r\n      let store = Ctrl.getStore()\r\n      store.next = () => {\r\n           Ctrl.reloadFromBase();\r\n      }\r\n      return { store : store, Class }\r\n  },\r\n  components : \r\n    {\r\n      \"ptj-form\" : GCForm, \"ptj-nav\" : GCNav\r\n    }\r\n});\r\n</script>\r\n\r\n\r\n","<template>\r\n    <ptj-widget :title=\"title\" :active=\"active\">\r\n        <div :class=\"classes\">\r\n            <a @click=\"next\"><span class=\"material-icons\">view_carousel</span></a>\r\n            <div v-for=\"(field, index) in store.fields\" :key=\"index\" :class=\"rowclass + ' ' + field.name\">\r\n                <span :class=\"labelclass\">{{ field.label }}</span>&nbsp;<span :class=\"rowclass\">{{ field.val }}</span>\r\n            </div>\r\n        </div>\r\n    </ptj-widget>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-card',\r\n  props : {\r\n      store : Object,\r\n      active : {\r\n          type : Boolean,\r\n          default : false\r\n      }\r\n  },\r\n  methods : {\r\n      next() {\r\n          this.store.next();\r\n          Ctrl.buildLink();\r\n      }\r\n  },\r\n  computed : {\r\n      title() {\r\n          return this.store.title;\r\n      },\r\n      classes() {\r\n          return Class.getClass(\"ptj-card\")  + \" \" + this.store.classes;\r\n      },\r\n      rowclass() {\r\n          return Class.getClass(\"ptj-card-row\");\r\n      },\r\n      labelclass() {\r\n          return Class.getClass(\"ptj-card-label\");\r\n      },\r\n      valueclass() {\r\n          return Class.getClass(\"ptj-card-value\");\r\n      }\r\n  },\r\n  components : {\r\n    \"ptj-widget\" : GCWidget\r\n  }\r\n});\r\n    \r\n\r\n</script>","<template>\r\n    <ptj-widget :title=\"title\" :active=\"active\">\r\n        <div :class=\"classes\">\r\n            <a @click=\"next\"><span class=\"material-icons\">view_carousel</span></a>\r\n            <div v-for=\"(field, index) in store.fields\" :key=\"index\" :class=\"rowclass + ' ' + field.name\">\r\n                <span :class=\"labelclass\">{{ field.label }}</span>&nbsp;<span :class=\"rowclass\">{{ field.val }}</span>\r\n            </div>\r\n        </div>\r\n    </ptj-widget>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent  } from 'vue'\r\nimport GCWidget from \"./ptj-widget-window.vue\"\r\nimport Class from \"../js/classinjection.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\n\r\nexport default defineComponent({\r\n  name: 'ptj-card',\r\n  props : {\r\n      store : Object,\r\n      active : {\r\n          type : Boolean,\r\n          default : false\r\n      }\r\n  },\r\n  methods : {\r\n      next() {\r\n          this.store.next();\r\n          Ctrl.buildLink();\r\n      }\r\n  },\r\n  computed : {\r\n      title() {\r\n          return this.store.title;\r\n      },\r\n      classes() {\r\n          return Class.getClass(\"ptj-card\")  + \" \" + this.store.classes;\r\n      },\r\n      rowclass() {\r\n          return Class.getClass(\"ptj-card-row\");\r\n      },\r\n      labelclass() {\r\n          return Class.getClass(\"ptj-card-label\");\r\n      },\r\n      valueclass() {\r\n          return Class.getClass(\"ptj-card-value\");\r\n      }\r\n  },\r\n  components : {\r\n    \"ptj-widget\" : GCWidget\r\n  }\r\n});\r\n    \r\n\r\n</script>","<template>\r\n    <div :class=\"Class.getClass('ptj-tabs')\">\r\n        <div :class=\"Class.getClass('ptj-tabs-tab')\" >\r\n            <component :key=\"store.index\" :is=\"store.component\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport GCForm from \"./ptj-form.vue\"\r\nimport GCRepo from \"./ptj-repo.vue\"\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCSingleItem from \"./ptj-single-item.vue\"\r\nimport GCAccountHandler from \"./ptj-accounthandler.vue\"\r\nimport GCCard from \"./ptj-card.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        index: {\r\n            type : Boolean,\r\n        }\r\n    },\r\n    setup(props) {\r\n        if (props.index) Ctrl.next();\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n    computed : {\r\n        parents() {\r\n            return [];\r\n        }\r\n    },\r\n    components : {\r\n        'ptj-form' : GCForm,\r\n        'ptj-nav' : GCNav,\r\n        'ptj-single-item' : GCSingleItem,\r\n        'ptj-account-handler' : GCAccountHandler,\r\n        'ptj-repo' : GCRepo,\r\n        'ptj-card' : GCCard\r\n    }\r\n\r\n});\r\n</script>","<template>\r\n    <div :class=\"Class.getClass('ptj-tabs')\">\r\n        <div :class=\"Class.getClass('ptj-tabs-tab')\" >\r\n            <component :key=\"store.index\" :is=\"store.component\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport GCForm from \"./ptj-form.vue\"\r\nimport GCRepo from \"./ptj-repo.vue\"\r\nimport GCNav from \"./ptj-nav.vue\"\r\nimport GCSingleItem from \"./ptj-single-item.vue\"\r\nimport GCAccountHandler from \"./ptj-accounthandler.vue\"\r\nimport GCCard from \"./ptj-card.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n    props : {\r\n        index: {\r\n            type : Boolean,\r\n        }\r\n    },\r\n    setup(props) {\r\n        if (props.index) Ctrl.next();\r\n        return { store : Ctrl.getStore(), Class }\r\n    },\r\n    computed : {\r\n        parents() {\r\n            return [];\r\n        }\r\n    },\r\n    components : {\r\n        'ptj-form' : GCForm,\r\n        'ptj-nav' : GCNav,\r\n        'ptj-single-item' : GCSingleItem,\r\n        'ptj-account-handler' : GCAccountHandler,\r\n        'ptj-repo' : GCRepo,\r\n        'ptj-card' : GCCard\r\n    }\r\n\r\n});\r\n</script>","<template>\r\n    <Teleport to=\"#ptj-accountdetails\">\r\n    <a :class=\"Class.getClass('ptj-account-details-logout')\" @click=\"logout\">Logout</a>\r\n    </Teleport>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Client from \"./../js/client.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"./../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { Class }\r\n    },\r\n    methods : {\r\n        logout() {\r\n            Client.post(\"/core-logout\")\r\n            .then(() => {\r\n                Ctrl.reloadFromBase();\r\n            });\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Teleport to=\"#ptj-accountdetails\">\r\n    <a :class=\"Class.getClass('ptj-account-details-logout')\" @click=\"logout\">Logout</a>\r\n    </Teleport>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport Client from \"./../js/client.js\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"./../js/classinjection.js\"\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        return { Class }\r\n    },\r\n    methods : {\r\n        logout() {\r\n            Client.post(\"/core-logout\")\r\n            .then(() => {\r\n                Ctrl.reloadFromBase();\r\n            });\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n  <ptj-account-details v-if=\"isaccount\" />\r\n  <div :class=\"Class.getClass('ptj-root')\" v-for=\"group in groups\" :key=\"group.index\">\r\n    <ptj-tabs  :index=\"true\"  />\r\n </div>\r\n</template>\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCTabs from \"./ptj-tabs.vue\"\r\nimport GCAccountDetails from \"./ptj-account-details.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    name : 'ptj-root',\r\n    setup() {\r\n        return { Class }\r\n    },\r\n    computed : {\r\n        groups() {\r\n            return Ctrl.store.models;\r\n        },\r\n        isaccount() {\r\n            return Ctrl.store.profile == \"public\" ? false : true;\r\n        }\r\n    },\r\n    components : {\r\n        'ptj-tabs' : GCTabs, \"ptj-account-details\" : GCAccountDetails\r\n\r\n    }\r\n});\r\n</script>","<template>\r\n  <ptj-account-details v-if=\"isaccount\" />\r\n  <div :class=\"Class.getClass('ptj-root')\" v-for=\"group in groups\" :key=\"group.index\">\r\n    <ptj-tabs  :index=\"true\"  />\r\n </div>\r\n</template>\r\n<script>\r\n\r\nimport { defineComponent } from 'vue'\r\nimport GCTabs from \"./ptj-tabs.vue\"\r\nimport GCAccountDetails from \"./ptj-account-details.vue\"\r\nimport Ctrl from \"../js/controller.js\"\r\nimport Class from \"../js/classinjection.js\"\r\n\r\n\r\nexport default defineComponent({\r\n    name : 'ptj-root',\r\n    setup() {\r\n        return { Class }\r\n    },\r\n    computed : {\r\n        groups() {\r\n            return Ctrl.store.models;\r\n        },\r\n        isaccount() {\r\n            return Ctrl.store.profile == \"public\" ? false : true;\r\n        }\r\n    },\r\n    components : {\r\n        'ptj-tabs' : GCTabs, \"ptj-account-details\" : GCAccountDetails\r\n\r\n    }\r\n});\r\n</script>","import Ctrl from \"./presstojam/src/js/controller.js\"\r\nimport PTJRoot from \"./presstojam/src/components/ptj-root.vue\"\r\nimport { createApp } from \"vue\"\r\n\r\nfunction runApp(mount) {\r\n    const app = createApp(PTJRoot);\r\n    app.mount(mount);\r\n    return app;\r\n}\r\n\r\nexport default { \r\n    Ctrl, runApp\r\n}\r\n\r\n\r\n"],"names":["main_url","last_status","last_ok","custom_headers","status_handlers","debug","regCustomHeader","name","value","regStatusHandler","status","handler","setURL","url","regDebug","is_debug","run","headers","mode","cache","credentials","fetch","then","response","ok","json","val","omethod","method","Error","catch","err","console","log","setDebug","data","get","this","params","URLSearchParams","graph","i","Array","isArray","append","JSON","stringify","indexOf","toString","getprimary","post","body","put","patch","delete","error_invalid_map","getError","code","Validator","constructor","_min","_max","_has","_has_not","_errors","min","max","has","push","nothas","nhas","validateSize","MIN_VALUE","MAX_VALUE","OK","validate","isNaN","length","match","HAS_NOT","HAS","Field","obj","_name","_type","_is_primary","_is_parent","_valid","_atts","_confirm","_readonly","_placeholder","_conditions","_link","_reference","_error","_label","_store","reactive","summary","options","_default","_validator","_multiple","_encrypted","computed","set","x","validation","opt","key","e","confirm","readonly","placeholder","atts","default","def","asset","_asset","conditions","link","type","toLowerCase","multiple","mult","is_primary","is_parent","reference","ref","error","label","encrypted","isprimary","required","isparent","Errors","validator","isSummary","saveAsset","id","saveFile","Promise","resolve","setReferenceOptions","Client","__data","clean","exp","calcValue","MetaRow","_fields","_primary","_parent","_children","field","fields","addChild","child","children","parent","primary","map","exportFields","state","store","cfields","_states","_limit_fields","contains","exportToStore","getCellByType","cells","DataCell","meta","_meta","display","is_validate_on","showError","validateon","on","toVal","setVal","DataTemplateCell","val1","val2","addParam","cobj","Object","keys","DataTemplate","metarow","_cells","_limit","_page","_sort","_groups","_active","_max_pages","_count","applyMetaRow","initField","_data","limit","sort","page","groups","active","max_pages","pages","count","convertToParams","param","convertDataToParams","convertFromParams","str","parse","hasOwnProperty","convertToAPIParams","__limit","__page","__fields","__sort","DataRow","_references","references","appendPrimary","row","getSummary","cell","getCell","join","serialize","_ctarget","orig","target","to","model","end","param_str","updateIntention","vals","resetIntention","parseInt","convertMaps","omaps","ni","unshift","splice","Model","stage","_map","_stage","_title","_component","_rawcomponent","_actions","_next","_index","_primary_key_name","_parent_key_name","_circular","_siblings","_classes","_settings","hide_actions","_meta_row","_global_meta_row","_data_template","_global_data","_back","injectCustomSettings","settings","init","login","__to","client","__status","title","back","siblings","circular","actions","buildMetaRow","classes","replace","snakeCase","global_fields","loadURL","saveURL","initDataTemplate","load","Math","ceil","mapRepoData","mapData","setReferences","reload","data_template","rLoadObj","_active_children","indexData","indexes","group","ckey","import","file","reject","fr","FileReader","onload","result","onerror","readAsText","blob","submit","request","message","statusText","__key","promises","assets","progress","total","Asset","keyfield","promise","all","_indexes","buildLink","intention","setting","change_intention","ChangeAction","component","rawcomponent","action","submiturl","saveurl","disable_filter","disable_selectfields","index","loadurl","r","n","next","sibling","setPage","action_map","CtrlGroupMap","_model","_state","_key","_to","_param_str","copy","matches","convertToURL","convertFromURL","parts","split","pop","maps","trigger_cb","route_base","createMap","trigger","trig","resetMaps","str_parts","base","URL","window","location","protocol","host","url_str","searchParams","url_obj","pathname","param_obj","setBase","getMaps","cb","runRoute","uri","href","search","onpopstate","event","document","setRoute","history","pushState","hardSetRoute","route","regCallback","callback","softRoute","profile","_models","_seeker","Map","models","Router","setSettings","alert","mapper","initProfile","__profile","assumeRole","role","removeRole","soft","omap","cmap","runLink","runData","reloadFromBase","getStore","classes_dict","regClass","getClass","defineComponent","props","Number","setup","Class","num","floor","style","styleInject","css","insertAt","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","_createElementBlock","class","_ctx","_createElementVNode","String","components","GCError","_renderSlot","_createVNode","editable","Boolean","filter","onBlur","cval","selected","disabled","_mergeProps","_hoisted_2","option","_hoisted_5","methods","isEnum","enums","regEx","RegExp","exps","test","tag","html","_hoisted_3","PtjStringEditable","PtjStringDisplay","PtjStringFilter","_createBlock","onChange","fstate","globalerror","Ctrl","clearErrors","PtjString","PtjTime","PtjAsset","PtjId","PtjProgressBar","PtjFormRow","PtjFlag","PtjNumber","onSubmit","onClick","show","toggleWidget","PtjWidget","slotScope","getActiveClass","GCWidget","GCNav","GCFilterForm","GCPagination","GCSelectFields","branch","draggable","ischild","toggle_state","toggle","setDraggable","closest","setAttribute","endDraggable","selectRow","getRowClass","sortable","arr","carr","stop","onMousedown","onMouseup","GCDragNDrop","_handle","handle","_drop_target","drop_target","_drag_target","drag_target","_call_back","_x","_y","_offset_x","_offset_y","_judder","judder","_drag_node","_drop_node","_tree","tree","isJudder","y","dx","dy","getDirection","offset","elem","rect","getBoundingClientRect","win","ownerDocument","defaultView","top","pageYOffset","left","pageXOffset","insertAfter","drag_id","getAttribute","drop_id","nextElementSibling","node","dragStart","ev","targ","dataTransfer","dropEffect","clientX","clientY","isDroppable","dragEnter","preventDefault","dir","dragOver","dragEnd","drop","initDD","drag","querySelectorAll","forEach","el","addAttribute","addEventListener","main","treeroot","onMounted","GCDragDrop","saveSort","GCTreeNode","order","orderBy","xval","yval","overlimit","rowclass","PtjPagination","rindex","getCombinations","combos","ncombos","d","tags","c","includes","getIndexCombinations","combinations","_Fragment","PTJRepoHeader","PTJTree","PTJTable","PTJList","editnav","delnav","runDel","runDelete","PtjNav","GCForm","labelclass","valueclass","parents","GCSingleItem","GCAccountHandler","GCRepo","GCCard","logout","isaccount","GCTabs","GCAccountDetails","runApp","mount","app","createApp","PTJRoot"],"mappings":"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"}