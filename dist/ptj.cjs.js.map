{"version":3,"file":"ptj.cjs.js","sources":["../presstojam/src/js/client.js","../presstojam/src/js/map.js","../presstojam/src/js/dictionary.js","../presstojam/src/js/route.js","../presstojam/src/components/ptj-button.vue","../presstojam/src/components/ptj-multiple-input.vue","../node_modules/style-inject/dist/style-inject.es.js","../presstojam/src/components/ptj-multiple-select.vue","../presstojam/src/components/ptj-string.vue","../presstojam/src/js/user.js","../presstojam/src/js/dragndrop.js","../presstojam/src/js/error.js","../presstojam/src/js/field.js","../presstojam/src/js/metarow.js","../presstojam/src/js/datacell.js","../presstojam/src/js/datarow.js","../presstojam/src/js/repo.js","../presstojam/src/components/ptj-tree-node.vue","../presstojam/src/components/ptj-tree.vue","../presstojam/src/components/ptj-flag.vue","../presstojam/src/components/ptj-id.vue","../presstojam/src/components/ptj-time.vue","../presstojam/src/components/ptj-table.vue","../presstojam/src/components/ptj-list.vue","../presstojam/src/components/ptj-widget.vue","../presstojam/src/components/ptj-filter-form.vue","../presstojam/src/components/ptj-pagination.vue","../presstojam/src/components/ptj-progress-bar.vue","../presstojam/src/components/ptj-create-form.vue","../presstojam/src/components/ptj-repo.vue","../presstojam/src/components/ptj-delete.vue","../presstojam/src/components/ptj-primary.vue","../presstojam/src/components/ptj-account-handler.vue","../presstojam/src/components/ptj-router.vue","../presstojam/src/js/controller.js","../import.js"],"sourcesContent":["let custom_headers  = {};\r\nlet main_url;\r\n\r\nexport default {\r\n\r\n    initSettings(settings) {\r\n        main_url = settings.url;\r\n\r\n        if (settings.custom_headers) {\r\n            for(let name in settings.custom_headers) {\r\n                custom_headers[name] = settings.custom_headers[name];\r\n            }\r\n        }\r\n    },\r\n\r\n    run(url, headers) {\r\n        \r\n        headers.mode = 'cors';\r\n        headers.cache = 'no-cache';\r\n        headers.credentials = 'include';\r\n        headers['Content-Type'] = 'application/json';\r\n        headers.headers = custom_headers;\r\n\r\n        const _self = this;\r\n\r\n        return fetch(main_url + url, headers)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw response;\r\n            }\r\n        });\r\n    }, \r\n    get(url, data) {\r\n        if (data) {\r\n            const params = new URLSearchParams();\r\n            for(let i in data) {\r\n                if (Array.isArray(data[i]) || (typeof data[i] == 'object' && data[i] !== null)) {\r\n                   params.append(i, JSON.stringify(data[i]));\r\n                } else params.append(i, data[i]);\r\n            }\r\n\r\n            if (url.indexOf(\"?\") == -1) url += \"?\";\r\n            else url += \"&\";\r\n            url += params.toString();\r\n        }\r\n        let headers = {};\r\n        headers.method = 'GET';\r\n        return  this.run(url, headers);\r\n    },\r\n\r\n    getprimary(url, data) {\r\n        return this.get(url, data);\r\n    },\r\n\r\n    post(url, data) {\r\n        //call our fetch response and return\r\n        let headers = {};\r\n        headers.method = 'POST';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    },\r\n\r\n    put(url, data) {\r\n        let headers = {};\r\n        headers.method = 'PUT';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    },\r\n\r\n    patch(url, data) {\r\n        let headers = {};\r\n        headers.method = 'PATCH';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    },\r\n\r\n    delete(url, data) {\r\n        let headers = {};\r\n        headers.method = 'DELETE';\r\n        headers.body = JSON.stringify(data);\r\n        return this.run(url, headers);\r\n    }\r\n}\r\n","class MapModel {\r\n\r\n    constructor() {\r\n        this._route = '';\r\n        this._model = '';\r\n        this._state = '';\r\n        this._key = 0;\r\n        this._to = '';\r\n        this._params = {};\r\n        this._settings = {};\r\n        this._base = \"/\";\r\n        this._default = false;\r\n        this._changes = {};\r\n\r\n        const keys = Object.keys(this);\r\n\r\n        keys.forEach(property => {\r\n          if (property[0] == \"_\") {\r\n            Object.defineProperty(this, property.substring(1), {\r\n                get: function() { \r\n                    return this[property];\r\n                },\r\n                set: function(newValue) {\r\n                    if (newValue != this[property]) {\r\n                        this._changes[property.substring(1)] = this[property];\r\n                        this[property] = newValue;\r\n                    }\r\n                }\r\n            });\r\n          } \r\n        });\r\n\r\n\r\n        this.action_map = {\r\n            'post' : '-create',\r\n            'put' : '-update',\r\n            'delete' : '-delete',\r\n            'login' : '-login',\r\n            'logout' : '-logout',\r\n            'primary' : '-primary',\r\n            'parent' : '-parent',\r\n            'get' : ''\r\n        };\r\n\r\n    }\r\n\r\n    get id() {\r\n        return this.model + \"-\" + this.state + \"-\" + this.to;\r\n    }\r\n\r\n\r\n    hasChange(key) {\r\n        return this._changes.hasOwnProperty(key);\r\n    }\r\n\r\n    reset() {\r\n        this.route = '';\r\n        this.model = '';\r\n        this.state = '';\r\n        this.key = 0;\r\n        this.to = '';\r\n        this.params = {};\r\n        this.settings = {};\r\n        this._changes = {};\r\n    }\r\n\r\n    resetChanges() {\r\n        this._changes = {};\r\n    }\r\n\r\n\r\n    convertToURL() {\r\n        let url = this._base + this.route + \"/\" + this.model + this.action_map[this.state];\r\n        if (this.key) url += \"-\" + this.key;\r\n        if (this.to) url += \"-to-\" + this.to;\r\n\r\n        let param_str = [];\r\n        for(const i in this.params) {\r\n            if (typeof this.params[i] == 'Array' || typeof this.params[i] == 'Object') {\r\n                param_str.push(i + \"=\" + JSON.stringify(this.params[i]));\r\n            } else {\r\n                param_str.push(i + \"=\" + this.params[i]);\r\n            }\r\n        }\r\n\r\n        if (param_str.length > 0) url += \"?\" + param_str.join(\"&\");\r\n\r\n        return url;\r\n    }\r\n    \r\n    initSettings(settings) {\r\n        if (settings) this._base = settings.base;\r\n        this.convertFromURL();\r\n    }\r\n\r\n    convertFromURL() {\r\n        let url_obj = new URL(window.location.href);\r\n        let url = url_obj.pathname.replace(this.base, \"\");\r\n        url = url.replace(/^\\/+|\\/+$/g, '');\r\n\r\n        if (!url) return;\r\n\r\n\r\n        let parts = url.split(\"/\");\r\n\r\n        if (parts.length < 2) {\r\n            throw \"Map can't init as can't convert url of \" + url_obj.pathname;\r\n        }\r\n        this.route = parts[0];\r\n        url = parts[1];\r\n\r\n        const _self = this;\r\n        url_obj.searchParams.forEach(function(value, key) {\r\n            _self.params[key] = (value.indexOf(\",\") > -1) ? value.split(\",\") : value;\r\n        });\r\n\r\n        parts = url.split(\"-to-\");\r\n        if (parts.length > 1) {\r\n            this.to = parts[1];\r\n            url = parts[0];\r\n        }\r\n\r\n       \r\n        parts = url.split(\"-\");\r\n        let key = parts[parts.length - 1];\r\n        if (key == \"first\") {\r\n            this.key = key;\r\n            parts.pop();\r\n        } else if (!isNaN(key)) {\r\n            this.key = key;\r\n            parts.pop();\r\n        }\r\n            \r\n        if (parts.length == 0) {\r\n            throw new Error(\"Can't convert this url string: \" + url);\r\n        }\r\n    \r\n        this.state = \"get\";\r\n        for(let i in this.action_map) {\r\n            if (this.action_map[i] == \"-\" + parts[parts.length - 1]) {\r\n                this.state = i\r\n                parts.pop();\r\n                break;\r\n            }\r\n        }\r\n        this.model = parts.join(\"-\");\r\n    }\r\n\r\n    getAll() {\r\n        return {\r\n            route : this.route,\r\n            model : this.model,\r\n            state : this.state,\r\n            key : this.key,\r\n            to : this.to,\r\n            params : this.params,\r\n            base : this.base,\r\n            default : this.default\r\n        };\r\n    }\r\n\r\n    apply(route) {\r\n        for(let i in route) {\r\n            this[i] = route[i];\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const Map = new MapModel();\r\n\r\n","let dictionary = {};\r\n\r\nexport function setDictionary(dict) {\r\n    dictionary = dict;\r\n}\r\n\r\nexport function getModelDictionary(cat, key, def) {\r\n    if (dictionary[cat] && dictionary[cat][key]) {\r\n        return dictionary[cat][key];\r\n    } else {\r\n        return def;\r\n    }\r\n}\r\n\r\n\r\nexport function getFieldDictionary(field, key, def) {\r\n    if (!dictionary.fields[field]) return def;\r\n    const dfield = dictionary.fields[field];\r\n    if (dfield[key]) return dfield[key];\r\n    else return def;\r\n}","import { reactive } from \"vue\"\r\nimport client from \"./client.js\"\r\nimport { Map } from \"./map.js\"\r\nimport { setDictionary } from \"./dictionary.js\"\r\n\r\nlet model_settings = {};\r\n\r\nwindow.onpopstate = function() {\r\n    Map.convertFromURL();\r\n    runRoute();\r\n}\r\n\r\nexport const RouteStore = reactive({ \r\n    component : '', \r\n    title : '',\r\n    name : '',\r\n    route : { \"children\" : [], parent : null, \"perms\" : []}, \r\n    slug : []\r\n});\r\n\r\nfunction setComponent() {\r\n    if (Map.state == \"get\" || Map.state == \"parent\") {\r\n        RouteStore.component = \"ptj-repo\";\r\n    } else if (Map.state == \"primary\") {\r\n        RouteStore.component = \"ptj-primary\";\r\n    } else if (Map.state == \"login\") {\r\n        RouteStore.component = \"ptj-account-handler\";\r\n    }\r\n}\r\n\r\n\r\nexport function initSettings(settings) {\r\n    model_settings = settings;\r\n}\r\n\r\n\r\nexport function getModelSettings() {\r\n    if (model_settings[Map.model] && model_settings[Map.model][Map.state]) {\r\n        return model_settings[Map.model][Map.state];\r\n    }\r\n    return {};\r\n}\r\n\r\n\r\nexport function loadRoute() {\r\n    RouteStore.component = \"\";\r\n    return client.get(\"/nav/route-points/\" + Map.route + \"/\" + Map.model)\r\n    .then(response => {   \r\n        RouteStore.route.children = response.children;\r\n        RouteStore.route.perms = response.perms;\r\n        RouteStore.route.parent = response.parent;\r\n        RouteStore.title = response.title;\r\n        RouteStore.name = response.name;\r\n        setDictionary(response.dictionary);\r\n        setComponent();\r\n    })\r\n    .then(response => {\r\n\r\n    })\r\n    .catch(e => console.log(e));\r\n}\r\n\r\nexport function loadSlugTrail() {\r\n    RouteStore.slug = [];\r\n    let params = {};\r\n    if (Map.state == \"parent\") params[\"--parentid\"] = Map.key;\r\n    else if (Map.state == \"primary\") params[\"--id\"] = Map.key;\r\n    else return;\r\n\r\n    return client.get(\"/slug/\" + Map.route + \"/\" + Map.model, params)\r\n    .then(response => {\r\n        RouteStore.slug = response;\r\n        for(let i in RouteStore.slug) {\r\n            i=parseInt(i);\r\n            if (i > 0) {\r\n                RouteStore.slug[i].route = {\r\n                    model : RouteStore.slug[i].model,\r\n                    state : 'parent',\r\n                    key : RouteStore.slug[i].id\r\n                }\r\n            } else {\r\n                RouteStore.slug[i].route = {\r\n                    model : RouteStore.slug[i].model,\r\n                    state : 'get',\r\n                    key : 0\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\nexport function refresh() {\r\n    location.href = Map.base;\r\n}\r\n\r\nexport function redirect() {\r\n    addToHistory();\r\n    runRoute();\r\n}\r\n\r\nexport function addToHistory() {\r\n    const url_str = window.location.protocol + \"//\" + window.location.host +  Map.convertToURL();\r\n    const url = new URL(url_str);\r\n    window.history.pushState({'name' : url.pathname}, document.title, url);\r\n}\r\n\r\nexport function runRoute() {\r\n    loadRoute();\r\n    loadSlugTrail();\r\n}\r\n","<template>\r\n  <a class=\"ptj-button\" :key=\"route\" @click=\"run\">\r\n    <slot />\r\n  </a> \r\n</template>\r\n\r\n<script setup>\r\n\r\n\r\nimport { redirect } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\nconst props = defineProps({\r\n    route : Object\r\n});\r\n\r\n\r\nfunction run() {\r\n    for(let i in props.route) {\r\n        Map[i] = props.route[i];\r\n    }\r\n    redirect();\r\n}\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","<template>\r\n    <div class=\"ptj-multiple-select\">\r\n        <div class=\"ptj-multiple-select-display\">\r\n            <div class=\"ptj-multiple-select-values\">\r\n                <div class=\"ptj-multiple-select-val\" v-for=\"val in field.change1\" :key=\"val\">\r\n                    {{ val }}\r\n                    <a class=\"ptj-multiple-select-val-remove\" @click=\"remove(val)\"><span class=\"material-icons\">close</span></a>\r\n                </div>\r\n            </div>\r\n            <input type=\"text\" v-model=\"custom_val\" />\r\n            <a @click=\"selectCustom\">add</a>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script setup>\r\n\r\nimport { ref } from \"vue\"\r\n\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n});\r\n\r\nconst custom_val = ref(\"\");\r\n\r\nfunction remove(key) {\r\n    props.field.change = props.field.change.filter(function(item) {\r\n        return item !== key\r\n    });\r\n}\r\n\r\nfunction selectCustom() {\r\n    props.field.change1 = custom_val.value;\r\n    custom_val.value = \"\";\r\n}\r\n\r\n\r\n</script>\r\n<style scoped>\r\n.ptj-multiple-select-val {\r\n    display : inline-block;\r\n    border : 1px solid green;\r\n    margin-left : 2px;\r\n    margin-right : 2px;\r\n    padding : 2px;\r\n    background-color : green;\r\n}\r\n\r\n\r\n.ptj-multiple-select-val-remove {\r\n    color : red;\r\n}\r\n\r\n\r\n.ptj-multiple-select-display {\r\n    position :relative;\r\n    background-color : #fff;\r\n    border : 1px solid #cdcdcd;\r\n    min-height : 35px;\r\n\r\n}\r\n\r\n</style>","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","<template>\r\n    <div class=\"ptj-multiple-select\">\r\n        <div class=\"ptj-multiple-select-display\">\r\n            <div class=\"ptj-multiple-select-values\">\r\n                <div class=\"ptj-multiple-select-val\" v-for=\"val in field.change\" :key=\"val\">\r\n                    {{ field.getOption(val) }}\r\n                    <a class=\"ptj-multiple-select-val-remove\" @click=\"remove(val)\"><span class=\"material-icons\">close</span></a>\r\n                </div>\r\n            </div>\r\n            <a class=\"ptj-multiple-select-arrow\" @click=\"toggleList\">\r\n            <span class=\"material-icons\">{{ show_list.symbol }}</span>\r\n            </a>\r\n        </div>\r\n        <ul class=\"ptj-multiple-select-options\" v-show=\"show_list.display\" @click=\"select\">\r\n            <li v-for=\"option in field.options\" :key=\"option.key\" :data-key=\"option.key\">{{ option.value }}</li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n<script setup>\r\n\r\nimport { reactive, onMounted } from \"vue\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n});\r\n\r\nonMounted(() => {\r\n    if (props.field.reference) {\r\n        let url = \"/reference/\" + Map.model + \"/\" + props.field.name;\r\n        props.field.setReferenceOptions(url, {\"--parentid\":Map.key});\r\n    }\r\n});\r\n\r\n\r\nconst show_list = reactive({\r\n    display : false,\r\n    symbol : 'keyboard_arrow_down'\r\n});\r\n\r\n\r\nfunction toggleList() {\r\n    if (show_list.display) {\r\n        show_list.display = false;\r\n        show_list.symbol = 'keyboard_arrow_down';\r\n    } else {\r\n        show_list.display = true;\r\n        show_list.symbol = 'keyboard_arrow_up';\r\n    }\r\n}\r\n\r\n\r\nfunction remove(key) {\r\n    props.field.change = props.field.change.filter(function(item) {\r\n        return item !== key\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction select(e) {\r\n    props.field.change1 = e.target.getAttribute(\"data-key\");\r\n    toggleList();\r\n}\r\n</script>\r\n<style scoped>\r\n.ptj-multiple-select-val {\r\n    display : inline-block;\r\n    border : 1px solid green;\r\n    margin-left : 2px;\r\n    margin-right : 2px;\r\n    padding : 2px;\r\n    background-color : green;\r\n}\r\n\r\n\r\n.ptj-multiple-select-val-remove {\r\n    color : red;\r\n}\r\n\r\n.ptj-multiple-select-arrow {\r\n    position :absolute;\r\n    right : 2px;\r\n    top : 3px;\r\n}\r\n\r\n.ptj-multiple-select-display {\r\n    position :relative;\r\n    background-color : #fff;\r\n    border : 1px solid #cdcdcd;\r\n    min-height : 35px;\r\n\r\n}\r\n\r\n.ptj-multiple-select-options li {\r\n    list-style: none;\r\n    cursor: pointer;\r\n    margin-top : 2px;\r\n    border : 1px solid #cdcdcd;\r\n    background-color : #fff;\r\n}\r\n\r\n.ptj-multiple-select-options li:hover {\r\n    background-color : #f9f9fb;\r\n    transition : background-color .2s ease-out,border .2s ease-out;\r\n}\r\n</style>","<template>\r\n   <textarea v-if=\"tag=='textarea' && ctype=='edit'\"\r\n        v-bind=\"atts\" \r\n        :name=\"field.name\" \r\n        v-model=\"field.change\"></textarea>\r\n   <div v-else-if=\"tag=='textarea' && ctype=='view'\">{{ field.val }}</div>\r\n   <ptj-multiple-select v-else-if=\"tag=='select' && ctype == 'filter'\" :field=\"field\" />\r\n  <select v-else-if=\"tag=='select' && ctype=='edit'\" \r\n        v-model=\"field.change\"\r\n        :name=\"field.name\"\r\n        v-bind=\"atts\"\r\n         @blur=\"field.validateon = true\"\r\n        >\r\n        <option value=\"\" selected disabled>Select Option</option>\r\n        <option v-for=\"option in options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <input v-else-if=\"ctype=='edit'\" v-bind=\"atts\"\r\n        :name=\"field.name\"\r\n        v-model=\"field.change\" \r\n        @blur=\"field.validateon = true\" />\r\n   <ptj-multiple-input :field=\"field\" v-else-if=\"ctype=='filter'\"/>\r\n  <span v-else-if=\"ctype=='view' && field.reference\">\r\n    <ptj-button :route=\"{model : field.reference, key : field.val, state:'primary' }\">{{ field.val }}</ptj-button>\r\n  </span>\r\n  <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n<script setup>\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjMultipleInput from \"./ptj-multiple-input.vue\"\r\nimport PtjMultipleSelect from \"./ptj-multiple-select.vue\"\r\n\r\nimport { computed } from \"vue\"\r\nconst props = defineProps({\r\n    field : {\r\n        type : Object,\r\n        required : true\r\n    },\r\n    type : {\r\n        type : String,\r\n        default : 'view'\r\n    }\r\n});\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n\r\nfunction isEnum(contains) {\r\n    if (contains.length == 0) return null;\r\n    let enums=[];\r\n    const regEx = new RegExp(/^[a-zA-Z]+[a-zA-Z0-9._]+$/);\r\n    for(let exp of contains) {\r\n        if (!exp) continue;\r\n        if (regEx.test(exp)) {\r\n            enums.push(exp);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    return enums;\r\n}\r\n\r\nconst tag = computed(() => {\r\nif (isEnum(props.field.contains)) {\r\n    return \"select\";\r\n} else if (props.field.encrypted) {\r\n    return \"input\";\r\n} else if (props.field.html || props.field.max > 300) {\r\n    return \"textarea\";\r\n} else {\r\n    return \"input\";\r\n}\r\n});\r\n\r\nconst options = computed(() => {\r\nlet options = [];\r\nfor(let exp of props.field.contains) {\r\n    options.push({ key : exp, value : exp});\r\n}\r\nreturn options;\r\n});\r\n\r\nconst atts = computed(() => {\r\nlet atts = {};\r\nif (props.field.encrypted) {\r\n    atts.type = \"password\";\r\n}\r\n\r\nif (props.field.atts.readonly) {\r\n    atts.readonly = true;\r\n}\r\n\r\nif (props.field.atts.placeholder) {\r\n    atts.placeholder = field.meta.placeholder;\r\n}\r\n\r\nif (props.field.atts.html) {\r\n    atts[\"data-html\"] = 1;\r\n}\r\nreturn atts;\r\n});\r\n\r\n\r\n</script>\r\n","import { reactive } from \"vue\"\r\nimport { refresh } from \"./route.js\"\r\nimport Client from \"./client.js\"\r\nimport { Map } from \"./map.js\"\r\n\r\nexport const User = reactive({init : false, login : false, user : \"public\" });\r\n\r\nexport const NavStore = reactive({\r\n    cats : {}, \r\n    routes : [], \r\n});\r\n\r\nexport function logout() {\r\n    Client.post(\"/core/logout\")\r\n    .then(() => {\r\n        refresh();\r\n    });\r\n}\r\n\r\nfunction getDefault() {\r\n    for(let cat in NavStore.cats) {\r\n        for(let route of NavStore.cats[cat]) {\r\n            if (route.default) {\r\n                return route;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst user_check = 600000;\r\n\r\nexport function checkLoginStatus() {\r\n    Client.get(\"/core/check-user\")\r\n    .then(response => {\r\n        if (response.is_expired) {\r\n            return Client.put(\"/core/switch-tokens\")\r\n            .then(() => {\r\n                checkLoginStatus();\r\n            });\r\n        }\r\n    }).then(response => {\r\n        if (User.user != \"public\") setTimeout(checkLoginStatus, user_check);\r\n    }).catch(e => {\r\n        User.login = true;\r\n    });\r\n}\r\n\r\nexport function initUser(role = \"\") {\r\n    return Client.get(\"/core/check-user\")\r\n    .then(response => {\r\n        if (response.is_expired) {\r\n            return Client.put(\"/core/switch-tokens\")\r\n            .then(() => {\r\n                return Client.get(\"/core/check-user\");\r\n            });\r\n        } else {\r\n            return response;\r\n        }\r\n    })\r\n    .then(response => {\r\n        User.user = response.user;\r\n        User.role = response.role;\r\n        User.init = true;\r\n\r\n        if (User.role != role) {\r\n            let url = \"/core/change-role\";\r\n            if (role) url += \"/\" + role;\r\n            return Client.post(url)\r\n            .then(response => {\r\n                User.role = role;\r\n            });\r\n        }\r\n    }).then(() => {\r\n        checkLoginStatus();\r\n    }).catch(e => console.log(e));\r\n}\r\n\r\nexport function loadNav() {\r\n    NavStore.cats = {};\r\n    NavStore.routes = [];\r\n    return Client.get(\"/nav/site-map\")\r\n    .then(response => {\r\n        for(let cat in response) {\r\n            for(let route_name in response[cat]) {\r\n                const route = { model : route_name, state : response[cat][route_name].state };\r\n                if (response[cat][route_name].default) route.default = true;\r\n                route.route = route_name;\r\n                NavStore.routes.push(route);\r\n\r\n                if (!NavStore.cats[cat]) NavStore.cats[cat] = [];\r\n                NavStore.cats[cat].push(route);\r\n            }\r\n        }\r\n    })\r\n    .then(() => {\r\n        if (!Map.model) {\r\n            Map.apply(getDefault());\r\n        }\r\n        return true;\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n","class PTJDragNDrop {\r\n\r\n    constructor(props = {}) {\r\n        this._handle = props.handle;\r\n        this._drop_target = props.drop_target;\r\n        this._drag_target = props.drag_target;\r\n        this._call_back = props.callback;\r\n        this._x = 0;\r\n        this._y = 0;\r\n        this._offset_x = 0;\r\n        this._offset_y = 0;\r\n        this._judder = (props.judder) ? props.judder : 5;\r\n        this._drag_node;\r\n        this._drop_node;\r\n        this._tree = props.tree;\r\n    }\r\n\r\n    isJudder(x, y) {\r\n        const dx = x - this._x;\r\n        const dy = y - this._y;\r\n      \r\n        if (dx < -5 || dx > 5) return false;\r\n        else if (dy < -5 || dy > 5) return false;\r\n        else return true;\r\n    }\r\n\r\n    getDirection(x, y) {\r\n        const dir_x = (x == this._x) ? 0 : (x > this._x) ? 1 : -1;\r\n        const dir_y = (y == this._y) ? 0 : (y > this._y) ? 1 : -1;\r\n      \r\n        return { x : dir_x, y : dir_y };\r\n    }\r\n\r\n    offset(elem) {\r\n        var rect = elem.getBoundingClientRect();\r\n        var win = elem.ownerDocument.defaultView;\r\n\r\n        return {\r\n            top: rect.top + win.pageYOffset,\r\n            left: rect.left + win.pageXOffset\r\n        };\r\n    }\r\n\r\n    insertAfter() {\r\n        let drag_id = this._drag_node.getAttribute(\"id\");\r\n        let drop_id = this._drop_node.getAttribute(\"id\");\r\n\r\n        let circular = 0;\r\n        let sort = 0;\r\n        if (this._drop_node.nextElementSibling) {\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drop_id) {\r\n                    circular = node.circular;\r\n                    sort = node.sort;\r\n                    break;\r\n                } \r\n            }\r\n\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drag_id) {\r\n                    node.circular = circular;\r\n                    node.sort = sort + 1;\r\n                } else if (node.circular == circular && node.sort > sort) {\r\n                    ++node.sort;\r\n                }\r\n            }\r\n        } else {\r\n            for(let i in this._tree) {\r\n                let node = this._tree[i];\r\n                if (node.id == drag_id) {\r\n                    node.circular = circular;\r\n                    node.sort = 0;\r\n                } \r\n            }\r\n        }\r\n    }\r\n\r\n    insertBefore() {\r\n        let drag_id = this._drag_node.getAttribute(\"id\");\r\n        let drop_id = this._drop_node.getAttribute(\"id\");\r\n\r\n        let circular = 0;\r\n        let sort = 0;\r\n        for(let i in this._tree) {\r\n            let node = this._tree[i];\r\n            if (node.id == drop_id) {\r\n                circular = node.circular;\r\n                sort = node.sort;\r\n                ++node.sort;\r\n                break;\r\n            } \r\n        }\r\n\r\n        for(let i in this._tree) {\r\n            let node = this._tree[i];\r\n            if (node.id == drag_id) {\r\n                node.circular = circular;\r\n                node.sort = sort;\r\n            } else if (node.circular == circular && node.sort > sort) {\r\n                ++node.sort;\r\n            }\r\n        }\r\n    }\r\n\r\n    dragStart(ev) {\r\n        const targ = ev.target.closest('[id]');\r\n        this._drag_node = targ;\r\n        const { top, left } = this.offset(targ);\r\n\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n\r\n        this._x = ev.clientX;\r\n        this._y = ev.clientY;\r\n    \r\n        this._offset_x = ev.clientX - left;\r\n        this._offset_y = ev.clientY - top;\r\n    }\r\n\r\n    isDroppable(ev) {\r\n        let cont = ev.target.closest(this._drop_target);\r\n        return (cont) ? true : false;\r\n    }\r\n\r\n    dragEnter(ev) {\r\n        if (!this.isDroppable(ev)) return true;\r\n        ev.preventDefault();\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n\r\n        this._drop_node = ev.target.closest(this._drag_target);\r\n\r\n        if (!this._drop_node || this._drop_node.getAttribute(\"id\") == this._drag_node.getAttribute(\"id\")) {\r\n            return;\r\n        }\r\n\r\n        const dir = this.getDirection(ev.clientX, ev.clientY);\r\n\r\n        if (dir.y == 1) {\r\n            this.insertAfter();\r\n        } else if (dir.y == -1) {\r\n            this.insertBefore();\r\n        }\r\n        this._x = ev.clientX;\r\n        this._y = ev.clientY;\r\n    }\r\n\r\n    dragOver(ev) {\r\n        if (!this.isDroppable(ev)) return true;\r\n        ev.preventDefault();\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n    }\r\n\r\n\r\n    dragEnd() {\r\n        if (this._drag_node) this._drag_node.setAttribute(\"draggable\", false);\r\n        this._drag_node = null;\r\n    }\r\n\r\n    drop(ev) {\r\n        if (!this._drop_node) return true;\r\n        ev.preventDefault();\r\n        if (this._call_back) this._call_back(this._tree);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction initDD(props) {\r\n    let drag = new PTJDragNDrop(props);\r\n    let handles = document.querySelectorAll(props.handle);\r\n    handles.forEach(el => el.addAttribute(\"draggable\", true));\r\n\r\n    if (props.handle) {\r\n\r\n        let handles = document.querySelectorAll(props.handle);\r\n\r\n        handles.forEach(el => {\r\n            el.addEventListener(\"mousedown\", e => {\r\n                let cont = e.target.closest(props.drag_target);\r\n                cont.addAttribute(\"draggable\", true);\r\n            });            \r\n        });\r\n    }\r\n\r\n    props.main.addEventListener(\"dragstart\", e => drag.dragStart(e));\r\n    props.main.addEventListener(\"dragenter\", e => drag.dragEnter(e));\r\n    props.main.addEventListener(\"dragover\", e => drag.dragOver(e));\r\n    props.main.addEventListener(\"drop\", e => drag.drop(e));\r\n    props.main.addEventListener(\"dragend\", e => drag.dragEnd(e));\r\n}\r\n\r\nexport default {\r\n    initDD\r\n}","const error_invalid_map = {\r\n            1 : \"too small\",\r\n            2 : \"too large\",\r\n            3 : \"contains incorrect characters\",\r\n            4 : \"doesn't contain required characters\",\r\n            5 : \"not unique\"\r\n}\r\n\r\nexport function getError(code) {\r\n    return error_invalid_map[code];\r\n}\r\n\r\nexport const Errors = {\r\n    OK : 0,\r\n    MIN_VALUE : 1,\r\n    MAX_VALUE : 2,\r\n    HAS : 3,\r\n    HAS_NOT : 4\r\n}\r\n","\r\nimport { Errors } from \"./error.js\"\r\nimport { reactive, computed } from \"vue\"\r\nimport Client from \"./client.js\"\r\n\r\n\r\nexport class Field {\r\n\r\n    constructor(name, obj = null) {\r\n        this._name = name;\r\n        this._type = \"\";\r\n        this._atts={}\r\n        this._confirm = false;\r\n        this._reference = \"\";\r\n        this._label = \"\";\r\n        this._store = reactive({ summary : 0, options : []});\r\n        this._default_val = null;\r\n        this._immutable = false;\r\n        this._encrypted = false;\r\n        this._min = null;\r\n        this._max = null;\r\n        this._contains = [];\r\n        this._notcontains = [];\r\n        this._recursive = false;\r\n        this._error = {\r\n            'OK' : 0,\r\n            'MIN_VALUE' : 1,\r\n            'MAX_VALUE' : 2,\r\n            'HAS' : 3,\r\n            'HAS_NOT' : 4\r\n        }\r\n\r\n        const keys = Object.keys(this);\r\n       \r\n        keys.forEach(property => {\r\n          if (property != \"_store\" && property[0] == \"_\") {\r\n            Object.defineProperty(this, property.substring(1), {\r\n                get: function() { \r\n                   return this[property];\r\n                },\r\n                set: function(newValue) {\r\n                    if (property == \"_type\") this._type = newValue.toLowerCase();\r\n                    else this[property] = newValue;\r\n                }\r\n            })\r\n          }\r\n        });\r\n      \r\n      \r\n        this.summary = computed({\r\n            get : () => {\r\n                return this._store.summary;\r\n            },\r\n            set : (val) => {\r\n                this._store.summary = (val) ? 1 : 0;\r\n            }\r\n        })\r\n\r\n        this.options = computed({\r\n            get : () => {\r\n                return this._store.options;\r\n            },\r\n            set : (options) => {\r\n                this._store.options = options;\r\n            }\r\n        });\r\n\r\n       \r\n        if (obj) {\r\n            for (let x in obj) {\r\n                if (x == \"summary\") this.summary = (obj[x]) ? 1 : 0;\r\n                else if (x == \"validation\") continue;\r\n                else if (x == \"type\") this.type = obj[x].toLowerCase();\r\n                else this[\"_\" + x] = obj[x];\r\n            }\r\n\r\n            this._min = obj.validation.min;\r\n            this._max = obj.validation.max;\r\n            if (obj.validation.contains) this._contains = obj.validation.contains.split(\"|\");\r\n            if (obj.validation.notcontains) this._notcontains = obj.validation.notcontains.split(\"|\");\r\n        }\r\n    }\r\n\r\n\r\n    getOption(key) {\r\n        for(let opt of this._store.options) {\r\n            if (opt.key == key) return opt.value;\r\n        }\r\n    }\r\n\r\n    setReferenceOptions(url, params) {\r\n        this._store.options = [];\r\n        return Client.get(url, params)\r\n        .then(response => {\r\n            for (let i in response) {\r\n                let key = response[i][\"--id\"];\r\n                let vals = [];\r\n                for(let x  in response[i]) {\r\n                    if (x != \"--id\") {\r\n                        vals.push(response[i][x]);\r\n                    }\r\n                }\r\n                this._store.options.push({ key: key, value: vals.join(\" \", vals) });\r\n            }\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    clean(val) {\r\n        if (this._type == \"checkbox\") return (val) ? 1 : 0;\r\n        else return val;\r\n    }\r\n\r\n\r\n    calcValue(value) {\r\n        if (!value) return \"\";\r\n        else return value;\r\n    }\r\n\r\n\r\n    validateSize(val) {\r\n        if (val < this._min) return Errors.MIN_VALUE;\r\n        else if (val > this._max) return Errors.MAX_VALUE;\r\n        else return Errors.OK;\r\n    }\r\n\r\n\r\n    validate(val) {\r\n        if (val === null) return;\r\n        let err;\r\n        if (isNaN(val)) {\r\n            const length = (val) ? val.length : 0;\r\n            err = this.validateSize(length);\r\n        } else {\r\n            err = this.validateSize(val);\r\n        }\r\n        if (err != Errors.OK) return err;\r\n\r\n        for(let nhas of this._notcontains) {\r\n            if (val.match(nhas)) return Errors.HAS_NOT;\r\n        }\r\n\r\n        if (this._contains.length == 0) return Errors.OK;\r\n        \r\n        for(let has of this._contains) {\r\n            if (val.match(has)) return Errors.OK;\r\n        }\r\n        return Errors.HAS;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Field } from \"./field.js\"\r\nimport { Asset } from \"./asset.js\"\r\nimport { reactive } from \"vue\"\r\n\r\nexport class MetaRow {\r\n\r\n    constructor() {\r\n        this._cells = {};\r\n        this._children = {};\r\n        this._states = {};\r\n        this._active = 0;\r\n        this._init = false;\r\n        this._store = reactive({index : null});\r\n      \r\n        const keys = Object.keys(this);\r\n\r\n        keys.forEach(property => {\r\n          if (property[0] == \"_\") {\r\n            Object.defineProperty(this, property.substring(1), {\r\n                get: function() { \r\n                    return this[property];\r\n                },\r\n                set: function(newValue) {\r\n                    this[property] = newValue;\r\n                }\r\n            });\r\n          } \r\n        });\r\n    }\r\n\r\n\r\n    addChild(name, child) {\r\n        this._children[name] = child;\r\n    }\r\n\r\n    addState(name, action) {\r\n        this._actions[name] = action;\r\n    }\r\n\r\n\r\n    resetSummary(arr) {\r\n\r\n        for(let i in this._cells) {\r\n            this._cells[i].summary = false;\r\n        }\r\n        \r\n        for(let i in arr) {\r\n            if (this._cells[arr[i]]) {\r\n                this._cells[arr[i]].summary = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    mapField(field, obj) {\r\n        this._cells[field] = new Field(field, obj);\r\n        if (this._cells[field].recursive) this._store.index = field;\r\n    }\r\n\r\n    map(fields, limited_fields = []) {\r\n        if (limited_fields.length > 0) {\r\n            for(let field of limited_fields) {\r\n                this.mapField(field, fields[field]);\r\n            }\r\n        } else {\r\n            for (let i in fields) {\r\n                this.mapField(i, fields[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    getCellByType(type) {\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].type == type) cells[i] = this._cells[i];\r\n        }\r\n        return cells;\r\n    }\r\n\r\n}","import { reactive, computed } from \"vue\"\r\nimport { getError } from \"./error.js\"\r\n\r\nexport class DataCell {\r\n\r\n    constructor(meta) {\r\n        this._meta = meta;\r\n        this._store = reactive({ value: null, change: null, display: null, error: 0, is_validate_on: false });\r\n\r\n\r\n        const meta_keys = Object.getOwnPropertyNames(this._meta);\r\n        const keys = Object.keys(this);\r\n\r\n        meta_keys.forEach(property => {\r\n            if (property[0] != \"_\" && !keys.includes(property)) {\r\n                Object.defineProperty(this, property, {\r\n                    get: function () {\r\n                        return this._meta[property];\r\n                    },\r\n                    set: function (newValue) {\r\n                        this._meta[property] = newValue;\r\n                    }\r\n                })\r\n            }\r\n        });\r\n\r\n\r\n        this.error = computed({\r\n            get: () => { getError(this._store.error); },\r\n            set: val => { this._store.error = val }\r\n        });\r\n\r\n        this.showError = computed(() => {\r\n            return this._store.is_validate_on && this._store.error ? true : false;\r\n        });\r\n\r\n        if (this._meta.default_val) this._store.value = this._meta.default_val;\r\n        else if (this._meta.type == \"select\") this._store.value = 0;\r\n\r\n        this.val = computed({\r\n            get: () => {\r\n                return this._store.value;\r\n            },\r\n            set: (val) => {\r\n                this._store.value = this._meta.clean(val);\r\n                this._store.error = this._meta.validate(val);\r\n            }\r\n        });\r\n\r\n        this.change = computed({\r\n            get: () => {\r\n                if (this._store.change == null) return this._store.value;\r\n                else return this._store.change;\r\n            },\r\n            set: (val) => {\r\n                this._store.change = this._meta.clean(val);\r\n                this._store.error = this._meta.validate(val);\r\n            }\r\n        });\r\n\r\n        this.addParam = obj => {\r\n            if (this._store.value!== null) {\r\n                obj[this.name] = this._store.value;\r\n            }\r\n        }\r\n\r\n        if (this.type == \"time\") {\r\n\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.min;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null };\r\n                    this._store.change.min = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.change2 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.max;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null };\r\n                    this._store.change.max = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value!= null) {\r\n                    obj[this.name] = this._store.value;\r\n                }\r\n            }\r\n\r\n        } else if (this.type == \"flag\") {\r\n\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (this._store.change == null) return 0;\r\n                    else if (!this._store.change) return 2;\r\n                    else return this._store.change;\r\n                },\r\n                set: (val) => {\r\n                    if (val == 0) {\r\n                        this._store.change = null;\r\n                        return;\r\n                    }\r\n                    if (val == 2) val = 0;\r\n                    this._store.change = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value!= null) {\r\n                    obj[this.name] = this._store.value;\r\n                }\r\n            }\r\n\r\n        } else if (this.type == \"id\") {\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    let val = (this._store.change == null) ? [] : this._store.change;\r\n                    return val;\r\n                },\r\n                set: (val) => {\r\n                    if (this._store.change == null) this._store.change = [];\r\n                    if (this._store.change.includes(val)) return;\r\n                    this._store.change.push(this._meta.clean(val));\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value!= null) {\r\n                    obj[this.name] = this._store.value;\r\n                }\r\n            }\r\n\r\n            \r\n        } else if (this.type == \"number\") {\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.min;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null }\r\n                    this._store.change.min = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.change2 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (!this._store.change) return \"\";\r\n                    return this._store.change.max;\r\n                },\r\n                set: (val) => {\r\n                    if (!this._store.change) this._store.change = { min: null, max: null }\r\n                    this._store.change.max = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value!= null) {\r\n                    obj[this.name] = this._store.value;\r\n                }\r\n            }\r\n\r\n        } else if (this.type == \"string\") {\r\n\r\n            this.change = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) return \"\";\r\n                    else return this._store.change;\r\n                },\r\n                set: (val) => {\r\n                    this._store.change = this._meta.clean(val);\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.change1 = computed({\r\n                get: () => {\r\n                    if (this._store.change == null) this._store.change = this._store.value;\r\n                    if (this._store.change == null) return [];\r\n                    else return this._store.change;\r\n                },\r\n                set: (val) => {\r\n                    if (this._store.change == null) this._store.change = [];\r\n                    this._store.change.push(this._meta.clean(val));\r\n                    this._store.error = this._meta.validate(val);\r\n                }\r\n            });\r\n\r\n            this.addAPIParam = obj => {\r\n                if (this._store.value!= null) {\r\n                    obj[this.name] = [];\r\n                    for(let i in this._store.value) {\r\n                        obj[this.name].push(\"%\" + this._store.value[i] + \"%\");\r\n                    }\r\n                }\r\n            }\r\n\r\n        } \r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n\r\n    get meta() {\r\n        return this._meta;\r\n    }\r\n\r\n    set validateon(on) {\r\n        this._store.is_validate_on = on;\r\n    }\r\n\r\n    set display(display) {\r\n        this._store.display = display;\r\n    }\r\n\r\n    get display() {\r\n        if (this._store.display) return this._store.display;\r\n        else return this._store.value;\r\n    }\r\n\r\n    get store() {\r\n        return this._store;\r\n    }\r\n\r\n    toString() {\r\n        return this._store.display;\r\n    }\r\n\r\n    isSummary() {\r\n        return this._meta.summary;\r\n    }\r\n\r\n    setReferenceOptions(url, params) {\r\n        this._meta.setReferenceOptions(url, params);\r\n    }\r\n\r\n    reset() {\r\n        this._store.change = null;\r\n    }\r\n\r\n    getOption(key) {\r\n        if (this._meta.type == 'string') return key;\r\n        else return this._meta.getOption(key);\r\n    }\r\n}\r\n","import { DataCell } from \"./datacell.js\"\r\nimport { reactive, computed, ref } from \"vue\"\r\n\r\n\r\nexport class DataRow {\r\n\r\n    constructor(metarow) {\r\n        this._metarow = metarow;\r\n        this._cells = reactive({});\r\n        this._children = {};\r\n        this._ids = reactive({});\r\n        \r\n        \r\n\r\n\r\n        if (metarow) {\r\n            this.applyMetaRow(metarow);\r\n        }\r\n\r\n        this.cells = computed(() => {\r\n            return this._cells;\r\n        });\r\n        \r\n    }\r\n\r\n    \r\n\r\n    set children(children) {\r\n        this._children = children;\r\n    }\r\n\r\n    get children() {\r\n        return this._children;\r\n    }\r\n\r\n    get primary() {\r\n        return this._ids[\"--id\"];\r\n    }\r\n\r\n    get parent() {\r\n        return this._ids[\"--parentid\"];\r\n    }\r\n\r\n\r\n    clone() {\r\n        const data = new DataRow(this._metarow);\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            cells[i].val = this._cells[i].val;\r\n        }\r\n    \r\n        let children = {};\r\n        for(let i in data.children) {\r\n            children[i] = data.children[i].clone();\r\n        }\r\n        data.children = children;\r\n        return data;\r\n    }\r\n\r\n    \r\n    applyMetaRow(metarow) {\r\n        for(const i in metarow.cells) {\r\n            const field = metarow.cells[i];\r\n            this._cells[field.name] = new DataCell(field);\r\n        }\r\n\r\n        for(const i in metarow.children) {\r\n            this._children[i] = metarow.children[i];\r\n        }\r\n    }\r\n\r\n\r\n    addChild(name, child) {\r\n        if (!this._children[name]) {\r\n            this._children[name] = [];\r\n        }\r\n        this._children[name].push(child);\r\n    }\r\n\r\n    set row(row) {\r\n        if (!row) return;\r\n\r\n        if (row[\"--id\"]) this._ids[\"--id\"] = row[\"--id\"];\r\n        if (row[\"--parentid\"]) this._ids[\"--parentid\"] = row[\"--parentid\"];\r\n\r\n        for(let field in this._cells) {\r\n            if (row.hasOwnProperty(field)) this._cells[field].val = row[field];\r\n        }\r\n\r\n        for(let child in this._children) {\r\n            this._children[child].row = row[child];\r\n        }\r\n    }\r\n\r\n\r\n    getSummary() {\r\n        let str = [];\r\n        for(let i in this._cells) {\r\n            const cell = this._cells[i];\r\n            if (cell.isSummary()) {\r\n                const display = cell.display;\r\n                str.push(display);\r\n            }\r\n        }\r\n        return str.join(\" \");\r\n    }\r\n\r\n    toString() {\r\n        let str = [];\r\n        for(let i in this._cells) {\r\n            str.push(this._cells[i].display);\r\n        }   \r\n        return str.join(\" \");\r\n    }\r\n\r\n\r\n    serialize(changes_only = false) {\r\n        let data = {};\r\n        for(let i in this._cells) {\r\n            if (changes_only) {\r\n                if (this._cells[i].change != this._cells[i].val) {\r\n                    data[i] = this._cells[i].change;\r\n                }\r\n            } else {\r\n                if (this._cells[i].change != null) data[i] = this._cells[i].change;\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n\r\n    getCellByType(type) {\r\n        let cells = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].type == type) cells[i] = this._cells[i];\r\n        }\r\n        return cells;\r\n    }\r\n\r\n    clearErrors() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].error = 0;\r\n        }\r\n    }\r\n\r\n\r\n    reset() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].error = 0;\r\n            this._cells[i].change = null;\r\n        }\r\n    }\r\n\r\n    setErrors(err) {\r\n        for(let i in err) {\r\n            if (i.indexOf(\"__\") === 0) continue;\r\n            if (this._cells[i]) {\r\n                this._cells[i].error = err[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    convertToParams() {\r\n        let obj = {};\r\n        for(let i in this._cells) {\r\n            this._cells[i].addParam(obj);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    convertToParams() {\r\n        let obj = {};\r\n        for(let i in this._cells) {\r\n            if (this._cells[i].type == \"asset\") continue;\r\n            this._cells[i].addAPIParam(obj);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    applyChangeData() {\r\n        for(let i in this._cells) {\r\n            this._cells[i].val = this._cells[i].change;\r\n        }\r\n    }\r\n\r\n}","import { MetaRow } from \"./metarow.js\"\r\nimport { DataRow } from \"./datarow.js\"\r\nimport { Map } from \"./map.js\"\r\nimport { reactive } from \"vue\"\r\nimport client from \"./client.js\"\r\nimport { getModelSettings } from \"./route.js\" \r\n\r\n\r\nexport const RepoStore = reactive({meta : new MetaRow, data : [], indexes : {}, search : new DataRow() });\r\n\r\nexport function applySettings(settings) {\r\n    meta_settings = settings;\r\n}\r\n\r\nfunction indexData() {\r\n    RepoStore.indexes = {};\r\n    \r\n    for(const key in RepoStore.data) {\r\n        const row = RepoStore.data[key];\r\n        let ckey = row.cells[RepoStore.meta.store.index].val;\r\n        if (!RepoStore.indexes[ckey]) RepoStore.indexes[ckey] = [];\r\n        RepoStore.indexes[ckey].push(key);\r\n    }\r\n}\r\n\r\n\r\nfunction mapRepoData(response) {\r\n    RepoStore.data = [];\r\n    for (const i in response) {\r\n        let obj= new DataRow(RepoStore.meta);\r\n        obj.row = response[i];\r\n        RepoStore.data.push(obj);\r\n    }\r\n}\r\n\r\n\r\nfunction buildParams(meta_settings) {\r\n    let params = {};\r\n    if (!params) params = {};\r\n    if (Map.to) params.__to = Map.to;\r\n    if (meta_settings.to) params.__to = meta_settings.to;\r\n    if (Map.key) params[\"--parentid\"] = Map.key;\r\n    if (meta_settings.limit) params.__limit = meta_settings.limit;\r\n    if (meta_settings.fields) params.__fields = meta_settings.fields;\r\n    if (meta_settings.group) params.group = meta_settings.group;\r\n    if (Map.params._page) params.__limit = (Map.params._page * params.__limit) + \",\" + params.__limit;\r\n    return params;\r\n}\r\n\r\n\r\nexport const loadRepo = async() => {\r\n    let meta_settings = getModelSettings();\r\n    \r\n    RepoStore.meta = new MetaRow();\r\n    RepoStore.data = [];\r\n    RepoStore.indexes = {};\r\n    RepoStore.search = new DataRow();\r\n    RepoStore.component = \"\";\r\n    RepoStore.max_pages = 0;\r\n    let params = buildParams(meta_settings);\r\n    let url = \"/\" + Map.route + \"/\" + Map.model;\r\n    if (Map.state == \"parent\") url += \"/parent\";\r\n    return client.get(\"/route\" +url, params)\r\n    .then(response => {\r\n        RepoStore.meta.map(response.fields, meta_settings.fields);\r\n        \r\n        RepoStore.search.applyMetaRow(RepoStore.meta);\r\n        RepoStore.search.row = Map.params;\r\n        RepoStore.meta.init = true;\r\n\r\n        if (meta_settings.component) RepoStore.component = meta_settings.component;\r\n        else if (!RepoStore.meta.cells) RepoStore.component = \"\";\r\n        else RepoStore.component = (RepoStore.meta.store.index || RepoStore.meta.children.length > 0) ? \"tree\" : \"table\";\r\n    }).then(() => {\r\n        params = { ...params, ...RepoStore.search.convertToParams()};\r\n        if (meta_settings.limit > 0) {\r\n            return client.get(\"/count/\" + Map.route + \"/\" + Map.model, params)\r\n            .then(response => {\r\n                RepoStore.max_pages = Math.ceil(response.count / meta_settings.limit);\r\n                console.log(\"Max pages is\", RepoStore.max_pages);\r\n            })\r\n            .then(() => {\r\n                return client.get(\"/data\" + url, params);\r\n            })\r\n            .then(response => {\r\n                mapRepoData(response);\r\n                if (RepoStore.meta.store.index) indexData();\r\n                return response;\r\n            });\r\n        } else {\r\n            return client.get(\"/data\" + url, params)\r\n            .then(response => {\r\n                mapRepoData(response);\r\n                if (RepoStore.meta.store.index) indexData();\r\n                return response;\r\n            });\r\n        }\r\n    })\r\n    .catch(e => console.log(e));\r\n}\r\n","<template >\r\n    <div class=\"ptj-tree-node ptj-draggable\" :id=\"primary\" draggable=\"false\">\r\n        <div class=\"ptj-tree-node-row\">  \r\n            <div>\r\n                <a v-if=\"ischild\" data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle()\">\r\n                    <span class=\"material-icons\">subdirectory_arrow_right</span>\r\n                </a>\r\n                <a v-else data-action=\"more\" class=\"button\" @click.prevent.stop=\"toggle()\">\r\n                    <span class=\"material-icons\">keyboard_arrow_right</span>\r\n                </a>\r\n            </div>\r\n            <div v-if=\"RepoStore.meta.sortable\">\r\n                <a data-action=\"more\" class=\"button\" @click=\"prevent.stop\" @mousedown=\"setDraggable\" @mouseup=\"endDraggable\">\r\n                    <span class=\"material-icons\">drag_handle</span>\r\n                </a>\r\n            </div>\r\n            <div>{{ summary }}</div>\r\n            <ptj-button :route=\"{state:'primary', key:primary }\"><span class=\"material-icons\">arrow_forward_ios</span></ptj-button>\r\n        </div>\r\n        <ptj-tree-node v-for=\"(key, index) in children\" :row=\"key\" :ischild=\"true\"  :key=\"index\" v-show=\"store.toggle_state[primary]\" />\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, computed, onMounted } from \"vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport { RepoStore } from \"./../js/repo.js\"\r\n\r\nconst props = defineProps({\r\n    row : { \r\n        type : [String, Number],\r\n        required : true\r\n    },\r\n    draggable : Boolean,\r\n    ischild : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n});\r\n\r\nconst store = reactive({ toggle_state : {}, branch : null });\r\n\r\nfunction toggle() {\r\n    const index = store.branch.primary.val;\r\n    store.toggle_state[index] = (store.toggle_state[index]) ? false : true;\r\n}\r\n\r\nconst children = computed(() => {\r\n    if (!store.branch) return [];\r\n    const id = store.branch.primary.val;\r\n    return (RepoStore.indexes[id]) ? RepoStore.indexes[id] : [];\r\n});\r\n\r\nconst primary = computed(() => {\r\n    if (!store.branch) return 0;\r\n    return store.branch.primary.val;\r\n});\r\n\r\nconst summary = computed(() => {\r\n    if (!store.branch) return \"\";\r\n    return store.branch.getSummary();\r\n});\r\n\r\nonMounted(() => {\r\n    store.branch = RepoStore.data[props.row];\r\n});\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.model-tree.branch {\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  margin: 6px 0;\r\n  background-color:#111111;\r\n}\r\n\r\n.tree .ide-block {\r\n\tdisplay : none;\r\n}\r\n\r\n.dragArea {\r\n  min-height: 50px;\r\n  outline: 1px solid #777777;\r\n}\r\n\r\n\r\n</style>","<template >\r\n  <div class=\"ptj-tree ptj-drop-target'\" ref=\"treeroot\">\r\n    <ptj-tree-node v-for=\"(key, index) in RepoStore.indexes['0']\" :key=\"index\" :row=\"key\"  />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted } from 'vue'\r\nimport PTJDragDrop from \"./../js/dragndrop.js\"\r\nimport PtjTreeNode from \"./ptj-tree-node.vue\"\r\nimport { RepoStore } from \"./../js/repo.js\"\r\n\r\n\r\nonMounted(() => {\r\n    if (RepoStore.meta.sortable) {\r\n        PTJDragDrop.initDD({\r\n            handle : '.ptj-drag-handle',\r\n            drag_target : '.ptj-draggable',\r\n            drop_target : '.ptj-drop-target',\r\n            callback : saveSort\r\n        });\r\n    }\r\n});\r\n\r\n\r\nfunction saveSort() {\r\n\r\n}\r\n\r\n</script>\r\n","<template>\r\n    <input class=\"ptj-checkbox\" type=\"checkbox\" :true-value=\"1\" :false-value=\"0\" :name=\"field.name\" v-model=\"field.change\" v-if=\"ctype=='edit'\">\r\n    <select v-else-if=\"ctype=='filter'\" :name=\"field.name\" v-model=\"field.change1\" class=\"ptj-filter-form-checkbox\">\r\n        <option :value='0'>{{ \"All\" }}</option>\r\n        <option :value='1'>{{ \"Checked\" }}</option>\r\n        <option :value='2'>{{ \"Unchecked\" }}</option>\r\n    </select>\r\n    <a v-else @click=\"submit()\"><span class=\"material-icons\">{{ icon }}</span></a>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from \"vue\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport client from \"./../js/client.js\"\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        type : String,\r\n        default : 'view'\r\n    }\r\n});\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n\r\nfunction submit() {\r\n    let params = {};\r\n    params[\"--id\"] = Map.key;\r\n    params[props.field.name] = (props.field.val == 1) ? 0 : 1;\r\n    if (Map.key) params[\"--id\"] = Map.key;\r\n    return client.put(\"/data/\" + Map.route + \"/\" + Map.model, params)\r\n    .then(() => {\r\n        props.field.val = (props.field.val == 1) ? 0 : 1;\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n\r\nlet icon = computed(() => {\r\n    if (props.field.val == 1) {\r\n        return \"check_circle_outline\";\r\n    } else {\r\n        return \"highlight_off\"\r\n    }\r\n});\r\n</script>","<template>\r\n    <select v-if=\"ctype=='edit'\" \r\n        v-model=\"field.change\"\r\n        v-bind=\"field.atts\"\r\n        :name=\"field.name\"\r\n         @blur=\"field.validateon = true\"\r\n        >\r\n        <option value=\"0\" selected>Select Option</option>\r\n        <option v-for=\"option in field.options\" :key=\"option.key\" :value=\"option.key\">{{ option.value }}</option>\r\n  </select>\r\n  <ptj-multiple-select v-else-if=\"ctype=='filter'\" :field=\"field\" />\r\n  <span v-else>{{ field.getOption(field.val) }}</span>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { computed } from \"vue\"\r\nimport PtjMultipleSelect from \"./ptj-multiple-select.vue\"\r\n\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        default : 'view',\r\n        type : String\r\n    }\r\n});\r\n\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n\r\nlet options = computed(() => {\r\n    return props.field.options;\r\n});\r\n\r\n\r\n\r\n</script>","<template>\r\n  <input v-if=\"ctype=='edit'\"\r\n        :name=\"field.name\" \r\n        type=\"datetime-local\" \r\n        v-model=\"field.change\" \r\n        v-bind=\"field.atts\"\r\n        @blur=\"field.validateon = true\">\r\n   <div v-else-if=\"ctype=='filter'\">\r\n      <input \r\n        type=\"datetime-local\" \r\n        :name=\"field.name + 'min'\"\r\n        v-bind=\"field.atts\"\r\n        v-model=\"field.change1\">\r\n        -\r\n        <input \r\n            type=\"datetime-local\" \r\n            :name=\"field.name + 'max'\"\r\n            v-bind=\"field.atts\"\r\n            v-model=\"field.change2\"\r\n        >\r\n   </div>\r\n   <span v-else>{{ field.val }}</span>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from \"vue\"\r\nconst props = defineProps({\r\n    field : Object,\r\n    type : {\r\n        default : 'view',\r\n        type : String\r\n    }\r\n});\r\n\r\nlet ctype = computed(() => {\r\n    return (props.type == 'edit' && props.field.immutable) ? \"view\" : props.type;\r\n});\r\n</script>\r\n","<template>\r\n    <table class=\"ptj-table\" :class=\"Map.model\">\r\n    <thead>\r\n        <tr class=\"ptj-table-header\">\r\n        <th v-for=\"cell in RepoStore.meta.cells\" \r\n            v-show=\"cell.summary\" \r\n            :key=\"cell.name\" \r\n            class=\"ptj-table-header-cell\"\r\n            :class=\"cell.name\"\r\n            @click=\"orderBy(cell.name);\"\r\n        >{{ cell.label }}\r\n            <span v-if=\"order.name == cell.name && order.dir == 'asc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_up</span>\r\n            <span v-if=\"order.name == cell.name && order.dir == 'desc'\" \r\n                class=\"material-icons\" \r\n                >keyboard_arrow_down</span>\r\n        </th>\r\n        <th class=\"ptj-actions\">&nbsp;</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"(obj, rindex) in RepoStore.data\" :key=\"rindex\" class=\"ptj-table-row\">\r\n        <td v-for=\"(field, name) in obj.cells\" :key=\"name\" v-show=\"field.summary\" class=\"ptj-table-cell\" :class=\"field.meta.name\">\r\n          <ptj-asset v-if=\"field.type=='asset'\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" :field=\"field\" />\r\n          <ptj-id v-else-if=\"field.type=='id'\" :field=\"field\"  />\r\n          <ptj-time v-else-if=\"field.type=='time'\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" :field=\"field\"  />\r\n        </td>\r\n        <td class=\"ptj-actions\" >\r\n            <ptj-button :route=\"{state:'primary', key:obj.primary}\"><span class=\"material-icons\">arrow_forward_ios</span></ptj-button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport { reactive } from \"vue\"\r\nimport { RepoStore } from \"./../js/repo.js\"\r\n\r\n\r\n\r\nlet order = reactive( { name : '', dir : ''});\r\n\r\nfunction orderBy(name) {\r\n    if (RepoStore.meta.pages > 0) {\r\n        order.dir = (!order.name != name || order.dir  == \"desc\") ? \"asc\" : \"desc\";\r\n        order.name = name;\r\n        let sort = [];\r\n        sort[order.name] = order.dir;\r\n        RepoStore.meta.sort = sort;\r\n        load();\r\n    } else {\r\n        //custom sort on the table\r\n        if (order.name != name || order.dir == \"desc\") {\r\n            RepoStore.data.sort(function(x, y) {\r\n                let xval = x.getCell(name).toVal();\r\n                let yval = y.getCell(name).toVal();\r\n                if (xval < yval) {\r\n                    return -1;\r\n                } else if (xval > yval) {\r\n                    return 1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n            order.name = name;\r\n            order.dir = \"asc\";\r\n        } else {\r\n            RepoStore.data.sort(function(x, y) {\r\n                let xval = x.getCell(name).toVal();\r\n                let yval = y.getCell(name).toVal();\r\n                if (xval < yval) {\r\n                    return 1;\r\n                } else if (xval > yval) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n            order.name = name;\r\n            order.dir = \"desc\";\r\n        }\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n\r\n</style>","<template>\r\n    <div v-for=\"(combinations, index) in getIndexCombinations\" :key=\"index\">\r\n     <h3><span\r\n        v-for=\"(tag, index) in combinations.tags\"\r\n        :key=\"index\"\r\n        >{{ tag }}&nbsp;</span></h3>\r\n    <ul>\r\n       <li v-for=\"ckey in combinations.data\" :key=\"ckey\">\r\n         <ptj-button :route=\"route\">\r\n          {{  data[ckey].getSummary() }}\r\n         </ptj-button>\r\n       </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { computed, inject } from \"vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\ninject(\"data\");\r\ninject(\"indexes\");\r\n\r\nfunction getCombinations(tag, data, combos) {\r\n    const ncombos = [];\r\n    if (combos.length == 0) {\r\n        for(let d in data) {\r\n        ncombos.push({ tags : [ data[d].display ], data : data[d].contains});\r\n        }\r\n    } else {\r\n        for (let c of combos) {\r\n          for(let d in data) {\r\n            let tags = c.tags;\r\n            tags.push(d.display);\r\n            ncombos.push({ tags : tags, data : c.data.filter( value => data[d].contains.includes(value))});\r\n          }\r\n        }\r\n    }\r\n    return ncombos;\r\n}\r\n\r\nconst getIndexCombinations = computed(() => { \r\n    let combos = [];\r\n    for (let group in indexes) {\r\n        combos = this.getCombinations(group, indexes[group], combos);\r\n    }\r\n    return combos;\r\n});\r\n</script>\r\n\r\n","<template>\r\n    <div class=\"ptj-widget-window\">\r\n        <div class=\"ptj-widget-window-header\">\r\n            <h1 class=\"ptj-widget-window-title\">{{ title }}\r\n            <a class=\"ptj-widget-window-toggle\" @click=\"toggleWidget\"><span class=\"material-icons\">more_horiz</span></a>\r\n            </h1>\r\n        </div>\r\n        <div class=\"ptj-widget-window-body\" v-show=\"show\">\r\n            <slot :toggleWidget=\"toggleWidget\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { ref } from \"vue\"\r\n\r\ndefineProps({\r\n    title : String,\r\n    active : {\r\n        type : Boolean,\r\n        default : false\r\n    }\r\n});\r\n\r\nlet show = ref(false);\r\n\r\nfunction toggleWidget() {\r\n    show.value = (show.value) ? false : true;\r\n}\r\n\r\n</script>","<template>\r\n <ptj-widget title=\"search\" v-slot=\"slotScope\">\r\n   <form @submit.prevent=\"searchData\" class=\"ptj-filter-form\">\r\n      <ptj-form-row v-for=\"field in RepoStore.search.cells\" :key=\"field.name\" :field=\"field\" v-show=\"field.type != 'id' || Object.keys(field.options).length > 0\">\r\n          <ptj-id v-if=\"field.type=='id'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.type=='time'\" type=\"filter\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" type=\"filter\" :field=\"field\" />\r\n          <a @click=\"field.reset()\">x</a>\r\n      </ptj-form-row>\r\n      <input type=\"submit\" value=\"Submit\" class=\"ptj-filter-form-submit\" @click=\"slotScope.toggleWidget\">\r\n  </form>\r\n </ptj-widget>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjWidget from \"./ptj-widget.vue\"\r\nimport { addToHistory } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { RepoStore, loadRepo } from \"./../js/repo.js\"\r\n\r\n\r\nfunction searchData() {\r\n    RepoStore.search.applyChangeData();\r\n    Map.params = RepoStore.search.convertToParams();\r\n    addToHistory();\r\n    loadRepo();\r\n}\r\n\r\n\r\n</script>\r\n<style scoped>\r\n.error {\r\n  color : red;\r\n}\r\n\r\n</style>\r\n\r\n","<template>\r\n <div class=\"ptj-pagination\">\r\n     <a v-for=\"index in RepoStore.max_pages\" \r\n     :key=\"index\" \r\n     @click=\"changePage(index - 1)\" \r\n     :class=\"getActiveClass(index)\">{{ index }}</a>\r\n </div>\r\n</template>\r\n<script setup>\r\nimport { addToHistory } from \"./../js/route.js\"\r\nimport { loadRepo, RepoStore } from \"./../js/repo.js\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\nfunction getActiveClass(index) {\r\n    return (index - 1 == Map.params._page ?? 0) ? \"ptj-pagination-active\" : \"\";\r\n}\r\n\r\nfunction changePage(page) {\r\n    Map.params_page = page;\r\n    addToHistory();\r\n    loadRepo();\r\n}\r\n</script>","<template>\r\n    <div class=\"ptj-progress-bar-wrapper\">\r\n        <div class=\"ptj-progress-holder\">\r\n            <div class=\"ptj-progress-bar\" :style=\"'width:' + num + 'px'\">&nbsp;</div> \r\n        </div>   \r\n        <span>{{ num }}%</span>\r\n    </div> \r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { computed } from \"vue\"\r\n\r\nconst props = defineProps({\r\n    total : Number,\r\n    progress : Number\r\n});\r\n\r\n\r\nconst num = computed(() => {\r\n    let num = Math.floor((props.progress / props.total) * 100);\r\n    return (isNaN(num)) ? 0 : num;\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n .ptj-progress-holder {\r\n     width : 100%;\r\n     min-height : 10px;\r\n     position : relative;\r\n     display : flex;\r\n     align-items: stretch;\r\n     padding : 2px;\r\n }\r\n\r\n .ptj-progress-bar {\r\n     width : 0;\r\n     height : 100%;\r\n     position : relative;\r\n     line-height : 100%;\r\n }\r\n\r\n\r\n</style>\r\n","<template>\r\n <form @submit.prevent=\"submit\" v-show=\"fstate==0\" class=\"ptj-form\" :class=\"Map.model + ' ' + Map.state\">\r\n    <div class=\"ptj-form-error\" v-show=\"globalerror\">{{ globalerror }}</div>\r\n    <ptj-form-row v-for=\"field in cdata.cells\" :key=\"field.name\" :field=\"field\">\r\n          <ptj-asset v-if=\"field.type=='asset'\" type=\"edit\"  :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.type=='number'\" type=\"edit\"  :field=\"field\"/>\r\n          <ptj-flag v-else-if=\"field.type=='flag'\" type=\"edit\"  :field=\"field\" />\r\n          <ptj-id v-else-if=\"field.type=='id'\" type=\"edit\"  :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.type=='time'\" type=\"edit\"   :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.type=='string'\" type=\"edit\"  :field=\"field\" />\r\n    </ptj-form-row>\r\n    <input type=\"submit\" value=\"Submit\" class=\"ptj-form-submit\">\r\n    <ptj-progress-bar v-show=\"fstate == 1\" :total=\"progress.total\" :progress=\"progress.progress\" />\r\n  </form>\r\n  \r\n</template>\r\n\r\n<script setup>\r\n\r\nimport {ref, reactive, onMounted } from \"vue\" \r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjProgressBar from \"./ptj-progress-bar.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport client from \"./../js/client.js\"\r\nimport { DataRow } from \"./../js/datarow.js\"\r\nimport { MetaRow } from \"./../js/metarow.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { loadRepo } from \"./../js/repo.js\"\r\n\r\nconst emit = defineEmits(['close']);\r\nlet globalerror = ref('');\r\n\r\nconst cdata = reactive(new DataRow());\r\n\r\n\r\nconst progress = reactive({ total : 0, progress : 0});\r\n\r\nlet fstate = 0;\r\n\r\n\r\n\r\nconst load = async() => {\r\n    return client.post(\"/route/\" + Map.route + \"/\" + Map.model)\r\n    .then(response => {\r\n        const meta = new MetaRow();\r\n        meta.map(response.fields);\r\n        cdata.applyMetaRow(meta);\r\n\r\n        let promises = [];\r\n        for(let i in meta.cells) {\r\n            if (meta.cells[i].type == 'id' && meta.cells[i].reference) {\r\n                let url = \"/reference/\" + Map.model + \"/\" + i;\r\n                promises.push(meta.cells[i].setReferenceOptions(url, {\"--parentid\":Map.key}));\r\n            }\r\n        }\r\n        return Promise.all(promises);\r\n    }).catch(e => console.log(e));\r\n}\r\n\r\n\r\nfunction submit() {\r\n\r\n    fstate = (progress.total > 0) ? 1 : 2;\r\n    cdata.clearErrors();\r\n    let key = 0;\r\n    let ndata = cdata.serialize();\r\n    if (Map.key) ndata[\"--parentid\"] = Map.key;\r\n    return client.post(\"/data/\" + Map.route + \"/\" + Map.model, ndata)\r\n    .then(response=>{\r\n        key = response[\"--id\"];\r\n        let promises = [];\r\n        let assets = cdata.getCellByType(\"asset\");\r\n        progress.total = 0;\r\n        for(let i in assets) {\r\n            const val = assets[i].val;\r\n            if (!val) continue;\r\n            ++progress.total;\r\n            const asset = new Asset();\r\n            asset.url = \"/asset/\" + Map.model + \"/\" + i + \"/\" + response[\"--id\"];\r\n            let promise = asset.saveFile(assets[i].val)\r\n            .then(() => {\r\n                ++progress.progress;\r\n            });\r\n            promises.push(promise);\r\n        }\r\n        return Promise.all(promises);\r\n    })\r\n    .then(() => {\r\n        cdata.reset();\r\n        loadRepo();\r\n        emit(\"close\");\r\n    })\r\n    .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n            console.log(err);\r\n        fstate = 0;\r\n        if (typeof err == \"string\") {\r\n            globalerror = err;\r\n        } else {\r\n            cdata.setErrors(err);\r\n        }\r\n    });\r\n}\r\n\r\nonMounted(async () => {\r\n    await load();\r\n});\r\n\r\n</script>\r\n","<template>\r\n  <div :class=\"[Map.model, Map.state]\">\r\n    <button @click=\"toggleCreate()\">Create</button>\r\n    <ptj-modal :active=\"show_create\" @close=\"toggleCreate()\">\r\n        <ptj-create-form @close=\"toggleCreate()\" />\r\n    </ptj-modal>\r\n    <ptj-filter-form  v-if=\"settings.disable_filter != true\"/>\r\n    <ptj-selectfields v-if=\"settings.disable_selectfields != true\" />\r\n    <ptj-tree v-if=\"RepoStore.component=='tree'\" />\r\n    <ptj-list v-else-if=\"RepoStore.component=='list'\" />\r\n    <ptj-table v-else-if=\"RepoStore.component=='table'\" />\r\n    <ptj-pagination v-if=\"RepoStore.max_pages > 0\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { ref, onMounted } from \"vue\"\r\nimport PtjTree from \"./ptj-tree.vue\"\r\nimport PtjTable from \"./ptj-table.vue\"\r\nimport PtjList from \"./ptj-list.vue\"\r\nimport PtjFilterForm from \"./ptj-filter-form.vue\"\r\nimport PtjSelectfields from \"./ptj-selectfields.vue\"\r\nimport PtjPagination from \"./ptj-pagination.vue\"\r\nimport PtjModal from \"./ptj-modal.vue\"\r\nimport PtjCreateForm from \"./ptj-create-form.vue\"\r\nimport { RepoStore, loadRepo } from \"./../js/repo.js\"\r\nimport { getModelSettings } from \"./../js/route.js\" \r\n\r\n\r\nconst show_create = ref(false);\r\n\r\nlet settings = getModelSettings();\r\n\r\nfunction toggleCreate() {\r\n    show_create.value = (show_create.value) ? false : true;\r\n}\r\n\r\n\r\nonMounted(async () => {\r\n    await loadRepo();\r\n});\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.table, .thead, .tbody, .tr {\r\n    width : 100%;\r\n}\r\n\r\n</style>","<template>\r\n    <p>Are you sure you want to permanently delete this record? Type {{ check_str }} in the box below to continue.</p>\r\n    <input type=\"text\" :placeholder=\"check_str\" @keyup=\"checkStatus\" v-model=\"delval\">\r\n    <button :disabled=\"disabled\" @click=\"del\">Delete</button>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport client from \"./../js/client.js\"\r\nimport { ref } from \"vue\";\r\nimport { redirect } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\n\r\nconst props = defineProps({\r\n    check_str : {\r\n        type : String,\r\n        default : \"delete\"\r\n    },\r\n    parentid : {\r\n        default : 0\r\n    }\r\n});\r\n\r\nconst emits = defineEmits(['close']);\r\n\r\nlet delval = ref(\"\");\r\nlet disabled = ref(true);\r\n\r\nfunction checkStatus() {\r\n    disabled.value = (delval.value == props.check_str) ? false : true;\r\n}\r\n\r\nfunction del() {\r\n    client.delete(\"/data/\" + Map.route + \"/\" + Map.model, {\"--id\":Map.key})\r\n    .then(res => {\r\n        Map.state = \"parent\";\r\n        Map.key = props.parentid.val;\r\n        redirect();\r\n    })\r\n    .catch(e => console.log(e));\r\n}\r\n    \r\n</script>\r\n","<template>\r\n    <button v-if=\"RouteStore.route.perms.includes('put')\" @click=\"toggleState\">{{ next_state }}</button>\r\n    <button v-if=\"RouteStore.route.perms.includes('delete')\" @click=\"toggleDel\">Delete</button>\r\n    <ptj-modal :active=\"show_del\" @close=\"toggleDel()\">\r\n        <ptj-delete :parentid=\"store.data.parent\" @close=\"toggleDel()\" />\r\n    </ptj-modal>\r\n    <div class=\"ptj-primary\" :class=\"Map.model\">\r\n        <ptj-form-row v-for=\"field in store.data.cells\" :key=\"field.name\" :field=\"field\"> \r\n          <ptj-asset v-if=\"field.meta.type=='asset'\" :type=\"store.type\" :field=\"field\" />\r\n          <ptj-number v-else-if=\"field.meta.type=='number'\" :type=\"store.type\" :field=\"field\" />\r\n          <ptj-flag v-else-if=\"field.meta.type=='flag'\" :type=\"store.type\" :field=\"field\" />\r\n          <ptj-id v-else-if=\"field.meta.type=='id'\" :type=\"store.type\" :field=\"field\"  />\r\n          <ptj-time v-else-if=\"field.meta.type=='time'\" :type=\"store.type\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.meta.type=='string'\" :type=\"store.type\" :field=\"field\"  />\r\n        </ptj-form-row>\r\n        <input v-if=\"store.type =='edit'\" type=\"submit\" value=\"Submit\" class=\"ptj-form-submit\" @click=\"submit\">\r\n    </div>\r\n    <div class=\"ptj-children\">\r\n        <ptj-button v-for=\"action in RouteStore.route.children\" :key=\"action\" :route=\"{ model : action, state : 'parent'}\">\r\n            {{ action }}\r\n        </ptj-button>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport client from \"./../js/client.js\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjAsset from \"./ptj-asset.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjId from \"./ptj-id.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport { DataRow } from \"./../js/datarow.js\"\r\nimport { reactive, ref, computed, onMounted } from \"vue\"\r\nimport PtjDelete from \"./ptj-delete.vue\"\r\nimport PtjModal from \"./ptj-modal.vue\"\r\nimport PtjForm from \"./ptj-create-form.vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport { MetaRow } from \"./../js/metarow.js\"\r\nimport {RouteStore, getModelSettings } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\n  \r\n\r\n\r\nconst store = reactive({ data : new DataRow(), fstate : 0,  type : 'view', show_def : false, progress : { total : 0, progress : 0} });\r\n\r\nlet show_del = ref(false);\r\n\r\n\r\n\r\nfunction toggleState() {\r\n    store.type = (store.type == \"view\") ? \"edit\" : \"view\";\r\n}\r\n\r\nlet next_state = computed(() => {\r\n    return (store.type == \"edit\") ? \"view\" : \"edit\";\r\n});\r\n\r\nfunction toggleDel() {\r\n    show_del.value = (show_del.value) ? false : true;\r\n}\r\n\r\n\r\nfunction buildParams(meta_settings) {\r\n    let params = {};\r\n    if (Map.to) params.__to = Map.to;\r\n    if (Map.key) {\r\n        if (Map.key == \"first\") params.__limit = 1;\r\n        else params[\"--id\"] = Map.key;\r\n    }\r\n    if (meta_settings.fields) params.__fields = meta_settings.fields;\r\n    return params;\r\n}\r\n\r\n\r\nconst load = async() => {\r\n    let meta_settings = getModelSettings();\r\n    let params = buildParams(meta_settings);\r\n   \r\n    return client.get(\"/route/\" + Map.route + \"/\" + Map.model + \"/primary\", params)\r\n    .then(response => {\r\n        const meta = new MetaRow();\r\n        meta.map(response.fields, meta_settings.fields ?? []);\r\n        store.data.applyMetaRow(meta);\r\n    }).then(() => {\r\n        return client.get(\"/data/\" + Map.route + \"/\" + Map.model + \"/primary\", params);\r\n    }).then(response => {\r\n        store.data.row = response;\r\n        //set the change values as well for each row\r\n        for(let i in store.data.cells) {\r\n            store.data.cells[i].change = store.data.cells[i].val;\r\n        }\r\n    }).then(response => {\r\n        for(let i in store.data.cells) {\r\n            if (store.data.cells[i].type == \"id\" && store.data.cells[i].reference) {\r\n                let url = \"/reference/\" + Map.model + \"/\" + i;\r\n                store.data.cells[i].setReferenceOptions(url, {\"--id\" : Map.key});\r\n            }\r\n        }\r\n    }).catch(e => console.log(e));\r\n\r\n}\r\n\r\n\r\nfunction submit() {\r\n\r\n    store.fstate = (store.progress.total > 0) ? 1 : 2;\r\n    store.data.clearErrors();\r\n    let key = 0;\r\n    let ndata = store.data.serialize(true);\r\n    if (Object.keys(ndata).length == 0) {\r\n        toggleState();\r\n        return;\r\n    }\r\n    ndata[\"--id\"] = Map.key;\r\n    return client.put(\"/data/\" + Map.route + \"/\" + Map.model, ndata)\r\n    .then(response=>{\r\n        let promises = [];\r\n        let assets = store.data.getCellByType(\"asset\");\r\n        store.progress.total = 0;\r\n        for(let i in assets) {\r\n            const val = assets[i].val;\r\n            if (!val) continue;\r\n            ++store.progress.total;\r\n            const asset = new Asset();\r\n            asset.url = \"/asset/\" + Map.model + \"/\" + i + \"/\" + response[\"--id\"];\r\n            let promise = asset.saveFile(assets[i].val)\r\n            .then(() => {\r\n                ++store.progress.progress;\r\n            });\r\n            promises.push(promise);\r\n        }\r\n        return Promise.all(promises);\r\n    })\r\n    .then(() => {\r\n        for(let i in store.data.cells) {\r\n            store.data.cells[i].val = store.data.cells[i].change;\r\n        }\r\n    })\r\n    .then(() => {\r\n        toggleState();\r\n    })\r\n    .catch(err => {\r\n            //show error fields, mark fields as invalidated\r\n        store.fstate = 0;\r\n        if (typeof err == \"string\") {\r\n            globalerror = err;\r\n        } else {\r\n            store.data.setErrors(err);\r\n        }\r\n    });\r\n}\r\n\r\nonMounted(async () => {\r\n await load();\r\n});\r\n\r\n</script>","<template>\r\n <div class=\"ptj-account-handler\">\r\n    <form @submit.prevent=\"submit\" v-show=\"store.state=='login'\" class=\"ptj-login\">\r\n        <div class=\"ptj-form-error\" v-show=\"store.globalerror\">{{ store.globalerror }}</div>\r\n        <ptj-form-row v-for=\"field in store.login_data.cells\" :key=\"field.meta.name\" :field=\"field\">\r\n          <ptj-string type=\"edit\" :field=\"field\" />\r\n        </ptj-form-row>\r\n        <input type=\"submit\" value=\"Submit\" class=\"ptj-form-submit\">\r\n    </form>\r\n    <form  @submit.prevent=\"submit\" v-show=\"store.state=='create'\" class=\"ptj-register\">\r\n        <div class=\"ptj-form-error\" v-show=\"store.globalerror\">{{ store.globalerror }}</div>\r\n        <ptj-form-row v-for=\"field in store.register_data.cells\" :key=\"field.meta.name\" :field=\"field\">\r\n          <ptj-number v-if=\"field.meta.type=='number'\" type=\"edit\" :field=\"field\"/>\r\n          <ptj-flag v-else-if=\"field.meta.type=='flag'\" type=\"edit\" :field=\"field\" />\r\n          <ptj-time v-else-if=\"field.meta.type=='time'\" type=\"edit\" :field=\"field\" />\r\n          <ptj-string v-else-if=\"field.meta.type=='string'\" type=\"edit\" :field=\"field\" />\r\n        </ptj-form-row>\r\n        <input type=\"submit\" value=\"Submit\" class=\"ptj-form-submit\">\r\n    </form>\r\n </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport PtjFormRow from \"./ptj-form-row.vue\"\r\nimport PtjString from \"./ptj-string.vue\"\r\nimport PtjNumber from \"./ptj-number.vue\"\r\nimport PtjFlag from \"./ptj-flag.vue\"\r\nimport PtjTime from \"./ptj-time.vue\"\r\nimport { refresh } from \"./../js/route.js\"\r\nimport { Map } from \"./../js/map.js\"\r\nimport { reactive } from 'vue'\r\nimport { DataRow } from './../js/datarow.js';\r\nimport { MetaRow } from \"./../js/metarow.js\"\r\nimport client from \"./../js/client.js\"\r\n\r\nconst props = defineProps({\r\n    actions : []\r\n});\r\n\r\n\r\nconst store = reactive({\r\n    state : 'login',\r\n    active : true,\r\n    login_data : new DataRow(),\r\n    register_data : new DataRow(),\r\n    globalerror : ''\r\n});\r\n\r\n//load our modules\r\n\r\nclient.post(\"/route/\" + Map.route + \"/\" + Map.model)\r\n.then(response => {\r\n    let meta = new MetaRow();\r\n    meta.map(response.fields);\r\n    store.register_data.applyMetaRow(meta);\r\n});\r\n\r\nclient.post(\"/route/\" +  Map.route + \"/\" + Map.model + \"/login\")\r\n.then(response => {\r\n    let meta = new MetaRow();\r\n    meta.map(response.fields);\r\n    store.login_data.applyMetaRow(meta)\r\n});\r\n\r\n\r\nfunction submit() {\r\n    store.active = false;\r\n    store.globalerror = \"\";\r\n    if (store.state == \"login\") {\r\n        return client.post(\"/data/\" +  Map.route + \"/\" + Map.model + \"/login\", store.login_data.serialize(\"login\"))\r\n        .then(response => {\r\n            refresh();\r\n        })\r\n        .catch(e => {\r\n            store.globalerror = \"Incorrect username / password\";\r\n        })\r\n    } else {\r\n        return client.post(\"/data/\" + Map.route + \"/\" +  Map.model, store.register_data.serialize(\"post\"))\r\n        .then(response => {\r\n            refresh();\r\n        })\r\n        .catch(e => {\r\n            store.register_data.applyErrors(e);\r\n        });\r\n    }\r\n} \r\n</script>\r\n\r\n\r\n","<template>\r\n    <ptj-slug-trail />\r\n    <Suspense>\r\n        <template #default>\r\n            <div :class=\"[Map.model, Map.state]\">\r\n            <h1>{{ RouteStore.title }}</h1>\r\n            <component v-if=\"component\" :is=\"component\" />\r\n            </div>\r\n        </template>\r\n        <template #fallback>\r\n            <div>Loading ...</div>\r\n        </template>\r\n    </Suspense>\r\n</template>\r\n<script setup>\r\n\r\nimport { computed, onMounted } from \"vue\"\r\nimport PtjButton from \"./ptj-button.vue\"\r\nimport PtjSlugTrail from \"./ptj-slug-trail.vue\"\r\nimport { RouteStore, loadRoute, loadSlugTrail } from \"./../js/route.js\"\r\nimport PtjRepo from \"./ptj-repo.vue\"\r\nimport PtjPrimary from \"./ptj-primary.vue\"\r\nimport PtjAccountHandler from \"./ptj-account-handler.vue\"\r\n\r\n\r\nconst component = computed(() => {\r\n    if (!RouteStore.component) return null;\r\n    else if (RouteStore.component == \"ptj-primary\") return PtjPrimary;\r\n    else if (RouteStore.component == \"ptj-repo\") return PtjRepo;\r\n    else if (RouteStore.component == \"ptj-account-handler\") return PtjAccountHandler;\r\n});\r\n\r\n\r\n\r\n\r\nonMounted(() => {\r\n    loadSlugTrail();\r\n    return loadRoute();\r\n});\r\n\r\n</script>","let settings = {};\r\nimport client from \"./client.js\"\r\nimport { Map } from \"./map.js\"\r\nimport { initUser } from \"./user.js\"\r\nimport { initSettings} from \"./route.js\"\r\n\r\n\r\nexport function PtjRun(settings) {\r\n    if (!settings.client) {\r\n        throw \"Must set client settings\";\r\n    }\r\n\r\n    if (!settings.client.url) {\r\n        throw(\"No URL defined for client\");\r\n    }\r\n\r\n    client.initSettings(settings.client);\r\n\r\n    if (settings.map) {\r\n        Map.initSettings(settings.map);\r\n    }\r\n\r\n    initSettings(settings.models);\r\n\r\n    let role = (settings.user && settings.user.role) ? settings.user.role : \"\";\r\n    return initUser(role);\r\n}\r\n","import PTJUser from \"./presstojam/src/components/ptj-user.vue\"\r\nimport PTJRoute from \"./presstojam/src/components/ptj-router.vue\"\r\nimport { PtjRun } from \"./presstojam/src/js/controller.js\"\r\nimport Client from \"./presstojam/src/js/client.js\"\r\nimport { createApp } from \"vue\"\r\nimport { Map } from \"./presstojam/src/js/map.js\"\r\nimport { loadNav } from \"./presstojam/src/js/user.js\"\r\n \r\nexport function runApp(mount, user_settings) {\r\n    PtjRun(user_settings)\r\n    .then(() => {\r\n        return loadNav()\r\n    }).then(() => {\r\n        const app = createApp(PTJUser);\r\n        app.mount(mount);\r\n        return app;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n\r\nexport function runRoute(mount, user_settings) {\r\n    PtjRun(user_settings)\r\n    .then(() => {\r\n        const app = createApp(PTJRoute);\r\n        app.mount(mount);\r\n        return app;\r\n    }).catch(e => {\r\n        console.log(e);\r\n    });\r\n}\r\n\r\n\r\nexport function getClient(user_settings) {\r\n    Settings.regSettings(user_settings);\r\n    return Client;\r\n}\r\n\r\n"],"names":["main_url","custom_headers","initSettings","settings","url","name","run","headers","mode","cache","credentials","fetch","then","response","ok","json","get","data","params","URLSearchParams","i","Array","isArray","append","JSON","stringify","indexOf","toString","this","getprimary","post","body","put","patch","delete","Map","constructor","_route","_model","_state","_key","_to","_params","_settings","_base","_default","_changes","Object","keys","forEach","property","defineProperty","substring","set","newValue","action_map","id","model","state","to","hasChange","key","hasOwnProperty","reset","route","resetChanges","convertToURL","param_str","push","length","join","base","convertFromURL","url_obj","URL","window","location","href","pathname","replace","parts","split","_self","searchParams","value","pop","isNaN","Error","getAll","default","apply","dictionary","getFieldDictionary","field","def","fields","dfield","model_settings","onpopstate","runRoute","RouteStore","reactive","component","title","parent","slug","getModelSettings","loadRoute","client","dict","children","perms","catch","e","console","log","loadSlugTrail","parseInt","refresh","redirect","addToHistory","url_str","protocol","host","history","pushState","document","props","custom_val","ref","selectCustom","change1","change","filter","item","styleInject","css","insertAt","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","onMounted","reference","setReferenceOptions","show_list","display","symbol","toggleList","select","target","getAttribute","ctype","computed","immutable","tag","contains","enums","regEx","RegExp","exp","test","isEnum","encrypted","html","max","options","atts","readonly","placeholder","meta","User","init","login","user","NavStore","cats","routes","logout","Client","checkLoginStatus","is_expired","setTimeout","loadNav","cat","route_name","getDefault","PTJDragNDrop","_handle","handle","_drop_target","drop_target","_drag_target","drag_target","_call_back","callback","_x","_y","_offset_x","_offset_y","_judder","judder","_drag_node","_drop_node","_tree","tree","isJudder","x","y","dx","dy","getDirection","offset","elem","rect","getBoundingClientRect","win","ownerDocument","defaultView","top","pageYOffset","left","pageXOffset","insertAfter","drag_id","drop_id","circular","sort","nextElementSibling","node","dragStart","ev","targ","closest","dataTransfer","dropEffect","clientX","clientY","isDroppable","dragEnter","preventDefault","dir","dragOver","dragEnd","setAttribute","drop","initDD","drag","querySelectorAll","el","addAttribute","addEventListener","main","Errors","Field","obj","_name","_type","_atts","_confirm","_reference","_label","_store","summary","_default_val","_immutable","_encrypted","_min","_max","_contains","_notcontains","_recursive","_error","toLowerCase","val","validation","min","notcontains","getOption","opt","vals","clean","calcValue","validateSize","validate","err","nhas","match","has","MetaRow","_cells","_children","_states","_active","_init","index","addChild","child","addState","action","_actions","resetSummary","arr","mapField","recursive","map","limited_fields","getCellByType","cells","DataCell","_meta","error","is_validate_on","meta_keys","getOwnPropertyNames","includes","showError","default_val","addParam","change2","addAPIParam","validateon","on","store","isSummary","DataRow","metarow","_metarow","_ids","applyMetaRow","primary","clone","row","getSummary","str","cell","serialize","changes_only","clearErrors","setErrors","convertToParams","applyChangeData","RepoStore","indexes","search","indexData","ckey","mapRepoData","loadRepo","async","meta_settings","max_pages","__to","limit","__limit","__fields","group","_page","buildParams","Math","ceil","count","toggle_state","branch","toggle","saveSort","sortable","PTJDragDrop","icon","order","pages","load","xval","getCell","toVal","yval","inject","getIndexCombinations","combos","getCombinations","show","toggleWidget","searchData","getActiveClass","page","params_page","num","floor","progress","total","globalerror","cdata","fstate","submit","ndata","promises","assets","asset","Asset","promise","saveFile","Promise","all","emit","show_create","toggleCreate","delval","disabled","checkStatus","check_str","del","res","parentid","show_def","show_del","toggleState","next_state","toggleDel","active","login_data","register_data","applyErrors","PtjPrimary","PtjRepo","PtjAccountHandler","PtjRun","models","role","initUser","user_settings","Settings","regSettings","mount","app","createApp","PTJUser","PTJRoute"],"mappings":"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"}